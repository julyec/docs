const e=JSON.parse('{"key":"v-6076e56a","path":"/guide/model-form-field-management.html","title":"Management of form fields","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Extending custom components","slug":"extending-custom-components","link":"#extending-custom-components","children":[{"level":3,"title":"Integrated rich text editor wangEditor","slug":"integrated-rich-text-editor-wangeditor","link":"#integrated-rich-text-editor-wangeditor","children":[]},{"level":3,"title":"Integrated rich text editor ckeditor","slug":"integrated-rich-text-editor-ckeditor","link":"#integrated-rich-text-editor-ckeditor","children":[]},{"level":3,"title":"Integrated PHP editor","slug":"integrated-php-editor","link":"#integrated-php-editor","children":[]}]},{"level":2,"title":"Common methods","slug":"common-methods","link":"#common-methods","children":[{"level":3,"title":"Process user-entered form values (prepareInputValue)","slug":"process-user-entered-form-values-prepareinputvalue","link":"#process-user-entered-form-values-prepareinputvalue","children":[]},{"level":3,"title":"Process the value of the field to be displayed (formatFieldData)","slug":"process-the-value-of-the-field-to-be-displayed-formatfielddata","link":"#process-the-value-of-the-field-to-be-displayed-formatfielddata","children":[]},{"level":3,"title":"Get the element CSS selector (getElementClassSelector)","slug":"get-the-element-css-selector-getelementclassselector","link":"#get-the-element-css-selector-getelementclassselector","children":[]},{"level":3,"title":"JS code","slug":"js-code","link":"#js-code","children":[]}]}],"git":{"createdTime":1701780913000,"updatedTime":1701780913000,"contributors":[{"name":"Moments","email":"554676262@qq.com","commits":1}]},"readingTime":{"minutes":3.76,"words":1128},"filePathRelative":"guide/model-form-field-management.md","localizedDate":"December 5, 2023","excerpt":"<h1> Management of form fields</h1>\\n<h2> Extending custom components</h2>\\n<p>It is recommended to use the <code>Dcat.init</code> method to listen and initialize the <code>JS</code> code of the form component, otherwise it may not be compatible with dynamically generated fields such as <code>Form::hasMany</code> and <code>Form::array</code>. Form Type.</p>"}');export{e as data};
