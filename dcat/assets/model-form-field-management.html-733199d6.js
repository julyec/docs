import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as u,b as s,d as n,e as a,w as c,a as e}from"./app-98225aba.js";const r={},d=e('<h1 id="management-of-form-fields" tabindex="-1"><a class="header-anchor" href="#management-of-form-fields" aria-hidden="true">#</a> Management of form fields</h1><h2 id="extending-custom-components" tabindex="-1"><a class="header-anchor" href="#extending-custom-components" aria-hidden="true">#</a> Extending custom components</h2><p>It is recommended to use the <code>Dcat.init</code> method to listen and initialize the <code>JS</code> code of the form component, otherwise it may not be compatible with dynamically generated fields such as <code>Form::hasMany</code> and <code>Form::array</code>. Form Type.</p><h3 id="integrated-rich-text-editor-wangeditor" tabindex="-1"><a class="header-anchor" href="#integrated-rich-text-editor-wangeditor" aria-hidden="true">#</a> Integrated rich text editor wangEditor</h3>',4),k={href:"http://www.wangeditor.com/",target:"_blank",rel:"noopener noreferrer"},m=s("code",null,"dcat-admin",-1),v=s("code",null,"ckeditor",-1),g=s("code",null,"editor",-1),b={href:"https://github.com/wangfupeng1988/wangEditor/releases",target:"_blank",rel:"noopener noreferrer"},h=s("code",null,"public/vendor/wangEditor-4.7.1",-1),f=e(`<p>Create a new component class <code>app/Admin/Extensions/Form/WangEditor.php</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Extensions<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>Field</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">WangEditor</span> <span class="token keyword">extends</span> <span class="token class-name">Field</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$view</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;admin.wang-editor&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>New view file <code>resources/views/admin/wang-editor.blade.php</code>ï¼š</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;form-group&#39;]}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;label&#39;]}} control-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{$label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;field&#39;]}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        @include(&#39;admin::form.error&#39;)

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">{!!</span> <span class="token attr-name">$attributes</span> <span class="token attr-name">!!}</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{!! $value !!}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$name}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ old($column, $value) }}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

        @include(&#39;admin::form.help-block&#39;)

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- script tags with the &quot;init&quot; attribute will automatically listen dynamically for element generation using the Dcat.init() method --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">require</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@wang-editor<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{!! $selector !!}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> <span class="token constant">E</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>wangEditor
    <span class="token comment">// The id variable is automatically generated by Dcat.init() and is a unique random string    </span>
    <span class="token keyword">var</span> editor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">E</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    editor<span class="token punctuation">.</span>config<span class="token punctuation">.</span>zIndex <span class="token operator">=</span> <span class="token number">0</span>
    editor<span class="token punctuation">.</span>config<span class="token punctuation">.</span>uploadImgShowBase64 <span class="token operator">=</span> <span class="token boolean">true</span>
    editor<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">html</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parents</span><span class="token punctuation">(</span><span class="token string">&#39;.form-field&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;input[type=&quot;hidden&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    editor<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then register into <code>dcat-admin</code> and add the following code to <code>app/Admin/bootstrap.php</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Extensions<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>WangEditor</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token comment">// Register front-end component aliases</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@wang-editor&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token comment">// To facilitate the demonstration effect, here directly loaded CDN link, the actual development can be downloaded to the server to load</span>
    <span class="token string single-quoted-string">&#39;js&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;https://cdn.jsdelivr.net/npm/wangeditor@4.7.1/dist/wangEditor.min.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;editor&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">WangEditor</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Calling:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="integrated-rich-text-editor-ckeditor" tabindex="-1"><a class="header-anchor" href="#integrated-rich-text-editor-ckeditor" aria-hidden="true">#</a> Integrated rich text editor ckeditor</h3>`,9),q={href:"http://ckeditor.com/download",target:"_blank",rel:"noopener noreferrer"},w=s("code",null,"/public/packages/",-1),y=e(`<p>Then create a new extension file <code>app/Admin/Extensions/Form/CKEditor.php</code>:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Extensions<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>Field</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">CKEditor</span> <span class="token keyword">extends</span> <span class="token class-name">Field</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$view</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;admin.ckeditor&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>New view <code>resources/views/admin/ckeditor.blade.php</code>:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;form-group&#39;]}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;label&#39;]}} control-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{$label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;field&#39;]}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        @include(&#39;admin::form.error&#39;)

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ $name}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ $placeholder }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">{!!</span> <span class="token attr-name">$attributes</span> <span class="token attr-name">!!}</span> <span class="token punctuation">&gt;</span></span>{!! $value !!}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>
        
        @include(&#39;admin::form.help-block&#39;)

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">require</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@ckeditor<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{!! $selector !!}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">ckeditor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then in <code>app/Admin/bootstrap.php</code>, import the extension:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Extensions<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>CKEditor</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token comment">// Register front-end component aliases</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@ckeditor&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;js&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;/packages/ckeditor/ckeditor.js&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;/packages/ckeditor/adapters/jquery.js&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ckeditor&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">CKEditor</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then you can use it in a form:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">ckeditor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="integrated-php-editor" tabindex="-1"><a class="header-anchor" href="#integrated-php-editor" aria-hidden="true">#</a> Integrated PHP editor</h3>`,9),x={href:"http://codemirror.net/index.html",target:"_blank",rel:"noopener noreferrer"},_={href:"http://codemirror.net/mode/php/",target:"_blank",rel:"noopener noreferrer"},$={href:"http://codemirror.net/codemirror.zip",target:"_blank",rel:"noopener noreferrer"},E=s("code",null,"public/packages/codemirror-5.20.2",-1),F=e(`<p>Create a new component class <code>app/Admin/Extensions/Form/PHPEditor.php</code>:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Extensions<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>Field</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">PHPEditor</span> <span class="token keyword">extends</span> <span class="token class-name">Field</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$view</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;admin.php-editor&#39;</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),C={href:"https://github.com/jqhph/dcat-admin/blob/master/src/Form/Field/Editor.php",target:"_blank",rel:"noopener noreferrer"},A=e(`<p>Creating View <code>resources/views/admin/php-editor.blade.php</code>:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;form-group&#39;]}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;label&#39;]}} control-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{$label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;field&#39;]}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        @include(&#39;admin::form.error&#39;)

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ $class }}<span class="token punctuation">&quot;</span></span>   <span class="token attr-name">{!!</span> <span class="token attr-name">$attributes</span> <span class="token attr-name">!!}</span> <span class="token punctuation">&gt;</span></span>{!! $value !!}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$name}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ old($column, $value) }}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

        @include(&#39;admin::form.help-block&#39;)
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">require</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@phpeditor<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{!! $selector !!}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> Editor <span class="token operator">=</span> CodeMirror<span class="token punctuation">.</span><span class="token function">fromTextArea</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">lineNumbers</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;text/x-php&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">extraKeys</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;Tab&quot;</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">cm</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                cm<span class="token punctuation">.</span><span class="token function">replaceSelection</span><span class="token punctuation">(</span><span class="token string">&quot;    &quot;</span> <span class="token punctuation">,</span> <span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Editor<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Editor<span class="token punctuation">,</span> changes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> val <span class="token operator">=</span> Editor<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//console.log(val);</span>
        $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parents</span><span class="token punctuation">(</span><span class="token string">&#39;.form-field&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;input[type=&quot;hidden&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finally find the file <code>app/Admin/bootstrap.php</code>, if the file does not exist, please update <code>dcat-admin</code>, then create the file, add the following code:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;?php

use App\\Admin\\Extensions\\Form\\PHPEditor;
use Dcat\\Admin\\Form;

Admin::asset()-&gt;alias(&#39;@phpeditor&#39;, [
    &#39;js&#39; =&gt; [
        &#39;/packages/codemirror-5.20.2/lib/codemirror.js&#39;,
        &#39;/packages/codemirror-5.20.2/addon/edit/matchbrackets.js&#39;,
        &#39;/packages/codemirror-5.20.2/mode/htmlmixed/htmlmixed.js&#39;,
        &#39;/packages/codemirror-5.20.2/mode/xml/xml.js&#39;,
        &#39;/packages/codemirror-5.20.2/mode/javascript/javascript.js&#39;,
        &#39;/packages/codemirror-5.20.2/mode/css/css.js&#39;,
        &#39;/packages/codemirror-5.20.2/mode/clike/clike.js&#39;,
        &#39;/packages/codemirror-5.20.2/mode/php/php.js&#39;,
    ],
    &#39;css&#39; =&gt; &#39;/packages/codemirror-5.20.2/lib/codemirror.css&#39;,
]);

Form::extend(&#39;php&#39;, PHPEditor::class);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),j=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$form-&gt;php(&#39;code&#39;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>In this way, you can add as many <code>form</code> components as you want.</p><h2 id="common-methods" tabindex="-1"><a class="header-anchor" href="#common-methods" aria-hidden="true">#</a> Common methods</h2><p>The form component is the most complex component in <code>Dcat Admin</code>, the following is a list of methods that may be needed to extend the form component</p><h3 id="process-user-entered-form-values-prepareinputvalue" tabindex="-1"><a class="header-anchor" href="#process-user-entered-form-values-prepareinputvalue" aria-hidden="true">#</a> Process user-entered form values (prepareInputValue)</h3><p>The <code>prepareInputValue</code> method processes the form values entered by the user and does not do any processing by default. This method is executed after the <code>Form</code> form&#39;s <code>saving</code> event is fired and before the <code>saving</code> method of the form field.</p><blockquote><p>{tip} This is similar to the <strong>mutator</strong> in the <code>Laravel model</code>.</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">PHPEditor</span> <span class="token keyword">extends</span> <span class="token class-name">Field</span>
<span class="token punctuation">{</span>
	<span class="token operator">...</span>
	
	<span class="token comment">// Converts user-entered form values into string format for saving to database</span>
	<span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">prepareInputValue</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="process-the-value-of-the-field-to-be-displayed-formatfielddata" tabindex="-1"><a class="header-anchor" href="#process-the-value-of-the-field-to-be-displayed-formatfielddata" aria-hidden="true">#</a> Process the value of the field to be displayed (formatFieldData)</h3><p>The <code>formatFieldData</code> method is used to process the value of the field to be displayed. This method is executed before the <code>customFormat</code> method of the form field.</p><blockquote><p>{tip} This function is similar to the <strong>accessor</strong> in the <code>Laravel model</code>.</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">PHPEditor</span> <span class="token keyword">extends</span> <span class="token class-name">Field</span>
<span class="token punctuation">{</span>
	<span class="token operator">...</span>
	
	<span class="token comment">// Convert field values to array format.</span>
	<span class="token comment">// $data is the edit data of the current form, the data format is array</span>
	<span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">formatFieldData</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
	    <span class="token comment">// Get the current field value</span>
        <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">formatFieldData</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token comment">// Processing field values</span>
		<span class="token operator">...</span>
		
		<span class="token keyword">return</span> <span class="token variable">$value</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-the-element-css-selector-getelementclassselector" tabindex="-1"><a class="header-anchor" href="#get-the-element-css-selector-getelementclassselector" aria-hidden="true">#</a> Get the element CSS selector (getElementClassSelector)</h3><p>When the form component class is instantiated, it generates a <code>css class</code> according to the field name, which is then passed to the template.</p><p>Template</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;form-group&#39;]}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ $viewClass[&#39;label&#39;] }} control-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{!! $label !!}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;field&#39;]}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        @include(&#39;admin::form.error&#39;)

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$name}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$name}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">{!!</span> <span class="token attr-name">$attributes</span> <span class="token attr-name">!!}</span> <span class="token punctuation">&gt;</span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
		   @foreach($options as $select =&gt; $option)
			   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$select}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">{{</span> <span class="token attr-name"><span class="token namespace">Dcat\\Admin\\Support\\Helper:</span>:equal($select,</span> <span class="token attr-name">$value)</span> <span class="token attr-name"><span class="token namespace">?&#39;selected&#39;:</span>&#39;&#39;</span> <span class="token attr-name">}}</span><span class="token punctuation">&gt;</span></span>{{$option}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
		   @endforeach
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>

        @include(&#39;admin::form.help-block&#39;)

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">require</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{!! $selector !!}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    // where $selector is the css selector for the current field.
    $this.select2($configs);

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="js-code" tabindex="-1"><a class="header-anchor" href="#js-code" aria-hidden="true">#</a> JS code</h3>`,17),P=s("code",null,"HasMany",-1),T=s("code",null,"array",-1),D=s("code",null,"Table",-1),I=e(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{$viewClass[&#39;form-group&#39;]}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">require</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{!! $selector !!}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">select2</span><span class="token punctuation">(</span>$configs<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function H(S,N){const t=o("ExternalLinkIcon"),p=o("RouterLink");return i(),u("div",null,[d,s("p",null,[s("a",k,[n("wangEditor"),a(t)]),n(" is an excellent domestic lightweight rich text editor, if "),m,n(" comes with "),v,n(" based editor components have issues working, you can integrate it and override the default "),g,n(" by following the steps below `.")]),s("blockquote",null,[s("p",null,[n("For the convenience of demonstration, CDN link is used directly in the example. In actual development, you need to download the front-end library file "),s("a",b,[n("wangEditor"),a(t)]),n(" to the server first and unzip it to the directory "),h,n(".")])]),f,s("p",null,[n("Download "),s("a",q,[n("ckeditor"),a(t)]),n(" and extract it to the /public directory, e.g. put it in "),w,n(".")]),y,s("p",null,[n("Extend a PHP code editor based on "),s("a",x,[n("codemirror"),a(t)]),n(" by following the steps below, with reference to "),s("a",_,[n("PHP mode"),a(t)]),n(".")]),s("p",null,[n("Download and extract the "),s("a",$,[n("codemirror"),a(t)]),n(" library to a front-end resource directory, such as "),E,n(".")]),F,s("blockquote",null,[s("p",null,[n("{tip} Static resources in the class can also be brought in from outside, see "),s("a",C,[n("Editor.php"),a(t)])])]),A,s("p",null,[n("This will allow you to use the PHP editor in "),a(p,{to:"/guide/model-form.html"},{default:c(()=>[n("model-form")]),_:1}),n(":")]),j,s("p",null,[n("In order for the extended form component to be compatible with "),P,n(", "),T,n(" and "),D,n(" forms, we must use the "),a(p,{to:"/guide/js.html#init"},{default:c(()=>[n("dynamic listening element generation (init)")]),_:1}),n(" feature")]),I])}const B=l(r,[["render",H],["__file","model-form-field-management.html.vue"]]);export{B as default};
