import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-c17653d8.js";const p="/dcat/assets/jwHjbKP9PL-42ce00b5.png",e="/dcat/assets/AKy1LPElHF-4fb3fb91.png",o="/dcat/assets/KwSIti7bs5-e0fc18f4.png",c="/dcat/assets/aO6OS0sOyv-f423d18d.png",l="/dcat/assets/755BUms334-390f495d.png",i="/dcat/assets/MejvctX1V7-0b1811aa.png",u={},r=t('<h1 id="json格式字段处理" tabindex="-1"><a class="header-anchor" href="#json格式字段处理" aria-hidden="true">#</a> JSON格式字段处理</h1><p><code>dcat-admin</code>的表单提供了下面几个组件来处理<code>JSON</code>格式的字段，方便用来处理<code>JSON</code>格式的对象、一维数组、二维数组等对象。</p><h2 id="键值对象-keyvalue" tabindex="-1"><a class="header-anchor" href="#键值对象-keyvalue" aria-hidden="true">#</a> 键值对象 (keyValue)</h2><p><img src="'+p+`" alt="" loading="lazy"></p><p>如果你的字段存储的是不固定<code>键</code>的<code>{&quot;field&quot;:&quot;value&quot;}</code>格式，可以用<code>keyValue</code>组件:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column_name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置校验规则</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column_name&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required|min:5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自定义键名以及键值标题翻译</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setKeyLabel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;键名&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setValueLabel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;键值&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以自定义默认结构，以便于新建数据时候自动带入 keyValue 数据的模板</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;cny&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;usd&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setKeyLabel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;币种&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setValueLabel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;价格&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+e+'" alt="" loading="lazy"></p><h2 id="固定键值对象-embeds" tabindex="-1"><a class="header-anchor" href="#固定键值对象-embeds" aria-hidden="true">#</a> 固定键值对象 (embeds)</h2><p><img src="'+o+`" alt="" loading="lazy"></p><p>用于处理<code>mysql</code>的<code>JSON</code>类型字段数据或者<code>mongodb</code>的<code>object</code>类型数据，也可以将多个<code>field</code>的数据值以<code>JSON</code>字符串的形式存储在<code>mysql</code>的字符串类型字段中</p><p>适用于有固定键值的<code>JSON</code>类型字段</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">embeds</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column_name&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key1&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key2&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">datetime</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">dateRange</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key4&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;key5&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;范围&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 转化为json格式存储</span>
    <span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 自定义标题</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">embeds</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column_name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;字段标题&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>回调函数里面构建表单元素的方法调用和外面是一样的。</p><h2 id="一维数组-list" tabindex="-1"><a class="header-anchor" href="#一维数组-list" aria-hidden="true">#</a> 一维数组 (list)</h2><p><img src="`+c+`" alt="" loading="lazy"></p><p>如果你的字段是用来存储<code>[&quot;foo&quot;, &quot;Bar&quot;]</code>格式的一维数组, 可以使用<code>list</code>组件:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column_name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置校验规则</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column_name&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required|min:5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置最大和最小元素个数</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column_name&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二维数组-table" tabindex="-1"><a class="header-anchor" href="#二维数组-table" aria-hidden="true">#</a> 二维数组 (table)</h2><p><img src="`+l+`" alt="" loading="lazy"></p><p>如果某一个字段存储的是<code>json</code>格式的二维数组，可以使用<code>table</code>表单组件来实现快速的编辑：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column_name&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;desc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个组件类似于<code>hasMany</code>组件，不过是用来处理单个字段的情况，适用于简单的二维数据。</p><h2 id="二维数组-array" tabindex="-1"><a class="header-anchor" href="#二维数组-array" aria-hidden="true">#</a> 二维数组 (array)</h2><p><img src="`+i+`" alt="" loading="lazy"></p><p>如果某一个字段存储的是<code>json</code>格式的二维数组，并且字段比较多，可以使用<code>array</code>表单组件来实现快速的编辑：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column_name&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">textarea</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;desc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">saveAsJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),k=[r];function d(g,v){return s(),a("div",null,k)}const f=n(u,[["render",d],["__file","model-json.html.vue"]]);export{f as default};
