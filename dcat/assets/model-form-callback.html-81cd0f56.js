const n=JSON.parse(`{"key":"v-6bd0387b","path":"/guide/model-form-callback.html","title":"Form callbacks","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"creating","slug":"creating","link":"#creating","children":[]},{"level":3,"title":"editing","slug":"editing","link":"#editing","children":[]},{"level":3,"title":"submitted","slug":"submitted","link":"#submitted","children":[]},{"level":3,"title":"saving","slug":"saving","link":"#saving","children":[]},{"level":3,"title":"saved","slug":"saved","link":"#saved","children":[]},{"level":3,"title":"deleting","slug":"deleting","link":"#deleting","children":[]},{"level":3,"title":"deleted","slug":"deleted","link":"#deleted","children":[]},{"level":3,"title":"uploading","slug":"uploading","link":"#uploading","children":[]},{"level":3,"title":"uploaded","slug":"uploaded","link":"#uploaded","children":[]},{"level":3,"title":"Access to data in the model","slug":"access-to-data-in-the-model","link":"#access-to-data-in-the-model","children":[]},{"level":3,"title":"Modify or delete user-submitted data","slug":"modify-or-delete-user-submitted-data","link":"#modify-or-delete-user-submitted-data","children":[]},{"level":3,"title":"Modify the data in the model","slug":"modify-the-data-in-the-model","link":"#modify-the-data-in-the-model","children":[]},{"level":3,"title":"Form response","slug":"form-response","link":"#form-response","children":[]},{"level":3,"title":"Return field validation error message","slug":"return-field-validation-error-message","link":"#return-field-validation-error-message","children":[]}],"git":{"createdTime":1701780913000,"updatedTime":1701780913000,"contributors":[{"name":"Moments","email":"554676262@qq.com","commits":1}]},"readingTime":{"minutes":3.41,"words":1023},"filePathRelative":"guide/model-form-callback.md","localizedDate":"December 5, 2023","excerpt":"<h1> Form callbacks</h1>\\n<p><code>Form</code> currently provides the following methods for receiving callback functions:</p>\\n<h3> creating</h3>\\n<p>Calling on a new page (non-committed action)</p>\\n<div class=\\"language-php line-numbers-mode\\" data-ext=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token variable\\">$form</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">creating</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name type-declaration\\">Form</span> <span class=\\"token variable\\">$form</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">// verification logic</span>\\n\\t\\t<span class=\\"token variable\\">$form</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">responseValidationMessages</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'title'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'Wrong title format'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t\\n\\t\\t<span class=\\"token comment\\">// If there are multiple error messages, the second parameter can be passed as an array.</span>\\n\\t\\t<span class=\\"token variable\\">$form</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">responseValidationMessages</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'content'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string single-quoted-string\\">'content format error'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'content cannot be empty'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
