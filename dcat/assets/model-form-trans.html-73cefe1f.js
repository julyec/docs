import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as l,a as n,b as s,d as p,w as i,e as c}from"./app-c17653d8.js";const r={},d=n("h1",{id:"form-field-translation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#form-field-translation","aria-hidden":"true"},"#"),s(" Form field translation")],-1),u=n("p",null,"All the places in the data form form where the fields are used will automatically read the translations from the language pack.",-1),g=c(`<h3 id="language-package-name" tabindex="-1"><a class="header-anchor" href="#language-package-name" aria-hidden="true">#</a> Language package name</h3><p>If the controller is <code>UserProfileController</code>, the corresponding language package is <code>resources/lang/{current language}/user-profile.php</code> (needs to be converted to lower case strikethrough style).</p><p>If you want to change the name of the language pack, you can do so in the following two ways</p><p>Method 1</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>AdminController</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UserController</span> <span class="token keyword">extends</span> <span class="token class-name">AdminController</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Specify the translation file name
     * 
     * <span class="token keyword">@var</span> <span class="token class-name"><span class="token keyword">string</span></span> 
     */</span>
    <span class="token keyword">protected</span> <span class="token variable">$translation</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;user1&#39;</span><span class="token punctuation">;</span>
    
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Method 2</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">translation</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><p>Now suppose that the language package <code>resources/lang/zh_CN/user-profile.php</code> contains the following:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;fields&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;name&#39;</span>  <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;名称&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;age&#39;</span>   <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;年龄&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;class&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;班级&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>Form</code> field set in the controller <code>UserProfileController</code> will automatically read the above translation:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// If you don&#39;t set labels, language package translations are used automatically</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;class&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="public-interpretation" tabindex="-1"><a class="header-anchor" href="#public-interpretation" aria-hidden="true">#</a> Public interpretation</h3><p>When the <code>admin_trans_field</code> function can&#39;t find the translation of a given field in the current controller, it looks for it in <code>global.php</code>. If some fields are present in many data tables, you can write those translations in the <code>resources/lang/{current language}/global.php</code> file.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// Commonly used fields are placed in global.php and can be used by all controllers</span>
    <span class="token string single-quoted-string">&#39;fields&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;id&#39;</span>         <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;ID&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;created_at&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;updated_at&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function k(m,v){const a=t("RouterLink");return o(),l("div",null,[d,u,n("blockquote",null,[n("p",null,[s("{tip} See "),n("a",null,[p(a,{to:"/guide/trans.html"},{default:i(()=>[s("Multilingual")]),_:1})]),s(" for details on how to use the language package.")])]),g])}const f=e(r,[["render",k],["__file","model-form-trans.html.vue"]]);export{f as default};
