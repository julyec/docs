import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as a,a as n}from"./app-98225aba.js";const t={},d=n(`<h1 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h1><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ul><li>PHP &gt;= <code>7.1</code></li><li>Laravel <code>5.5.0</code> ~ <code>9.*</code></li><li>Fileinfo PHP Extension</li></ul><h2 id="start-installing" tabindex="-1"><a class="header-anchor" href="#start-installing" aria-hidden="true">#</a> Start installing</h2><blockquote><p>{tip} If <code>composer</code> downloads too slowly or fails to install during installation Please run the command <code>composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</code> to replace the <code>composer</code> packagist server with the Aliyun mirror.</p></blockquote><p>First you need to install <code>laravel</code>, if you already have it installed you can skip this step.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> create-project --prefer-dist laravel/laravel ProjectName <span class="token number">7</span>.*
<span class="token comment"># or</span>
<span class="token function">composer</span> create-project --prefer-dist laravel/laravel ProjectName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After installing <code>laravel</code>, you will need to modify the <code>.env</code> file to set the database connection to the correct settings.</p><div class="language-dotenv line-numbers-mode" data-ext="dotenv"><pre class="language-dotenv"><code>DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=dcat-admin
DB_USERNAME=root
DB_PASSWORD=
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Installation of <code>dcat-admin</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd {ProjectName}

composer require dcat/laravel-admin:&quot;2.*&quot; -vvv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then run the following command to publish the resource:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>php artisan admin:publish
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The command will generate the configuration file <code>config/admin.php</code>, in which you can modify the installation address, database connection, and table name, it is recommended that all the default configuration is not modified.</p><p>Then run the following command to complete the installation:</p><blockquote><p>{tip} Executing this command may result in the following error <code>Specified key was too long ... 767 bytes</code> If this error occurs, add the code <code>\\Schema::defaultStringLength(191);</code> to the <code>boot</code> method of the <code>app/Providers/AppServiceProvider.php</code> file. Then delete all the data tables in the database and run the <code>php artisan admin:install</code> command again.</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>php artisan admin:install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>After the above steps are completed, you can configure the webserver, ** Note that you need to point the document root to the <code>public</code> directory**! If you are using <code>nginx</code>, you also need to add a pseudo-static configuration to the configuration:</p><div class="language-dotenv line-numbers-mode" data-ext="dotenv"><pre class="language-dotenv"><code>location / {
	try_files $uri $uri/ /index.php?$query_string;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After starting the service, open <code>http://localhost/admin</code> in your browser and log in with the username <code>admin</code> and password <code>admin</code>.</p><h2 id="generated-documents" tabindex="-1"><a class="header-anchor" href="#generated-documents" aria-hidden="true">#</a> Generated documents</h2><p>After installation, the following file is generated in the project directory:</p><h3 id="configuration-file" tabindex="-1"><a class="header-anchor" href="#configuration-file" aria-hidden="true">#</a> Configuration file</h3><p>After the installation is complete, all the configuration for <code>dcat-admin</code> is in the <code>config/admin.php</code> file.</p><h3 id="back-end-project-document" tabindex="-1"><a class="header-anchor" href="#back-end-project-document" aria-hidden="true">#</a> Back-end project document</h3><p>After the installation is complete, the backend installation directory is <code>app/Admin</code>, after which most of the backend development coding work is done in this directory.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app/Admin
├── Controllers
│   ├── AuthController.php
│   └── HomeController.php
├── Metrics
│   └── Examples
│       ├── NewDevices.php
│       ├── NewUsers.php
│       ├── ProductOrders.php
│       ├── Sessions.php
│       ├── Tickets.php
│       └── TotalUsers.php
├── bootstrap.php
└── routes.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>app/Admin/routes.php</code> file is used to configure background routing.</li><li><code>app/Admin/bootstrap.php</code> It is the startup file of <code>dcat-admin</code>, please refer to the comments in the file for how to use it.</li><li><code>app/Admin/Controllers</code> directory is used to store the backend controller files, the <code>HomeController.php</code> file in this directory is the backend home page display controller, <code>AuthController.php</code> is the backend administrator login authentication controller.</li><li><code>app/Admin/Metrics/Examples</code> contains the <code>statistics card (Metric Card)</code> sample code.</li></ol><h3 id="static-files" tabindex="-1"><a class="header-anchor" href="#static-files" aria-hidden="true">#</a> Static files</h3><p>The front-end static files needed for the backend are in the <code>/public/vendor/dcat-admin</code> directory.</p><h3 id="data-table-migration-file" tabindex="-1"><a class="header-anchor" href="#data-table-migration-file" aria-hidden="true">#</a> Data table migration file</h3><p>The corresponding data table migration file is in the <code>/database/migrations</code> directory.</p><h3 id="language-packs" tabindex="-1"><a class="header-anchor" href="#language-packs" aria-hidden="true">#</a> Language packs</h3><p>The language package files are located in the directory <code>/resources/lang</code>.</p>`,34),o=[d];function r(s,l){return i(),a("div",null,o)}const h=e(t,[["render",r],["__file","installation.html.vue"]]);export{h as default};
