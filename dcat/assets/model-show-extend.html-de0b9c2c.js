const n=JSON.parse(`{"key":"v-586232ee","path":"/zh/guide/model-show-extend.html","title":"详情字段显示扩展","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"createdTime":1701780913000,"updatedTime":1701780913000,"contributors":[{"name":"Moments","email":"554676262@qq.com","commits":1}]},"readingTime":{"minutes":1.06,"words":318},"filePathRelative":"zh/guide/model-show-extend.md","localizedDate":"2023年12月5日","excerpt":"<h1> 详情字段显示扩展</h1>\\n<p>这个功能用来扩展详情字段显示, 在内置的显示方法不满足需求的情况下，可以使用这个功能来实现</p>\\n<p>首先定义扩展类：</p>\\n<div class=\\"language-php line-numbers-mode\\" data-ext=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token php language-php\\"><span class=\\"token delimiter important\\">&lt;?php</span>\\n\\n<span class=\\"token keyword\\">namespace</span> <span class=\\"token package\\">App<span class=\\"token punctuation\\">\\\\</span>Admin<span class=\\"token punctuation\\">\\\\</span>Extensions<span class=\\"token punctuation\\">\\\\</span>Show</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">use</span> <span class=\\"token package\\">Dcat<span class=\\"token punctuation\\">\\\\</span>Admin<span class=\\"token punctuation\\">\\\\</span>Show<span class=\\"token punctuation\\">\\\\</span>AbstractField</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name-definition class-name\\">UnSerialize</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">AbstractField</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 这个属性设置为false则不会转义HTML代码</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token variable\\">$escape</span> <span class=\\"token operator\\">=</span> <span class=\\"token constant boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n    \\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function-definition function\\">render</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$arg</span> <span class=\\"token operator\\">=</span> <span class=\\"token string single-quoted-string\\">''</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 返回任意可被渲染的内容</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">unserialize</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">value</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
