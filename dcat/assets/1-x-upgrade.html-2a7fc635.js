import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as u,a as s,b as n,d as e,w as p,e as a}from"./app-c17653d8.js";const r={},d=a(`<h1 id="v1-x-upgrade-guide" tabindex="-1"><a class="header-anchor" href="#v1-x-upgrade-guide" aria-hidden="true">#</a> v1.x Upgrade Guide</h1><h3 id="preface" tabindex="-1"><a class="header-anchor" href="#preface" aria-hidden="true">#</a> Preface</h3><p>This section contains only the <code>1.x</code> version of the <code>API</code> changes, does not contain new features or changes that do not affect the user&#39;s use, <code>2.0</code> specific version change description please refer to [what changes in 2.0?] (https://learnku.com/articles/50781?#reply164307)</p><p><strong>Estimated upgrade time: 60 minutes</strong></p><h3 id="_1-create-a-new-branch-and-backup-configuration-files" tabindex="-1"><a class="header-anchor" href="#_1-create-a-new-branch-and-backup-configuration-files" aria-hidden="true">#</a> 1. Create a new branch and backup configuration files</h3><p>Create a new branch and backup the configuration file <code>config/admin.php</code> named <code>config/admin.bak.php</code> to facilitate subsequent comparison of configuration changes.</p><h3 id="_2-update-composer-dependencies" tabindex="-1"><a class="header-anchor" href="#_2-update-composer-dependencies" aria-hidden="true">#</a> 2. Update composer dependencies</h3><p>Uninstall <code>1.x</code> version first</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> remove dcat/laravel-admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Re-installation</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>composer require dcat/laravel-admin:&quot;2.*&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>After installing success</p><ol><li>delete the <code>public/vendors</code> directory</li><li>republish the resource <code>php artisan admin:publish --force</code>.</li><li>write the modified parameters to the new configuration file <code>config/admin.php</code> according to the above backed up configuration file, here it should be noted that the default theme color for <code>1.x</code> is <code>indigo</code> (deprecated), which has been replaced with <code>default</code> in the new version</li><li>Adjust the language pack, the language pack directory is changed from <code>zh-CN</code> to <code>zh_CN</code> in the new version, you need to move the custom translation files to the new directory, and the translation of <code>menuTITLE</code> is also separated into <code>menus.php</code>.</li><li>Run the database migration command <code>php artisan migrate</code>, two new tables <code>admin_settings</code> and <code>admin_extensions</code> have been added in the new version</li></ol><h3 id="_3-global-change-namespace" tabindex="-1"><a class="header-anchor" href="#_3-global-change-namespace" aria-hidden="true">#</a> 3. Global change namespace</h3><ol><li>Global search namespace <code>Dcat\\Admin\\Controllers</code> and replace it with <code>Dcat\\Admin\\Http\\Controllers</code></li><li>global search namespace <code>Dcat\\Admin\\Auth</code> and replace it with \`Dcat\\Admin\\Http\\Auth</li></ol><h3 id="_4-form-section-changes" tabindex="-1"><a class="header-anchor" href="#_4-form-section-changes" aria-hidden="true">#</a> 4. Form section changes</h3><ol><li>The field hiding function has been adjusted, the <code>responsive</code> method has been deprecated in the old version, in the new version the field hiding function is enabled as follows</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Turn on the field selector function</span>
<span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">showColumnSelector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Set default hidden fields</span>
<span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">hideColumns</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;field1&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>The methods <code>collection</code> and <code>fetching</code> have been removed from the table and can be replaced in the new version by the following events</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Grid</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Collection</span><span class="token punctuation">;</span>

<span class="token comment">// Use Grid\\Events\\Fetched event instead of collection</span>
<span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Grid<span class="token punctuation">\\</span>Events<span class="token punctuation">\\</span>Fetched</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$grid</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Collection</span> <span class="token variable">$rows</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$rows</span><span class="token operator">-&gt;</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Changing row data</span>
        <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;first_name&#39;</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39; &#39;</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;last_name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        
        <span class="token keyword">return</span> <span class="token variable">$row</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Use Grid\\Events\\Fetching event instead of fetching</span>
<span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Grid<span class="token punctuation">\\</span>Events<span class="token punctuation">\\</span>Fetching</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$grid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>The use of models is allowed in the table row closure function</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;avatar&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// Direct access to model-related methods</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getAvatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Set route prefix method from <code>resource</code> to <code>setResource</code>.</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">setResource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>Tree form <code>tree</code> method will be deprecated soon and will be moved to extension center</li></ol><h3 id="_5-changes-to-the-form-section" tabindex="-1"><a class="header-anchor" href="#_5-changes-to-the-form-section" aria-hidden="true">#</a> 5. Changes to the form section</h3><ol><li>Adjusted form handling response methods, <code>success</code>, <code>error</code>, <code>redirect</code> and <code>location</code> methods have been removed from the old version. In <code>2.0</code> we unified the form response methods with the <code>action</code> response methods, please refer to the document <a href="x">form response</a>, Example for detailed Usage</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$form</span>
        <span class="token operator">-&gt;</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Save success&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">script</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;console.log(&quot;Execution of JS code&quot;)&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),k=a(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$input</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span>

    <span class="token keyword">return</span> <span class="token variable">$this</span>
        <span class="token operator">-&gt;</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;success&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">detail</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Details&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>adjust the form <code>block</code> layout function, and deprecate the <code>setDefaultBlockWidth</code> method, please refer to the document <a href="x">form block layout</a>, Example for detailed Usage</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>BlockForm</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Basic Settings&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">showFooter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>BlockForm</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">image</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;avatar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>BlockForm</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;mobile&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">textarea</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;description&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>BlockForm</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Sub-block 2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;nickname&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">radio</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;1&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Default&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Frozen&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>BlockForm</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Sub-block 3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;birthday&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Deprecate the direct form submission, keep only the <code>ajax</code> submission method, and rename the <code>disableAjaxSubmit</code> method to <code>ajax</code></li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),m={start:"4"},v={href:"https://github.com/dcat-admin/form-step",target:"_blank",rel:"noopener noreferrer"},b=s("li",null,[s("p",null,[s("code",null,"map"),n(" and "),s("code",null,"listbox"),n(" will be deprecated soon, and the extension center will be moved.")])],-1),g=a(`<h3 id="_6-data-repository-part-of-the-changes" tabindex="-1"><a class="header-anchor" href="#_6-data-repository-part-of-the-changes" aria-hidden="true">#</a> 6. Data repository part of the changes</h3><ol><li>The naming of the data repository interface has been simplified, the new interface is as follows</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">interface</span> <span class="token class-name-definition class-name">Repository</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Get primary key name.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getKeyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Gets the creation time field.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getCreatedAtColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Get the update time field.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getUpdatedAtColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Whether to use soft delete.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">bool</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">isSoftDeletes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Get Grid table data.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Grid<span class="token punctuation">\\</span>Model</span> <span class="token parameter">$model</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Pagination<span class="token punctuation">\\</span>LengthAwarePaginator<span class="token punctuation">|</span>Collection<span class="token punctuation">|</span><span class="token keyword">array</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Grid<span class="token punctuation">\\</span>Model</span> <span class="token variable">$model</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Get edit page data.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Form</span> <span class="token parameter">$form</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span><span class="token punctuation">|</span><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Arrayable</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">edit</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Get detail page data.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Show</span> <span class="token parameter">$show</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span><span class="token punctuation">|</span><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Arrayable</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">detail</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Show</span> <span class="token variable">$show</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Add a new record.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Form</span> <span class="token parameter">$form</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">mixed</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">store</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Query the row data before the update.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Form</span> <span class="token parameter">$form</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span><span class="token punctuation">|</span><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Arrayable</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">updating</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Update data.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Form</span> <span class="token parameter">$form</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">bool</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Delete Data.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Form</span>  <span class="token parameter">$form</span>
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">array</span></span> <span class="token parameter">$deletingData</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">mixed</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">delete</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$deletingData</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Query the row data before deletion.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Form</span> <span class="token parameter">$form</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span><span class="token punctuation">|</span><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Arrayable</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">deleting</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.<code>EloquentRepository::eloquent()</code> 重命名为 <code>EloquentRepository::model()</code></p><h3 id="_7-section-changes" tabindex="-1"><a class="header-anchor" href="#_7-section-changes" aria-hidden="true">#</a> 7. Section changes</h3><p>In the new version <code>AdminSection</code> has been removed, please use <code>Dcat\\Admin\\Admin::SECTION</code> constant instead</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span>

<span class="token function">admin_inject_default_section</span><span class="token punctuation">(</span><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token constant">SECTION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;HEAD&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">...</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-extensions" tabindex="-1"><a class="header-anchor" href="#_8-extensions" aria-hidden="true">#</a> 8. Extensions</h3>`,8),f=a(`<h3 id="_9-login-logic" tabindex="-1"><a class="header-anchor" href="#_9-login-logic" aria-hidden="true">#</a> 9. Login logic</h3><ol><li>Login template, if you have customized the login template in the old project, you need to adjust the <code>JS</code> code in the login template</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Dcat<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ajax form submission</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#login-form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">validate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Login logic, if the login logic has been rewritten, the response method for the final login success needs to use <code>sendLoginResponse</code></li></ol><h3 id="_10-other-changes" tabindex="-1"><a class="header-anchor" href="#_10-other-changes" aria-hidden="true">#</a> 10. Other changes</h3><ol><li>Resource registration</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span>

<span class="token comment">// Registered resource path alias</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;assets/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> 
    <span class="token string single-quoted-string">&#39;js&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token comment">// @test will be evaluated as an alias</span>
        <span class="token string single-quoted-string">&#39;@test/test.js&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;css&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;@test/test.css&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// Loading Resources</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@Name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Load only js</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@Name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Load only css</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@Name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function h(y,w){const t=o("RouterLink"),c=o("ExternalLinkIcon");return l(),u("div",null,[d,s("p",null,[n("In the case of "),e(t,{to:"/guide/widgets-form.html"},{default:p(()=>[n("tools-form")]),_:1}),n(", the Usage is as follows")]),k,s("ol",m,[s("li",null,[s("p",null,[n("Deprecate step-by-step form, please use "),s("a",v,[n("step-by-step form extension"),e(c)]),n(" instead in new version")])]),b]),g,s("p",null,[n("For extension-related changes, please refer to the document "),e(t,{to:"/guide/extension-install.html"},{default:p(()=>[n("extensions")]),_:1})]),f])}const _=i(r,[["render",h],["__file","1-x-upgrade.html.vue"]]);export{_ as default};
