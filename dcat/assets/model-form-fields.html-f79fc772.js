import{_ as i,a as l}from"./oChwzky2BT-5b439ef6.js";import{_ as u}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as r,c as d,b as s,d as n,e as a,w as o,a as t}from"./app-98225aba.js";const k="/dcat/assets/P5hZXiqAj9-c5e2a832.gif",v="/dcat/assets/has-many-38c7a0ad.png",m="/dcat/assets/has-many-table-805cae9e.png",g={},b=t(`<h1 id="use-of-form-fields" tabindex="-1"><a class="header-anchor" href="#use-of-form-fields" aria-hidden="true">#</a> Use of form fields</h1><p>There are a number of form components built into <code>model-form</code> to help you build form forms quickly.</p><h2 id="public-methods" tabindex="-1"><a class="header-anchor" href="#public-methods" aria-hidden="true">#</a> Public methods</h2><h3 id="set-the-value-of-the-form-value" tabindex="-1"><a class="header-anchor" href="#set-the-value-of-the-form-value" aria-hidden="true">#</a> Set the value of the form (value)</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;text...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="set-default-values-default" tabindex="-1"><a class="header-anchor" href="#set-default-values-default" aria-hidden="true">#</a> Set default values (default)</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;text...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="set-default-default-this-method-is-only-available-on-add-a-page-if-the-edit-page-also-needs-to-set-the-default-value-you-can-refer-to-the-following-method" tabindex="-1"><a class="header-anchor" href="#set-default-default-this-method-is-only-available-on-add-a-page-if-the-edit-page-also-needs-to-set-the-default-value-you-can-refer-to-the-following-method" aria-hidden="true">#</a> Set default (default)This method is only available on <strong>add a page</strong>, if the <strong>edit page</strong> also needs to set the default value, you can refer to the following method.</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;xxx&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;default value&#39;</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="set-up-a-message-help" tabindex="-1"><a class="header-anchor" href="#set-up-a-message-help" aria-hidden="true">#</a> Set up a message (help)</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;help...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="set-attribute" tabindex="-1"><a class="header-anchor" href="#set-attribute" aria-hidden="true">#</a> Set attribute</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">attribute</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data-title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;title...&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">attribute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;data-title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;title...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-as-required" tabindex="-1"><a class="header-anchor" href="#set-as-required" aria-hidden="true">#</a> Set as required</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// The &quot;*&quot; is not displayed.</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-to-uneditable-disable" tabindex="-1"><a class="header-anchor" href="#set-to-uneditable-disable" aria-hidden="true">#</a> Set to uneditable (disable)</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">placeholder</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Please enter...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="set-the-width" tabindex="-1"><a class="header-anchor" href="#set-the-width" aria-hidden="true">#</a> Set the width</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="set-validation-rules" tabindex="-1"><a class="header-anchor" href="#set-validation-rules" aria-hidden="true">#</a> Set validation rules</h3>`,21),h=t(`<h3 id="modify-form-input-values-to-be-saved-saving" tabindex="-1"><a class="header-anchor" href="#modify-form-input-values-to-be-saved-saving" aria-hidden="true">#</a> Modify form input values to be saved (saving)</h3><p>The <code>saving</code> method allows you to change the format of the data to be saved.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Helper</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleFile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;files&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$paths</span> <span class="token operator">=</span> <span class="token class-name static-context">Helper</span><span class="token operator">::</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Get other fields of the current row of the database</span>
    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Final conversion to json to save to database</span>
    <span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="modify-form-data-display-customformat" tabindex="-1"><a class="header-anchor" href="#modify-form-data-display-customformat" aria-hidden="true">#</a> Modify form data display (customFormat)</h3><p>The <code>customFormat</code> method can be used to change the value of a field injected into the form from an external source.</p><p>In the example below, the <code>multiFile</code> field requires the field values to be rendered in array format, and we can convert the field values from the database to <code>array</code> format using the <code>customFormat</code> method</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Helper</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleFile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;files&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$paths</span> <span class="token operator">=</span> <span class="token class-name static-context">Helper</span><span class="token operator">::</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">customFormat</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Get other fields of the current row of the database</span>
    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span><span class="token punctuation">;</span>

    <span class="token comment">// convert to arrays</span>
    <span class="token keyword">return</span> <span class="token class-name static-context">Helper</span><span class="token operator">::</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hide-in-pop-ups" tabindex="-1"><a class="header-anchor" href="#hide-in-pop-ups" aria-hidden="true">#</a> Hide in pop-ups</h3><p>If you don&#39;t want to display a field in the popup, you can use the <code>Form\\Field::hideInDialog</code> method</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">textarea</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;contents&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hideInDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="save-as-string-type-saveasstring" tabindex="-1"><a class="header-anchor" href="#save-as-string-type-saveasstring" aria-hidden="true">#</a> Save as string type <code>saveAsString</code></h3><p>The <code>saveAsString</code> method converts the form value to a <code>string</code> type for saving, which is useful when the saved database field value is not allowed to be <code>null</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;nickname&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">saveAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="save-as-json-type-saveasjson" tabindex="-1"><a class="header-anchor" href="#save-as-json-type-saveasjson" aria-hidden="true">#</a> Save as json type <code>saveAsJson</code></h3><p><code>saveAsJson</code> can save form values in <code>json</code> format</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;nickname&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">saveAsJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="text-text" tabindex="-1"><a class="header-anchor" href="#text-text" aria-hidden="true">#</a> Text (text)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 添加提交验证规则</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required|min:10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hide-field-hidden" tabindex="-1"><a class="header-anchor" href="#hide-field-hidden" aria-hidden="true">#</a> Hide field (hidden)</h2><p>The <code>hidden</code> method allows you to set a hidden field for your form.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">hidden</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author_id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>can often be used in conjunction with the <code>saving</code> event</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">hidden</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token property">author_id</span> <span class="token operator">=</span> <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="drop-down-box-radio-select" tabindex="-1"><a class="header-anchor" href="#drop-down-box-radio-select" aria-hidden="true">#</a> Drop-down box radio (select)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;val&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Option name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Or get a list of options from api:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/api/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Use ajax and display the selected item</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/api/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// or assign a name and ID</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/api/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>where the format of the api interface must be in the following format:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
        <span class="token string double-quoted-string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;xxx&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
        <span class="token string double-quoted-string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;xxx&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If there are too many options, you can dynamically page-load options via ajax:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">id</span> <span class="token operator">=&gt;</span> <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;api/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To load data during editing using the model method:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The code above is the same as the one below:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">id</span> <span class="token operator">=&gt;</span> <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>API code for the <code>/admin/api/users</code> interface:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">users</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$q</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;like&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;%<span class="token interpolation"><span class="token variable">$q</span></span>%&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name as text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The data structure returned by the interface is</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token property">&quot;per_page&quot;</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>
    <span class="token property">&quot;current_page&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;last_page&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;next_page_url&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;prev_page_url&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
            <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
            <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
            <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
            <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dropdown-checkbox-linkage-load" tabindex="-1"><a class="header-anchor" href="#dropdown-checkbox-linkage-load" aria-hidden="true">#</a> Dropdown checkbox linkage (load)</h2><p>The <code>select</code> component supports unidirectional linkage of parent-child relationships.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;province&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;city&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;/api/city&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;city&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Where <code>load(&#39;city&#39;, &#39;/api/city&#39;); </code> means that after the current select option is switched, the value of the current option will be taken through the parameter <code>q</code>, calling the interface <code>/api/city</code>, and the data returned by api will be populated into the options of the city selection box, where the format of the data returned by api<code>/api/city</code> must match:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
        <span class="token string double-quoted-string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;xxx&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
        <span class="token string double-quoted-string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;xxx&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The sample code for controller action is as follows:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">city</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$provinceId</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token class-name static-context">ChinaArea</span><span class="token operator">::</span><span class="token function">city</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;parent_id&#39;</span><span class="token punctuation">,</span> <span class="token variable">$provinceId</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">raw</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name as text&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>selectTable</code>, <code>multipleSelectTable</code>, <code>radio</code>, <code>checkbox</code> can also use the <code>load</code> method to link <code>select</code> and <code>multipleSelect</code> forms, the usage is the same as the above example.</p><h3 id="linking-multiple-fields-loads" tabindex="-1"><a class="header-anchor" href="#linking-multiple-fields-loads" aria-hidden="true">#</a> Linking multiple fields (loads)</h3><p>Multiple fields can be linked using the <code>loads</code> method, which is used as follows</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">loads</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;field1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;field2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;/api/field1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;/api/field2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;field1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;field2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The data format returned by <code>api</code> is consistent with the <code>load</code> method. <code>selectTable</code>, <code>multiSelectTable</code>, <code>radio</code>, <code>checkbox</code> can also be linked using the <code>loads</code> method.</p><h2 id="multiselect-dropdown-boxes-multipleselect" tabindex="-1"><a class="header-anchor" href="#multiselect-dropdown-boxes-multipleselect" aria-hidden="true">#</a> MultiSelect dropdown boxes (multipleSelect)</h2><blockquote><p>{tip} The data injected into this field (from the database) can be a string separated by <code>,</code>, a <code>json</code> string or an array of <code>array</code>.</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSelect</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;val&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Option name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Convert to a json string to save to a database</span>
		<span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Using ajax and displaying the selected item:</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSelect</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ajax_url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// or assign a name and ID</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSelect</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ajax_url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The multiple choice box can handle two cases, the first being the <code>ManyToMany</code> relationship</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span> <span class="token keyword">extends</span> <span class="token class-name">Models</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">tags</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToMany</span><span class="token punctuation">(</span><span class="token class-name static-context">Tag</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">return</span> <span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;tags&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>

    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSelect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;tags&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token class-name static-context">Tag</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">customFormat</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token comment">// Converted to IDs from a two-dimensional array of database lookups</span>
            <span class="token keyword">return</span> <span class="token function">array_column</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,56),f={href:"https://laravel.com/docs/5.5/eloquent-mutators",target:"_blank",rel:"noopener noreferrer"},q=t(`<p>If there are too many options, you can dynamically page-load options via ajax:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;friends&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$ids</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$ids</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;api/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>API code for the <code>/admin/api/users</code> interface:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">users</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$q</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;like&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;%<span class="token interpolation"><span class="token variable">$q</span></span>%&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name as text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The data structure returned by the interface is</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token punctuation">{</span>
    <span class="token string double-quoted-string">&quot;total&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;per_page&quot;</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;current_page&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;last_page&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;next_page_url&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;prev_page_url&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;from&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;to&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;data&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;xxx&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;xxx&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;xxx&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;xxx&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="table-selector-selecttable" tabindex="-1"><a class="header-anchor" href="#table-selector-selecttable" aria-hidden="true">#</a> Table selector (selectTable)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Renderable<span class="token punctuation">\\</span>UserTable</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Administrator</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">selectTable</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Pop-up window TITLE&#39;</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">dialogWidth</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;50%&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Popup width, default 800px</span>
	<span class="token operator">-&gt;</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">UserTable</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Set the rendering class instance and pass custom parameters</span>
	<span class="token operator">-&gt;</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token class-name static-context">Administrator</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set the display of editing data</span>
	
<span class="token comment">// The above code is equivalent to</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">selectTable</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">UserTable</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Set the rendering class instance and pass custom parameters</span>
	<span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Set the display of editing data</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		<span class="token keyword">return</span> <span class="token class-name static-context">Administrator</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Define the rendering class as follows, which needs to inherit <code>Dcat\\Admin\\Grid\\LazyRenderable</code>.</p>`,10),y=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Renderable</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Grid</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Grid<span class="token punctuation">\\</span>LazyRenderable</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Administrator</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UserTable</span> <span class="token keyword">extends</span> <span class="token class-name">LazyRenderable</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">grid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Grid</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Getting externally passed parameters</span>
        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">;</span>
        
        <span class="token keyword">return</span> <span class="token class-name static-context">Grid</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token class-name static-context">Administrator</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;xxx_id&#39;</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Grid</span> <span class="token variable">$grid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;updated_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">quickSearch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">disableActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Grid<span class="token punctuation">\\</span>Filter</span> <span class="token variable">$filter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$filter</span><span class="token operator">-&gt;</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$filter</span><span class="token operator">-&gt;</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>result</p><p><img src="`+k+`" alt="" loading="lazy">)</p><h3 id="set-the-fields-that-will-be-saved-to-the-form-and-displayed-when-selected" tabindex="-1"><a class="header-anchor" href="#set-the-fields-that-will-be-saved-to-the-form-and-displayed-when-selected" aria-hidden="true">#</a> Set the fields that will be saved to the form and displayed when selected</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">selectTable</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">UserTable</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// set edit data to display</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		<span class="token keyword">return</span> <span class="token class-name static-context">Administrator</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// the first parameter is the field to be displayed, the second parameter is the field that will be saved to the form when selected</span>
	
<span class="token comment">// The above code can also be simplified to</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">selectTable</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">UserTable</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token class-name static-context">Administrator</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// set edit data to display</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="multiple-selection-multipleselecttable" tabindex="-1"><a class="header-anchor" href="#multiple-selection-multipleselecttable" aria-hidden="true">#</a> Multiple Selection (multipleSelectTable)</h3><p>The usage of multiple choice is the same as the above <code>selectTable</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSelectTable</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 最多选择 10 个选项，不传则不限制</span>
	<span class="token operator">-&gt;</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">UserTable</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Set the rendering class instance and pass custom parameters</span>
	<span class="token operator">-&gt;</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token class-name static-context">Administrator</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// Set the display of editing data</span>
	<span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// $v is the value of the form submission field, the default is an array type, here you need to convert it manually.</span>
		<span class="token comment">// Save as a string separated by &quot;,&quot; and do not convert if it is a many-to-many relationship.</span>
		<span class="token keyword">return</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="multiple-choice-box-listbox" tabindex="-1"><a class="header-anchor" href="#multiple-choice-box-listbox" aria-hidden="true">#</a> multiple choice box (listbox)</h2><p>The method is similar to <code>multipleSelect</code>.</p><blockquote><p>{tip} The data injected into this field (from the database) can be a string separated by <code>,</code>, a <code>json</code> string or an array of <code>array</code>.</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">listbox</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;val&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Option name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="long-text-textarea" tabindex="-1"><a class="header-anchor" href="#long-text-textarea" aria-hidden="true">#</a> Long text (textarea)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">textarea</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rows</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="single-choice-radio" tabindex="-1"><a class="header-anchor" href="#single-choice-radio" aria-hidden="true">#</a> Single choice (radio)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">radio</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;m&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Female&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;f&#39;</span><span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Male&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;m&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="multiple-choice-checkbox" tabindex="-1"><a class="header-anchor" href="#multiple-choice-checkbox" aria-hidden="true">#</a> Multiple choice (checkbox)</h2><p><code>options()</code> method is used to set the selection:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">checkbox</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;val&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Option name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Convert to a json string to save to a database</span>
		<span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Enable Select All</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">checkbox</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;column&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">canCheckAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="autocomplete" tabindex="-1"><a class="header-anchor" href="#autocomplete" aria-hidden="true">#</a> autocomplete</h2><p>This form allows you to search for form values while filling out the form and display the results in a dropdown list, as follows</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">autocomplete</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

<span class="token comment">// Set the group name</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">autocomplete</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">groups</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;label&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;group name&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span> <span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The effect is as follows <img src="`+i+`" alt="" loading="lazy"></p><h3 id="fetching-data-from-remote-apis" tabindex="-1"><a class="header-anchor" href="#fetching-data-from-remote-apis" aria-hidden="true">#</a> Fetching data from remote APIs</h3><p>It is also possible to fetch data from a remote API</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// the first parameter of the ajax function is the ajax url, the second parameter is the valueField (optional), and the third parameter is the groupField (optional)</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">autocomplete</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/countries&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;region&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>The remote API server-side request parameter is query, and the sample code is as follows</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">CountryController</span> <span class="token keyword">extends</span> <span class="token class-name">AdminController</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$countries</span> <span class="token operator">=</span> <span class="token class-name static-context">Country</span><span class="token operator">::</span><span class="token function">when</span><span class="token punctuation">(</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;query&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;like&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;%<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$value</span><span class="token punctuation">}</span></span>%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$countries</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custom-autocomplete-settings" tabindex="-1"><a class="header-anchor" href="#custom-autocomplete-settings" aria-hidden="true">#</a> Custom autocomplete settings.</h3>`,31),x={href:"https://github.com/devbridge/jQuery-Autocomplete",target:"_blank",rel:"noopener noreferrer"},$=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$js = &lt;&lt;&lt;JS
    function (suggestion) {
        alert(&#39;You selected: &#39; + suggestion.value + &#39;, &#39; + suggestion.data);
    }
JS;

$form-&gt;autocomplete($column[, $label])-&gt;configs([
    &#39;minChars&#39; =&gt; 5,
    &#39;noCache&#39; =&gt; true,
    &#39;onSelect&#39; =&gt; JavaScript::make($js),
]);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>configs also supports closures.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$form-&gt;autocomplete($column[, $label])-&gt;configs(function($model, $value){
    return [
        ....
    ];
});
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="form-linkage" tabindex="-1"><a class="header-anchor" href="#form-linkage" aria-hidden="true">#</a> Form linkage</h3><p>The linkage logic of autocomplete is just the opposite of select&#39;s. depends needs to be written to the affected field, regardless of the parent field type, and the value of the parent field will be uploaded to the API at the same time.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$form-&gt;select(&#39;region&#39;)-&gt;options([
    &#39;asia&#39;,
    &#39;Africa&#39;,
    &#39;America&#39;,
    &#39;Europe&#39;,
]);

$form-&gt;autocomplete(&#39;country&#39;)-&gt;ajax(&#39;/countries&#39;, &#39;name&#39;, &#39;region&#39;);

// A request for /states?query={query}&amp;region={region}&amp;country={country} will be sent
$form-&gt;autocomplete(&#39;addr&#39;)-&gt;ajax(&#39;/states&#39;, &#39;name&#39;)-&gt;depends([&#39;region&#39;, &#39;country&#39;]);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="email-email" tabindex="-1"><a class="header-anchor" href="#email-email" aria-hidden="true">#</a> Email (email)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="password-password" tabindex="-1"><a class="header-anchor" href="#password-password" aria-hidden="true">#</a> Password (password)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="links-url" tabindex="-1"><a class="header-anchor" href="#links-url" aria-hidden="true">#</a> Links (url)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="ip-address-ip" tabindex="-1"><a class="header-anchor" href="#ip-address-ip" aria-hidden="true">#</a> IP address (ip)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">ip</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="mobile-mobile" tabindex="-1"><a class="header-anchor" href="#mobile-mobile" aria-hidden="true">#</a> Mobile (mobile)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">mobile</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;mask&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;999 9999 9999&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="color-picker-color" tabindex="-1"><a class="header-anchor" href="#color-picker-color" aria-hidden="true">#</a> Color picker (color)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">color</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="time-time" tabindex="-1"><a class="header-anchor" href="#time-time" aria-hidden="true">#</a> Time (time)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Set the time format, see http://momentjs.com/docs/#/displaying/format/ for more formats.</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="date-date" tabindex="-1"><a class="header-anchor" href="#date-date" aria-hidden="true">#</a> Date (date)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Set the date format, see http://momentjs.com/docs/#/displaying/format/ for more formats.</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YYYY-MM-DD&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="date-and-time-datetime" tabindex="-1"><a class="header-anchor" href="#date-and-time-datetime" aria-hidden="true">#</a> Date and time (datetime)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">datetime</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Set the date format, see http://momentjs.com/docs/#/displaying/format/ for more formats.</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">datetime</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YYYY-MM-DD HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="timerange" tabindex="-1"><a class="header-anchor" href="#timerange" aria-hidden="true">#</a> timeRange</h2><p><code>$startTime</code> and <code>$endTime</code> are the start and end time fields:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">timeRange</span><span class="token punctuation">(</span><span class="token variable">$startTime</span><span class="token punctuation">,</span> <span class="token variable">$endTime</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Time Range&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="date-range-daterange" tabindex="-1"><a class="header-anchor" href="#date-range-daterange" aria-hidden="true">#</a> Date Range (dateRange)</h2><p><code>$startDate</code> and <code>$endDate</code> are the start and end date fields:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">dateRange</span><span class="token punctuation">(</span><span class="token variable">$startDate</span><span class="token punctuation">,</span> <span class="token variable">$endDate</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Date Range&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="time-and-date-range-datetimerange" tabindex="-1"><a class="header-anchor" href="#time-and-date-range-datetimerange" aria-hidden="true">#</a> time and date range (datetimeRange)</h2><p><code>$startDateTime</code>, <code>$endDateTime</code> are the start and end time dates:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">datetimeRange</span><span class="token punctuation">(</span><span class="token variable">$startDateTime</span><span class="token punctuation">,</span> <span class="token variable">$endDateTime</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;DateTime Range&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="scope-range" tabindex="-1"><a class="header-anchor" href="#scope-range" aria-hidden="true">#</a> Scope (range)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;start_column&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;end_column&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;范围&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="file-upload-file" tabindex="-1"><a class="header-anchor" href="#file-upload-file" aria-hidden="true">#</a> File upload (file)</h2>`,36),w=s("p",null,[n("The file upload directory is configured in the "),s("code",null,"upload.file"),n(" file in the "),s("code",null,"config/admin.php"),n(" file, if the directory does not exist, you need to create the directory and open write permissions.")],-1),_=s("strong",null,"accessor",-1),T=s("strong",null,"modifier",-1),A=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Change the file upload path and file name.</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// and set the upload file type.</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;mimes:doc,docx,xlsx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add file delete button</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">removable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="image-upload-image" tabindex="-1"><a class="header-anchor" href="#image-upload-image" aria-hidden="true">#</a> Image upload (image)</h2>`,2),S=s("p",null,[n("The image upload directory is configured in the file "),s("code",null,"upload.image"),n(" in the "),s("code",null,"config/admin.php"),n(" file; if the directory does not exist, it needs to be created with open write permissions.")],-1),F={href:"http://image.intervention.io/getting_started/installation",target:"_blank",rel:"noopener noreferrer"},j={href:"http://image.intervention.io/getting_started/introduction",target:"_blank",rel:"noopener noreferrer"},M=s("strong",null,"accessor",-1),D=s("strong",null,"mutator",-1),I=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">image</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Modify image upload path and file name.</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">image</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Cropping pictures</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">image</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">crop</span><span class="token punctuation">(</span><span class="token keyword type-hint">int</span> <span class="token variable">$width</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$height</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword type-declaration">int</span> <span class="token variable">$x</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$y</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Watermarking</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">image</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token variable">$watermark</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;center&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="multiple-image-and-multiple-file-uploads-multipleimage-multiplefile" tabindex="-1"><a class="header-anchor" href="#multiple-image-and-multiple-file-uploads-multipleimage-multiplefile" aria-hidden="true">#</a> Multiple Image and multiple file uploads (multipleImage/multipleFile)</h2><p>Multi-image upload form inherits from single-image upload form, and multi-file upload form inherits from single-file upload form.</p><blockquote><p>{tip} The data injected into this field (from the database) can be a string separated by <code>,</code>, a <code>json</code> string or an array of <code>array</code></p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Multiple pictures</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleImage</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Limit the maximum number of uploads</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleImage</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Multiple files</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleFile</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Limit the maximum number of uploads</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleFile</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The data submitted when multiple images/file uploads are an <code>array</code> array, you can change the data to the format you want before saving it into the database by:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Convert to json format and save to database</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleFile</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Can be converted to a string format separated by \`,\`</span>
    <span class="token comment">// return implode(&#39;,&#39;, $paths);</span>
    
    <span class="token comment">// can also be converted to json</span>
    <span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Of course, if you want to save it in any other format, that&#39;s fine, it&#39;s just that if you want to save it in any other format, you need to convert the data to a one-dimensional array display by using the <code>customFormat</code> method, such as:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleFile</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">customFormat</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        	<span class="token keyword">return</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;|&#39;</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">flatten</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$paths</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;|&#39;</span><span class="token punctuation">,</span> <span class="token variable">$paths</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Enable sortable feature</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleImage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;images&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">sortable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="rich-text-editor-editor" tabindex="-1"><a class="header-anchor" href="#rich-text-editor-editor" aria-hidden="true">#</a> Rich Text Editor (editor)</h2><p>The system integrates the <code>TinyMCE</code> editor as a built-in editor.</p><h4 id="basic-use" tabindex="-1"><a class="header-anchor" href="#basic-use" aria-hidden="true">#</a> Basic Use</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="to-set-up-language-packs" tabindex="-1"><a class="header-anchor" href="#to-set-up-language-packs" aria-hidden="true">#</a> to set up language packs</h4><p>If you need other languages, you can set the language pack address in the following way:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">languageUrl</span><span class="token punctuation">(</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;TinyMCE/langs/de.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="editor-configuration" tabindex="-1"><a class="header-anchor" href="#editor-configuration" aria-hidden="true">#</a> Editor Configuration</h4>`,19),L={href:"https://www.tiny.cloud/docs",target:"_blank",rel:"noopener noreferrer"},E={href:"http://tinymce.ax-z.cn/",target:"_blank",rel:"noopener noreferrer"},N=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>JavaScript</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;toolbar&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;setup&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">JavaScript</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span>
        <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
<span class="token keyword">function</span> <span class="token punctuation">(</span>editor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;The editor is initialized with success.&#39;</span><span class="token punctuation">,</span> editor<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token constant">JS</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="set-height" tabindex="-1"><a class="header-anchor" href="#set-height" aria-hidden="true">#</a> set height</h4><p>The default value is <code>400</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;600&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="read-only" tabindex="-1"><a class="header-anchor" href="#read-only" aria-hidden="true">#</a> read-only</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">readOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 或</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="image-upload" tabindex="-1"><a class="header-anchor" href="#image-upload" aria-hidden="true">#</a> image upload</h4><p>Set the <code>disk</code> configuration for image upload, which is uploaded by default to the configuration specified by <code>admin.upload.disk</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Upload to oss</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">disk</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;oss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Set the image upload directory to <code>tinymce/images</code> by default:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">imageDirectory</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;editor/images&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Customize the upload interface, the return format of the interface needs to be <code>{&quot;location&quot;: &quot;image url&quot;}</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">editor</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">imageUrl</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;editor/upload-image&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="global-settings" tabindex="-1"><a class="header-anchor" href="#global-settings" aria-hidden="true">#</a> global settings</h4><p>If you need to set the editor globally, you can add the following code to <code>app\\Admin\\bootstrap.php</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>Field<span class="token punctuation">\\</span>Editor</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Editor</span><span class="token operator">::</span><span class="token function">resolving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Editor</span> <span class="token variable">$editor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Setting the default configuration</span>
    <span class="token variable">$editor</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Set the default uploading of editor images to qiniu Cloud.</span>
    <span class="token variable">$editor</span><span class="token operator">-&gt;</span><span class="token function">disk</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;qiniu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="markdown-editor-markdown" tabindex="-1"><a class="header-anchor" href="#markdown-editor-markdown" aria-hidden="true">#</a> Markdown Editor (markdown)</h2><p>The system integrates the <code>editor-md</code> editor as a built-in Markdown editor.</p><h4 id="basic-use-1" tabindex="-1"><a class="header-anchor" href="#basic-use-1" aria-hidden="true">#</a> Basic Use</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">markdown</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="to-set-up-language-packs-1" tabindex="-1"><a class="header-anchor" href="#to-set-up-language-packs-1" aria-hidden="true">#</a> to set up language packs</h4><p>If you need other languages, you can set the language pack address in the following way:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">markdown</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">languageUrl</span><span class="token punctuation">(</span><span class="token function">admin_asset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@admin/dcat/plugins/editor-md/languages/zh-tw.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="editor-configuration-1" tabindex="-1"><a class="header-anchor" href="#editor-configuration-1" aria-hidden="true">#</a> Editor Configuration</h4>`,24),C={href:"https://pandao.github.io/editor.md/",target:"_blank",rel:"noopener noreferrer"},U=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>JavaScript</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">markdown</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;onpreviewing&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">JavaScript</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span>
        <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// console.log(&quot;onpreviewing =&gt;&quot;, this, this.id, this.settings);</span>
	<span class="token comment">// on previewing you can custom css .editormd-preview-active</span>
<span class="token punctuation">}</span>
<span class="token constant">JS</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="set-height-1" tabindex="-1"><a class="header-anchor" href="#set-height-1" aria-hidden="true">#</a> set height</h4><p>The default value is <code>500</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">markdown</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;600&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="read-only-1" tabindex="-1"><a class="header-anchor" href="#read-only-1" aria-hidden="true">#</a> read-only</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">markdown</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">readOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// or</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">markdown</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="image-upload-1" tabindex="-1"><a class="header-anchor" href="#image-upload-1" aria-hidden="true">#</a> image upload</h4><p>Set the <code>disk</code> configuration for image upload, which is uploaded by default to the configuration specified by <code>admin.upload.disk</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Upload to oss</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">markdown</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">disk</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;oss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Set the image upload directory to <code>markdown/images</code> by default</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">markdown</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">imageDirectory</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;markdown/images&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Customize the upload interface, the return format of the interface needs to be <code>{&quot;success&quot;: 1, &quot;url&quot;: &quot;image url&quot; }</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">markdown</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">imageUrl</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;markdown/upload-image&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="global-settings-1" tabindex="-1"><a class="header-anchor" href="#global-settings-1" aria-hidden="true">#</a> global settings</h4><p>If you need to set the editor globally, you can add the following code to <code>app\\Admin\\bootstrap.php</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>Field<span class="token punctuation">\\</span>Markdown</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Markdown</span><span class="token operator">::</span><span class="token function">resolving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Markdown</span> <span class="token variable">$markdown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Setting the default configuration</span>
    <span class="token variable">$markdown</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Set the default uploading of editor images to qiniu Cloud.</span>
    <span class="token variable">$markdown</span><span class="token operator">-&gt;</span><span class="token function">disk</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;qiniu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> Switch</h2><p>use</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">switch</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The default values of the switch form to save to the database are <code>1</code> and <code>0</code>, if you need to change the value to save to the database, you can use this</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">switch</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">customFormat</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token variable">$v</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;open&#39;</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token variable">$v</span> <span class="token operator">?</span> <span class="token string single-quoted-string">&#39;open&#39;</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;closed&#39;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="map-map" tabindex="-1"><a class="header-anchor" href="#map-map" aria-hidden="true">#</a> Map (map)</h2><p>Map control to select latitude and longitude, <code>$latitude</code>, <code>$longitude</code> for the latitude and longitude fields.</p><p>To use this feature you need to change the value of <code>map_provider</code> in the <code>config/admin.php</code> file (currently supported maps are: &quot;tencent&quot;, &quot;google&quot;, &quot;yandex&quot;). For different maps, you need to apply your own KEY and configure it in the .env file, then you need to add the following code to <code>app/Admin/bootstrap.php</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name class-name-fully-qualified static-context">Form<span class="token punctuation">\\</span>Field<span class="token punctuation">\\</span>Map</span><span class="token operator">::</span><span class="token function">requireAssets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>use</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token variable">$latitude</span><span class="token punctuation">,</span> <span class="token variable">$longitude</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="slider" tabindex="-1"><a class="header-anchor" href="#slider" aria-hidden="true">#</a> Slider</h2><p>Can be used for selection of numeric type fields, such as age.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">slider</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;max&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;min&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;step&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;postfix&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;years old&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>For more options, please refer to:https://github.com/IonDen/ion.rangeSlider#settings</p><h2 id="display-only-display" tabindex="-1"><a class="header-anchor" href="#display-only-display" aria-hidden="true">#</a> Display only (display)</h2><p>Only the fields are displayed and no action is taken:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// More complex display</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string double-quoted-string">&quot;&lt;img src=&quot;</span><span class="token variable">$value</span><span class="token string double-quoted-string">&quot; /&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="unit-symbol-currency" tabindex="-1"><a class="header-anchor" href="#unit-symbol-currency" aria-hidden="true">#</a> Unit symbol (currency)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">currency</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Set unit symbols</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">currency</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">symbol</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;￥&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="number-number" tabindex="-1"><a class="header-anchor" href="#number-number" aria-hidden="true">#</a> Number (number)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="rating-rate" tabindex="-1"><a class="header-anchor" href="#rating-rate" aria-hidden="true">#</a> Rating (rate)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">rate</span><span class="token punctuation">(</span><span class="token variable">$column</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$label</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="divider-divider" tabindex="-1"><a class="header-anchor" href="#divider-divider" aria-hidden="true">#</a> Divider (divider)</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="custom-content-html" tabindex="-1"><a class="header-anchor" href="#custom-content-html" aria-hidden="true">#</a> Custom content (html)</h2><p>Insert html content, parameter can be <code>Htmlable</code>, <code>Renderable</code> or a class that implements <code>__toString()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Your html content&#39;</span><span class="token punctuation">,</span> <span class="token variable">$label</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="tags-tags" tabindex="-1"><a class="header-anchor" href="#tags-tags" aria-hidden="true">#</a> Tags (tags)</h2><p>Insert comma-separated string <code>tags</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tags</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;keywords&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>tags</code> also supports the relationship <code>ManyToMany</code>, as in the following example.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tags</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;tags&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Article Tags&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token comment">// name is the field of the Tag model to be displayed, id is the primary key.</span>
    <span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token class-name static-context">Tag</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// drop-down box options</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note: The <code>pluck</code> method must be called when handling <code>ManyToMany</code> relationships, specifying the field name and primary key to be displayed. In addition, when the <code>options</code> method is passed to a <code>Collection</code> object, <code>options</code> will automatically call the <code>pluck</code> method of that object to an array of <code>[&#39;Primary Key Name&#39; =&gt; &#39;Show Field Name&#39;]</code> as a drop-down box option. Or you can just use an array like <code>[&#39;Primary Key Name&#39; =&gt; &#39;Show Field Name&#39;]</code> as an argument.</p><p><code>tags</code> also supports the <code>saving</code> method for processing submitted data, as in the following example:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tags</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;tags&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Article Tags&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token class-name static-context">Tag</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">saving</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>saving</code> method receives a closure that says &quot;submit value for tags, return value is modified tags submit value&quot; and can be used to automatically create new tags or other features.</p><p>If there are too many options, you can dynamically paginate the options via ajax.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tags</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;friends&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$ids</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span> <span class="token variable">$ids</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;api/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>API <code>/admin/api/users</code> Interface code:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">users</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$q</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;like&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;%<span class="token interpolation"><span class="token variable">$q</span></span>%&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name as text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The data structure returned by the interface is</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
    &quot;total&quot;: 4,
    &quot;per_page&quot;: 15,
    &quot;current_page&quot;: 1,
    &quot;last_page&quot;: 1,
    &quot;next_page_url&quot;: null,
    &quot;prev_page_url&quot;: null,
    &quot;from&quot;: 1,
    &quot;to&quot;: 3,
    &quot;data&quot;: [
        {
            &quot;id&quot;: 9,
            &quot;text&quot;: &quot;xxx&quot;
        },
        {
            &quot;id&quot;: 21,
            &quot;text&quot;: &quot;xxx&quot;
        },
        {
            &quot;id&quot;: 42,
            &quot;text&quot;: &quot;xxx&quot;
        },
        {
            &quot;id&quot;: 48,
            &quot;text&quot;: &quot;xxx&quot;
        }
    ]
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="icon-selector-icon" tabindex="-1"><a class="header-anchor" href="#icon-selector-icon" aria-hidden="true">#</a> Icon selector (icon)</h2><p>Select the <code>font-awesome</code> icon</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">icon</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;icon&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="tree-selector-tree" tabindex="-1"><a class="header-anchor" href="#tree-selector-tree" aria-hidden="true">#</a> Tree selector (tree)</h2><p>tree hierarchy form field</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tree</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;permissions&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">nodes</span><span class="token punctuation">(</span><span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Set all nodes</span>
    <span class="token operator">-&gt;</span><span class="token function">customFormat</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Formatting externally injected values</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">array_column</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Modifying the field names of nodes</span>
<span class="token comment">// Default &quot;id&quot; &quot;name&quot; &quot;parent_id&quot;</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tree</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;permissions&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">nodes</span><span class="token punctuation">(</span><span class="token variable">$permissionModel</span><span class="token operator">-&gt;</span><span class="token function">allNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">setIdColumn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">setTitleColumn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">setParentColumn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;parent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    
<span class="token comment">// The default is not to save the value of the parent node, since the parent node generally exists only as a TITLE.</span>
<span class="token comment">// Disable filtering of parent node values</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tree</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;permissions&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">nodes</span><span class="token punctuation">(</span><span class="token variable">$permissionModel</span><span class="token operator">-&gt;</span><span class="token function">allNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">exceptParentNode</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token comment">// Default Collapsed Child Nodes</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tree</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;permissions&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">nodes</span><span class="token punctuation">(</span><span class="token variable">$permissionModel</span><span class="token operator">-&gt;</span><span class="token function">allNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">expand</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>tree</code> form does not allow parent nodes to be selected individually by default, you can turn this on with <code>treeState(false)</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tree</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;xxx&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">treeState</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token comment"># Allow separate selection of parent nodes</span>
    <span class="token operator">-&gt;</span><span class="token function">setTitleColumn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">nodes</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Effects</p><p><img src="`+l+`" alt="" loading="lazy"></p><h2 id="table-form-table" tabindex="-1"><a class="header-anchor" href="#table-form-table" aria-hidden="true">#</a> Table form (table)</h2><p>If a field stores a 2D array in JSON format, the table form component can be used for quick editing:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;extra&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">NestedForm</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;desc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Also add accessors and modifiers to this field in the model:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getExtraAttribute</span><span class="token punctuation">(</span><span class="token variable">$extra</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">array_values</span><span class="token punctuation">(</span><span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$extra</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setExtraAttribute</span><span class="token punctuation">(</span><span class="token variable">$extra</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">attributes</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;extra&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token function">array_values</span><span class="token punctuation">(</span><span class="token variable">$extra</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This component is similar to the hasMany component, but is used to handle the case of a single field for simple two-dimensional data.</p><h2 id="one-to-many-hasmany" tabindex="-1"><a class="header-anchor" href="#one-to-many-hasmany" aria-hidden="true">#</a> One-to-many (hasMany)</h2><p>A one-to-many inline table for one-to-many relationships is shown in the following simple example.</p><p>There are two tables with one-to-many relationships:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>demo_painters<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>username<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8_unicode_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>bio<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8_unicode_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>created_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0000-00-00 00:00:00&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>updated_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0000-00-00 00:00:00&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8_unicode_ci<span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>demo_paintings<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>painter_id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>title<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8_unicode_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>body<span class="token punctuation">\`</span></span> <span class="token keyword">text</span> <span class="token keyword">COLLATE</span> utf8_unicode_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>completed_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0000-00-00 00:00:00&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>created_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0000-00-00 00:00:00&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>updated_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0000-00-00 00:00:00&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">KEY</span> painter_id <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>painter_id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8_unicode_ci<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The table is modeled as:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Demo</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Painter</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">paintings</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">hasMany</span><span class="token punctuation">(</span><span class="token class-name static-context">Painting</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;painter_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Demo</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Painting</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$fillable</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;body&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;completed_at&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">painter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsTo</span><span class="token punctuation">(</span><span class="token class-name static-context">Painter</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;painter_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Build the form code as follows:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Demo<span class="token punctuation">\\</span>Painter</span><span class="token punctuation">;</span>

<span class="token comment">// Here you need to explicitly specify the relationship</span>
<span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token class-name static-context">Painter</span><span class="token operator">::</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;paintings&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// If you are using a data warehouse, you can specify the relationships like this</span>
<span class="token comment">// $repository = new Painter([&#39;paintings&#39;]);</span>

<span class="token keyword">return</span> <span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;ID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">textarea</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;bio&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">hasMany</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;paintings&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>NestedForm</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">textarea</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">datetime</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;completed_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Created At&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;updated_at&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Updated At&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// You can also set the label.</span>
    <span class="token comment">// $form-&gt;hasMany(&#39;paintings&#39;, &#39;paintings&#39;, function (Form\\NestedForm $form) {</span>
    <span class="token comment">//    ...</span>
    <span class="token comment">// });</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>result</p><p><img src="`+v+`" alt="" loading="lazy"></p><h3 id="table-schema-table" tabindex="-1"><a class="header-anchor" href="#table-schema-table" aria-hidden="true">#</a> Table schema (table)</h3><p>If you want to display the table mode, you can use it like this</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Helper</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">hasMany</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;paintings&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>NestedForm</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">useTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>result</p><p><img src="`+m+`" alt="" loading="lazy"></p><h2 id="embedded-embeds" tabindex="-1"><a class="header-anchor" href="#embedded-embeds" aria-hidden="true">#</a> Embedded (embeds)</h2><blockquote><p>{tip} Embedded forms do not support image and file upload forms.</p></blockquote><p>Used to process <code>mysql</code>&#39;s <code>JSON</code> type field data or <code>mongodb</code>&#39;s <code>object</code> type data, can also store data values of multiple fields as <code>JSON</code> strings in <code>mysql</code> string type fields.</p><p>For example, if the <code>JSON</code> or string type <code>extra</code> field in the <code>orders</code> table is used to store data from multiple fields, define the model first:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">Order</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$casts</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;extra&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;json&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then in the form use.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">embeds</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;extra&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;extra1&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;extra2&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">mobile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;extra3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">datetime</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;extra4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">dateRange</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;extra5&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;extra6&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Range&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Custom TITLE</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">embeds</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;extra&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Additional information&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The method calls for building form elements inside the callback function are the same as outside.</p>`,100);function O(R,P){const p=c("RouterLink"),e=c("ExternalLinkIcon");return r(),d("div",null,[b,s("p",null,[n("See "),a(p,{to:"/guide/model-form-validation.html"},{default:o(()=>[n("form validation")]),_:1}),n(" for more details.")]),h,s("p",null,[n("The second is to store an array of options in a single field. If the field is a string, then you need to define "),s("a",f,[n("accessors and modifiers"),a(e)]),n(" for the field inside the model to store and read it.")]),q,s("blockquote",null,[s("p",null,[n("{tip} The data table is loaded asynchronously, please refer to "),a(p,{to:"/guide/lazy.html"},{default:o(()=>[n("load asynchronously")]),_:1}),n(" for more details.")])]),y,s("p",null,[n("For detailed settings, see: "),s("a",x,[n("devbridge/jQuery-Autocomplete"),a(e)])]),$,s("p",null,[n("Before you can use the file upload function, you need to complete the upload configuration first. For file upload configuration and built-in methods, see: "),a(p,{to:"/guide/model-form-upload.html"},{default:o(()=>[n("Image/File Upload")]),_:1}),n(".")]),w,s("blockquote",null,[s("p",null,[n("{tip} Please do not set the "),_,n(" and "),T,n(" splicing domain name in the file or image upload form fields in the model, refer to "),a(p,{to:"/guide/model-form-upload.html#withhost"},{default:o(()=>[n("File/Image Domain Name Splicing")]),_:1}),n(" for related requirements.")])]),A,s("p",null,[n("Before using the image upload function, you need to complete the upload configuration first. For image upload configuration and built-in methods, please refer to:"),a(p,{to:"/guide/model-form-upload.html"},{default:o(()=>[n("image/file upload")]),_:1}),n(".")]),S,s("p",null,[n("Compression, cropping, watermarking, etc. can be used in various ways, requiring "),s("a",F,[n("intervention/image"),a(e)]),n(" to be installed.")]),s("p",null,[n("For more information, please refer to ["),s("a",j,[n("Intervention"),a(e)]),n("]:")]),s("blockquote",null,[s("p",null,[n("{tip} Please do not set the "),M,n(" and "),D,n(" splicing domain name in the file or image upload form fields in the model, refer to "),a(p,{to:"/guide/model-form-upload.html#withhost"},{default:o(()=>[n("File/Image Domain Name Splicing")]),_:1}),n(" for related requirements.")])]),I,s("p",null,[n("For specific configuration, please refer to "),s("a",L,[n("official document"),a(e)]),n(" or "),s("a",E,[n("Chinese document"),a(e)]),n(".")]),N,s("p",null,[n("For specific configuration, please refer to "),s("a",C,[n("official document"),a(e)])]),U])}const z=u(g,[["render",O],["__file","model-form-fields.html.vue"]]);export{z as default};
