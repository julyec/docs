import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c as o,a as n,b as s,d as c,e as i}from"./app-c17653d8.js";const l="/dcat/assets/Snipaste_2023-12-05_19-38-13-8fe8b051.png",u={},r=n("h1",{id:"step-by-step-form",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#step-by-step-form","aria-hidden":"true"},"#"),s(" Step-by-step form")],-1),k=n("h2",{id:"installation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),s(" Installation")],-1),d={href:"https://github.com/dcat-admin/form-step",target:"_blank",rel:"noopener noreferrer"},v=i(`<blockquote><p>{tip} To install the extension, please refer to the [Basic Use of Extensions] (extension-f.md) section of the documentation.</p></blockquote><h2 id="simple-example" tabindex="-1"><a class="header-anchor" href="#simple-example" aria-hidden="true">#</a> Simple example</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">form</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Step-by-Step Form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;step&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">disableListButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">remember</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// remember form steps, not enabled by default</span>
            <span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;950px&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;General Information&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$info</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&lt;i class=&quot;fa fa-exclamation-circle&quot;&gt;&lt;/i&gt; The form fields support a mix of front-end and back-end validation, and front-end validation supports html form validation and custom validation.&#39;</span><span class="token punctuation">;</span>
    
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token class-name static-context">Alert</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Fullname&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// h5 Form Validation</span>
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Age&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;number&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">attribute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;max&#39;</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Front-end validation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">radio</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sex&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Sex&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;rather not say&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;male&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;woman&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token comment">// Back-end validation</span>
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;birthplace&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;place of ancestry&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Demonstrate back-end field validation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;homepage&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;personal homepage&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">textarea</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;description&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;INTRODUCTION&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Hobbies&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">tags</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hobbies&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;preferences&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;sing&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;dance&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;rap&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;play football&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;books&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Book&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;music&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Music&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token comment">// events</span>
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">shown</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
    Dcat<span class="token operator">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hobbies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hobbies&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">JS</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Address&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;street address&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;post_code&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;zip code&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">tel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;tel&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39; telephone number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$resource</span> <span class="token operator">=</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
                    <span class="token string single-quoted-string">&#39;title&#39;</span>       <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Operating Success&#39;</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">&#39;description&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Congratulations on being the 10086th user!&#39;</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">&#39;createUrl&#39;</span>   <span class="token operator">=&gt;</span> <span class="token variable">$resource</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">&#39;backUrl&#39;</span>     <span class="token operator">=&gt;</span> <span class="token variable">$resource</span><span class="token punctuation">,</span>
                <span class="token punctuation">]</span><span class="token punctuation">;</span>
    
                <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin::form.done-step&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>result</p><p><img src="`+l+`" alt="" loading="lazy"></p><h2 id="running-logic" tabindex="-1"><a class="header-anchor" href="#running-logic" aria-hidden="true">#</a> Running logic</h2><p>Step-by-step form is very simple to use, and the running logic is not much different from the ordinary form, the following is a brief description of step-by-step form running logic.</p><blockquote><p>{tip} Step-by-step forms do not have the concept of <code>update</code>.</p></blockquote><h4 id="parameter-validation" tabindex="-1"><a class="header-anchor" href="#parameter-validation" aria-hidden="true">#</a> Parameter validation</h4><p>When the user clicks <code>Next</code>, a request will be sent to the backend to verify if the parameter is correct or not, and an error message will be displayed if the parameter does not meet the requirement.</p><h4 id="form-submission" tabindex="-1"><a class="header-anchor" href="#form-submission" aria-hidden="true">#</a> form submission</h4><p>If the parameters do not meet the requirements, it will display an error message and save the form data if the validation is passed.</p><blockquote><p>{tip} The final method to save the form is <code>Form::store</code>.</p></blockquote><h4 id="complete-page" tabindex="-1"><a class="header-anchor" href="#complete-page" aria-hidden="true">#</a> complete page</h4><p>This step cannot be ignored as the completed page will be displayed after the form is saved.</p><h2 id="edit-form" tabindex="-1"><a class="header-anchor" href="#edit-form" aria-hidden="true">#</a> Edit Form</h2><p>Step-by-step form has no editing function by default, users do not need to edit step-by-step after entering a long step form, so if you need to edit step-by-step form, you can refer to the following way</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">form</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Determine if it is an edit page</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">isEditing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Age&#39;</span><span class="token punctuation">)</span>
                 <span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                 <span class="token operator">-&gt;</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;number&#39;</span><span class="token punctuation">)</span>
                 <span class="token operator">-&gt;</span><span class="token function">attribute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;max&#39;</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span>
                 <span class="token operator">-&gt;</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Front-end validation&#39;</span><span class="token punctuation">)</span>
        
            <span class="token operator">...</span>
            
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
    
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">remember</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;950px&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;General Information&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>StepForm</span> <span class="token variable">$step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$info</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&lt;i class=&quot;fa fa-exclamation-circle&quot;&gt;&lt;/i&gt; The form fields support a mix of front-end and back-end validation, and front-end validation supports H5 form validation and custom validation.&#39;</span><span class="token punctuation">;</span>
    
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token class-name static-context">Alert</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Fullname&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// h5 Form Validation</span>
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Age&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;number&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">attribute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;max&#39;</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Front-end validation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">radio</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sex&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Sex&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;rather not say&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;male&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;woman&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
                <span class="token operator">...</span>
    
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hobbies&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>StepForm</span> <span class="token variable">$step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="functional-interface" tabindex="-1"><a class="header-anchor" href="#functional-interface" aria-hidden="true">#</a> Functional interface</h2><h3 id="set-the-maximum-container-width" tabindex="-1"><a class="header-anchor" href="#set-the-maximum-container-width" aria-hidden="true">#</a> Set the maximum container width</h3><p>默认 <code>1000px</code>。</p><blockquote><p>{tip} This method is only for large screens and the mobile page will automatically resize.</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;900px&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="remembering-form-data" tabindex="-1"><a class="header-anchor" href="#remembering-form-data" aria-hidden="true">#</a> Remembering form data</h3><p>When this feature is enabled, when the user clicks the <code>Next</code> button and the parameters are validated, the form data will be saved in <code>session</code> and will not be destroyed until the entire step-by-step form is saved.</p><blockquote><p>{tip} This feature is not enabled by default.</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// turn on</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">remember</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// turn off</span>
<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">remember</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-container-spacing" tabindex="-1"><a class="header-anchor" href="#set-container-spacing" aria-hidden="true">#</a> Set container spacing</h3><p>Default value <code>30px 18px 30px</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;30px 18px 30px&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="listening-for-page-exit-events" tabindex="-1"><a class="header-anchor" href="#listening-for-page-exit-events" aria-hidden="true">#</a> Listening for page exit events</h3><p>Listen for all step form page leave events, multiple can be added.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">leaving</span><span class="token punctuation">(</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
     <span class="token comment">// Get the step index of the current page</span>
     <span class="token keyword">var</span> index <span class="token operator">=</span> args<span class="token operator">.</span>index<span class="token punctuation">;</span> 
                 
     Dcat<span class="token operator">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;You are leaving the &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string double-quoted-string">&quot; page&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
     <span class="token comment">// The args variable is a js object that contains the current event object, current step option, form object and form value fields.</span>
     console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;leaving&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
     
     <span class="token comment">// Get the current event object</span>
     <span class="token keyword">var</span> evt <span class="token operator">=</span> args<span class="token operator">.</span>event<span class="token punctuation">;</span>
     <span class="token comment">// Get the step form TITLEtab object</span>
     <span class="token keyword">var</span> tab <span class="token operator">=</span> args<span class="token operator">.</span>tab<span class="token punctuation">;</span>
     <span class="token comment">// Whether to go to the previous or next page to get the movement: &quot;forward&quot;, &quot;backward&quot;</span>
     <span class="token keyword">var</span> direction <span class="token operator">=</span> args<span class="token operator">.</span>direction<span class="token punctuation">;</span>
     <span class="token comment">// Get the form JQ object for the current step</span>
     <span class="token keyword">var</span> <span class="token variable">$form</span> <span class="token operator">=</span> args<span class="token operator">.</span>form<span class="token punctuation">;</span>
     <span class="token comment">// Get the form values for the current step page</span>
     <span class="token keyword">var</span> formArray <span class="token operator">=</span> args<span class="token operator">.</span>formArray<span class="token punctuation">;</span>
     
     <span class="token comment">// Get the form JQ object for the specified step</span>
     <span class="token keyword">var</span> <span class="token variable">$firstForm</span> <span class="token operator">=</span> args<span class="token operator">.</span><span class="token function">getForm</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">// Get form values for a specified step</span>
     <span class="token keyword">var</span> firstFormArray <span class="token operator">=</span> args<span class="token operator">.</span><span class="token function">getFormArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
     <span class="token comment">// Stop leaving the current page</span>
     <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
<span class="token constant">JS</span>    
<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">leaving</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="listening-for-page-display-events" tabindex="-1"><a class="header-anchor" href="#listening-for-page-display-events" aria-hidden="true">#</a> Listening for page display events</h3><p>Listen to all step form page display events, multiple can be added.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">shown</span><span class="token punctuation">(</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
     <span class="token comment">// Get the step index of the current page</span>
     <span class="token keyword">var</span> index <span class="token operator">=</span> args<span class="token operator">.</span>index<span class="token punctuation">;</span> 
                 
     Dcat<span class="token operator">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;The current display is no. &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string double-quoted-string">&quot; page&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
     <span class="token comment">// The value of the args variable is the same as the value of the &quot;leaving&quot; event.</span>
     console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;shown&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">JS</span>    
<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">shown</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="adding-step-sheets" tabindex="-1"><a class="header-anchor" href="#adding-step-sheets" aria-hidden="true">#</a> Adding step sheets</h3><p>Step forms support all form fields.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;TITLE&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>StepForm</span> <span class="token variable">$step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="listening-for-step-page-leaving-events" tabindex="-1"><a class="header-anchor" href="#listening-for-step-page-leaving-events" aria-hidden="true">#</a> Listening for step page leaving events</h4><p>Listen to the current step page leave event, with multiple listeners.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;General Information&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>StepForm</span> <span class="token variable">$step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    
    <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">leaving</span><span class="token punctuation">(</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
    
    Dcat<span class="token operator">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;You&#39;re Leaving General Information Page&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// The args variable is a js object that contains the current event object, current step option, form object and form value fields.</span>
    console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Leave General Information&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Get the current event object</span>
    <span class="token keyword">var</span> evt <span class="token operator">=</span> args<span class="token operator">.</span>event<span class="token punctuation">;</span>
    <span class="token comment">// Get the step index of the current page</span>
    <span class="token keyword">var</span> index <span class="token operator">=</span> args<span class="token operator">.</span>index<span class="token punctuation">;</span>
    <span class="token comment">// Get the step form TITLEtab object</span>
    <span class="token keyword">var</span> tab <span class="token operator">=</span> args<span class="token operator">.</span>tab<span class="token punctuation">;</span>
    <span class="token comment">// Whether to go to the previous or next page to get the movement: &quot;forward&quot;, &quot;backward&quot;</span>
    <span class="token keyword">var</span> direction <span class="token operator">=</span> args<span class="token operator">.</span>direction<span class="token punctuation">;</span>
    <span class="token comment">// Get the form JQ object for the current step</span>
    <span class="token keyword">var</span> <span class="token variable">$form</span> <span class="token operator">=</span> args<span class="token operator">.</span>form<span class="token punctuation">;</span>
    <span class="token comment">// Get the form values for the current step page</span>
    <span class="token keyword">var</span> formArray <span class="token operator">=</span> args<span class="token operator">.</span>formArray<span class="token punctuation">;</span>
    
    <span class="token comment">// Get the form JQ object for the specified step</span>
    <span class="token keyword">var</span> <span class="token variable">$firstForm</span> <span class="token operator">=</span> args<span class="token operator">.</span><span class="token function">getForm</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Get form values for a specified step</span>
    <span class="token keyword">var</span> firstFormArray <span class="token operator">=</span> args<span class="token operator">.</span><span class="token function">getFormArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Stop leaving the current page</span>
    <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
<span class="token constant">JS</span>    
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Multiple listeners</span>
    <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">leaving</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="listening-for-step-page-display-events" tabindex="-1"><a class="header-anchor" href="#listening-for-step-page-display-events" aria-hidden="true">#</a> Listening for step page display events</h4><p>Listen to the current step page to display events, and listen multiple times.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;General Information&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>StepForm</span> <span class="token variable">$step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    
    <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">shown</span><span class="token punctuation">(</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
    
    Dcat<span class="token operator">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;The current steps is General Information&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// The value of the args variable is the same as the value of the &quot;leaving&quot; event.</span>
    console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Show General Information&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">JS</span>    
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    
   <span class="token comment">// Multiple listeners</span>
    <span class="token variable">$step</span><span class="token operator">-&gt;</span><span class="token function">shown</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setting-up-the-completion-page" tabindex="-1"><a class="header-anchor" href="#setting-up-the-completion-page" aria-hidden="true">#</a> Setting up the completion page</h3><p>When all the steps are completed the completion page will be displayed, the system provides a default completion page, the developer can also customize the content to be displayed on the completion page by the following methods.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">multipleSteps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Form<span class="token punctuation">\\</span>DoneStep</span> <span class="token variable">$done</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token comment">// Get the new ID</span>
    <span class="token comment">// The value returned by Repository::store</span>
    <span class="token variable">$newId</span> <span class="token operator">=</span> <span class="token variable">$done</span><span class="token operator">-&gt;</span><span class="token function">getNewId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Returns what you want to display, which can make a view also a string.</span>
    <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48);function m(g,b){const a=e("ExternalLinkIcon");return p(),o("div",null,[r,k,n("p",null,[s("Go to "),n("a",d,[s("https://github.com/dcat-admin/form-step"),c(a)]),s(" to download the step-by-step form extension, then install and enable it.")]),v])}const q=t(u,[["render",m],["__file","model-form-step.html.vue"]]);export{q as default};
