const n=JSON.parse(`{"key":"v-3059ae12","path":"/zh/guide/model-grid-selector.html","title":"表格规格筛选器","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":3,"title":"关联关系字段查询","slug":"关联关系字段查询","link":"#关联关系字段查询","children":[]},{"level":3,"title":"自定义查询","slug":"自定义查询","link":"#自定义查询","children":[]}],"git":{"createdTime":1701780913000,"updatedTime":1701780913000,"contributors":[{"name":"Moments","email":"554676262@qq.com","commits":1}]},"readingTime":{"minutes":1.45,"words":434},"filePathRelative":"zh/guide/model-grid-selector.md","localizedDate":"2023年12月5日","excerpt":"<h1> 表格规格筛选器</h1>\\n<p>这个功能用来构建类似淘宝或京东商品的规格选择。</p>\\n<p></p>\\n<h3> 基本使用</h3>\\n<blockquote>\\n<p>{tip} <code>select</code>和<code>selectOne</code>方法的第二个参数为选择器<code>label</code>, 可以省略，如果省略的话将会自动使用翻译文件的翻译.</p>\\n</blockquote>\\n<p>如下代码所示，假设<code>brand</code>字段的4个取值分别对应4个品牌，下面的方式会构建出<code>brand</code>的规格选择器</p>\\n<div class=\\"language-php line-numbers-mode\\" data-ext=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token keyword\\">use</span> <span class=\\"token package\\">Dcat<span class=\\"token punctuation\\">\\\\</span>Admin<span class=\\"token punctuation\\">\\\\</span>Grid</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token variable\\">$grid</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">selector</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name class-name-fully-qualified type-declaration\\">Grid<span class=\\"token punctuation\\">\\\\</span>Tools<span class=\\"token punctuation\\">\\\\</span>Selector</span> <span class=\\"token variable\\">$selector</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token variable\\">$selector</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">select</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'brand'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'品牌'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span>\\n        <span class=\\"token number\\">1</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token string single-quoted-string\\">'华为'</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token number\\">2</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token string single-quoted-string\\">'小米'</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token number\\">3</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token string single-quoted-string\\">'OPPO'</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token number\\">4</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token string single-quoted-string\\">'vivo'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
