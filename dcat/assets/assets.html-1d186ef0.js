import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-98225aba.js";const e={},i=t(`<h1 id="static-resource-loading" tabindex="-1"><a class="header-anchor" href="#static-resource-loading" aria-hidden="true">#</a> Static resource loading</h1><p><code>Dcat Admin</code> supports loading of <code>js</code> scripts on demand.</p><h3 id="changing-the-domain-name-of-a-static-resource" tabindex="-1"><a class="header-anchor" href="#changing-the-domain-name-of-a-static-resource" aria-hidden="true">#</a> Changing the domain name of a static resource</h3><p>Open the configuration file <code>config/admin.php</code>, find the parameter <code>assets_server</code> and change it; you can also add <code>.env</code> to the \`.</p><div class="language-dotenv line-numbers-mode" data-ext="dotenv"><pre class="language-dotenv"><code>ADMIN_ASSETS_SERVER=http://xxx.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="registration-path-alias" tabindex="-1"><a class="header-anchor" href="#registration-path-alias" aria-hidden="true">#</a> Registration path alias</h3><p>Open <code>app/Admin/bootstrap.php</code> and add the following code</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@my-name1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;assets/admin1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@my-name2&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;assets/admin2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Bulk registration is also possible.</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
	<span class="token string single-quoted-string">&#39;@my-name1&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;assets/admin1&#39;</span><span class="token punctuation">,</span>
	<span class="token string single-quoted-string">&#39;@my-name2&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;assets/admin2&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use of aliases</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@my-name1/index.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@my-name1/index.css&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="registration-component" tabindex="-1"><a class="header-anchor" href="#registration-component" aria-hidden="true">#</a> Registration component</h3><p>When a component has more <code>js</code> and <code>css</code> files, we can register these static resource files as a single component to make it easier to use. Open <code>app/Admin/bootstrap.php</code>, then add the following code</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@editor-md&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
	<span class="token string single-quoted-string">&#39;js&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
		<span class="token comment">// Support for using path aliases</span>
		<span class="token string single-quoted-string">&#39;@admin/dcat/plugins/editor-md/lib/raphael.min.js&#39;</span><span class="token punctuation">,</span>
		<span class="token string single-quoted-string">&#39;@admin/dcat/plugins/editor-md/lib/marked.min.js&#39;</span><span class="token punctuation">,</span>
		<span class="token string single-quoted-string">&#39;@admin/dcat/plugins/editor-md/lib/prettify.min.js&#39;</span><span class="token punctuation">,</span>
		<span class="token string single-quoted-string">&#39;@admin/dcat/plugins/editor-md/lib/jquery.flowchart.min.js&#39;</span><span class="token punctuation">,</span>
		<span class="token string single-quoted-string">&#39;@admin/dcat/plugins/editor-md/editormd.min.js&#39;</span><span class="token punctuation">,</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token string single-quoted-string">&#39;css&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
		<span class="token string single-quoted-string">&#39;@admin/dcat/plugins/editor-md/css/editormd.preview.min.css&#39;</span><span class="token punctuation">,</span>
		<span class="token string single-quoted-string">&#39;@admin/dcat/extra/markdown.css&#39;</span><span class="token punctuation">,</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>usage</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">requireAssets</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;@editor-md&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you only need to load the <code>js</code> or <code>css</code> of this component and don&#39;t want to load all the files, then you can use the following method</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Load js files only</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@editor-md&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Load only css files.</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@editor-md&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Using Dynamic Parameters</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span>

<span class="token comment">// Register front-end component aliases</span>
<span class="token comment">// {lang} is a dynamic parameter</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;js&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;/vendor/test/js/{lang}.min.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// {lang} will be replaced with zh_CN</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">requireAssets</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;lang&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;zh_CN&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// It can also be used like this</span>
<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">requireAssets</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;@test?lang=zh_CN&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="loading-js-scripts" tabindex="-1"><a class="header-anchor" href="#loading-js-scripts" aria-hidden="true">#</a> Loading js scripts</h3><p>The <code>Admin::js</code> method can introduce the <code>js</code> script, using the following:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">UserController</span> extend Controller
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/assets/js/index.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;/assets/js/index2.js&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="loading-css-scripts" tabindex="-1"><a class="header-anchor" href="#loading-css-scripts" aria-hidden="true">#</a> Loading css scripts</h3><p>The <code>Admin::css</code> method can introduce the <code>css</code> script, using the following:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">UserController</span> extend Controller
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/assets/css/index.css&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;/assets/css/index2.css&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="adding-js-code-dynamically" tabindex="-1"><a class="header-anchor" href="#adding-js-code-dynamically" aria-hidden="true">#</a> Adding js code dynamically</h3><p>The <code>Admin::script</code> method can dynamically add <code>js</code> code, using the following:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">script</span><span class="token punctuation">(</span>
            <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
    console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Hello world!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">JS</span>            
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="adding-css-code-dynamically" tabindex="-1"><a class="header-anchor" href="#adding-css-code-dynamically" aria-hidden="true">#</a> Adding css code dynamically</h3><p>The <code>Admin::style</code> method can dynamically add <code>css</code> code, using the following:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">style</span><span class="token punctuation">(</span>
            <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">CSS</span>
    body <span class="token punctuation">{</span>
        color<span class="token punctuation">:</span> <span class="token comment">#333;</span>
    <span class="token punctuation">}</span>
<span class="token constant">CSS</span>            
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="introducing-static-resources-into-a-template" tabindex="-1"><a class="header-anchor" href="#introducing-static-resources-into-a-template" aria-hidden="true">#</a> Introducing static resources into a template</h3><p>Manual introduction of static resources into a template requires the <code>admin_asset</code> function:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>// Include css
&lt;link rel=&quot;stylesheet&quot; href=&quot;{{ admin_asset(&quot;vendor/dcat-admin/dcat-admin/main.min.css&quot;) }}&quot;&gt;

// Include js
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ admin_asset(&#39;vendor/dcat-admin/dcat-admin/main.min.js&#39;)}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="adding-js-code-to-a-template" tabindex="-1"><a class="header-anchor" href="#adding-js-code-to-a-template" aria-hidden="true">#</a> Adding js code to a template</h3><p>The <code>js</code> code to be added to the template needs to be executed within the <code>Dcat.ready</code> method to ensure that your <code>js</code> code executes after all <code>js</code> scripts have been loaded:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
Dcat<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;All the js are loaded&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),p=[i];function c(o,l){return s(),a("div",null,p)}const r=n(e,[["render",c],["__file","assets.html.vue"]]);export{r as default};
