import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as p,a as i,b as n,d as c,w as l,e as s}from"./app-c17653d8.js";const d="/dcat/assets/gp8ICoYPks-adf351ef.png",u={},r=s(`<h1 id="basic-use-of-motion" tabindex="-1"><a class="header-anchor" href="#basic-use-of-motion" aria-hidden="true">#</a> Basic use of motion</h1><p>The <code>Action</code> action class makes it very easy for developers to develop an action that contains a specific function that allows the user to interact with the server very easily.</p><p>For example, if there is a button on a page, and user clicks on it to request the server to display the information of the logged in user in a popup window, then this button can be developed by <code>Action</code>.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p>Let&#39;s start developing a button for viewing logged-in user information.</p><h3 id="creating-an-action-class-with-a-command" tabindex="-1"><a class="header-anchor" href="#creating-an-action-class-with-a-command" aria-hidden="true">#</a> Creating an Action class with a command</h3><p>First, you need to create the <code>Action</code> class and run the command</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan admin:action
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>After successful execution, you will see the following message in the command window, asking the developer to select an <code>Action</code> class type, here we type <code>0</code>.</p><blockquote><p>{tip} An action class of type <code>default</code> can be used anywhere on the page.</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> Which <span class="token builtin class-name">type</span> of action would you like to make?:
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> default
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> grid-batch
  <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> grid-row
  <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> grid-tool
  <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> form-tool
  <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> show-tool
  <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> tree-tool
 <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token comment"># Enter 0</span>
 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, type in the name of the <code>Action</code> class in <code>PascalCase</code> style.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
 Please enter a name of action class:
 <span class="token operator">&gt;</span> ShowCurrentAdminUser

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The default namespace is <code>App\\Admin\\Actions</code>, here we just press Enter to skip it.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
 Please enter the namespace of action class <span class="token punctuation">[</span>App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Actions<span class="token punctuation">]</span>:
 <span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>So an <code>Action</code> class is created, and the path of the class just created is <code>app/Admin/Actions/ShowCurrentAdminUser.php</code>.</p><h3 id="use" tabindex="-1"><a class="header-anchor" href="#use" aria-hidden="true">#</a> Use</h3><p>Modify the <code>Action</code> class as follows</p><blockquote><p>{tip} If you need to pass arguments via a constructor in your action class, be sure to set a default value for all arguments to the constructor!</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Actions</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Widgets<span class="token punctuation">\\</span>Table</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>Action</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>Response</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Traits<span class="token punctuation">\\</span>HasPermissions</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Auth<span class="token punctuation">\\</span>Authenticatable</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ShowCurrentAdminUser</span> <span class="token keyword">extends</span> <span class="token class-name">Action</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Button Title
     *
     * <span class="token keyword">@var</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">protected</span> <span class="token variable">$title</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Personal Information&#39;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@var</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">protected</span> <span class="token variable">$modalId</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;show-current-user&#39;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * If you don&#39;t need it, please delete it.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Request</span> <span class="token parameter">$request</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name">Response</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Get the currently logged in user model</span>
        <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Here we present the model data in a table</span>
        <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token class-name static-context">Table</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Search Success&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Processes the HTML string of the response and appends it to the popup node.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">handleHtmlResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string nowdoc-string"><span class="token delimiter symbol"><span class="token punctuation">&lt;&lt;&lt;&#39;</span>JS<span class="token punctuation">&#39;</span></span>
function (target, html, data) {
    var $modal = $(target.data(&#39;target&#39;)); 
    
    $modal.find(&#39;.modal-body&#39;).html(html)
    $modal.modal(&#39;show&#39;)
}        
<span class="token delimiter symbol">JS<span class="token punctuation">;</span></span></span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Setting the properties of HTML tags
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">setupHtmlAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Add class</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">addHtmlClass</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;btn btn-primary&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// ID of the saved popup</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setHtmlAttribute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;data-target&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;#&#39;</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">modalId</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">setupHtmlAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * To set the HTML of the button, here we need to attach the HTML of the popup window.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">|</span><span class="token keyword">void</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Button&#39;s html</span>
        <span class="token variable">$html</span> <span class="token operator">=</span> <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token string heredoc-string"><span class="token delimiter symbol"><span class="token punctuation">&lt;&lt;&lt;</span>HTML</span>
<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$html</span><span class="token punctuation">}</span></span>        
&lt;div class=&quot;modal fade&quot; id=&quot;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">modalId</span><span class="token punctuation">}</span></span>&quot; tabindex=&quot;-1&quot; role=&quot;dialog&quot;&gt;
  &lt;div class=&quot;modal-dialog modal-lg&quot; role=&quot;document&quot;&gt;
    &lt;div class=&quot;modal-content&quot;&gt;
      &lt;div class=&quot;modal-header&quot;&gt;
        &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-label=&quot;Close&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;
        &lt;h4 class=&quot;modal-title&quot;&gt;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>&lt;/h4&gt;
      &lt;/div&gt;
      &lt;div class=&quot;modal-body&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
<span class="token delimiter symbol">HTML<span class="token punctuation">;</span></span></span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Confirm the pop-up message, and delete this method if you don&#39;t need it. 
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">|</span><span class="token keyword">void</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// return [&#39;Confirm?&#39;, &#39;contents&#39;];</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Action permission, return false means no permission, if you don&#39;t need it, you can delete this method.
     *
     * <span class="token keyword">@param</span> <span class="token class-name">Model<span class="token punctuation">|</span>Authenticatable<span class="token punctuation">|</span>HasPermissions<span class="token punctuation">|</span><span class="token keyword">null</span></span> <span class="token parameter">$user</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">bool</span></span>
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">authorize</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * This method allows you to set the parameters to be attached to an action request.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span></span>
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">parameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After modifying it, you can start using it.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>ShowCurrentAdminUser</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">IndexController</span>
<span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Content</span> <span class="token variable">$content</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
	    <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token operator">-&gt;</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token class-name static-context">ShowCurrentAdminUser</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The results are as follows</p><p><img src="`+d+`" alt="" loading="lazy"></p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><p><code>Dcat\\Admin\\Actions\\Action</code> Description of Available Class Properties</p><table><thead><tr><th>attribute name</th><th>type</th><th>default</th><th>description</th></tr></thead><tbody><tr><td>title</td><td><code>string</code></td><td></td><td>TITLE</td></tr><tr><td>selectorPrefix</td><td><code>public</code> <code>string</code></td><td><code>.admin-action-</code></td><td><code>Css</code> selector for the target element</td></tr><tr><td>method</td><td><code>string</code></td><td><code>POST</code></td><td>Request methods for interaction with the server</td></tr><tr><td>event</td><td><code>string</code></td><td><code>click</code></td><td>Events bound to the target element, default to click events.</td></tr><tr><td>disabled</td><td><code>bool</code></td><td><code>false</code></td><td>If or not to render the action element, set <code>true</code> to not render the action element</td></tr><tr><td>usingHandler</td><td><code>bool</code></td><td><code>true</code></td><td>When this attribute is set to <code>false</code>, no request is made to the server regardless of whether <code>Action</code> contains the <code>handle</code> method or not!</td></tr></tbody></table><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><p>Description of the <code>Dcat\\Admin\\Actions\\Action</code> class methodology</p><h3 id="create-an-instance-make" tabindex="-1"><a class="header-anchor" href="#create-an-instance-make" aria-hidden="true">#</a> Create an instance (make)</h3><p>This method is a static method that instantiates the action class</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$param1</span><span class="token punctuation">,</span> <span class="token variable">$param2</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="process-request-handle" tabindex="-1"><a class="header-anchor" href="#process-request-handle" aria-hidden="true">#</a> Process request (handle)</h3><p>When this method is included in the <code>Action</code> class, the target element is bound to an event set by the <code>event</code> attribute (default is <code>click</code>). If the event is triggered, a request is made to the server, and the <code>handle</code> method handles and responds to the request.</p><blockquote><p>{tip} The <code>handle</code> method handles and responds to the request. If there is no such method, the target element is not bound to the event.</p></blockquote><h3 id="respond-response" tabindex="-1"><a class="header-anchor" href="#respond-response" aria-hidden="true">#</a> Respond (response)</h3>`,36),k=s(`<h3 id="set-request-data-parameters" tabindex="-1"><a class="header-anchor" href="#set-request-data-parameters" aria-hidden="true">#</a> Set request data (parameters)</h3><p>This method allows you to set the parameters that should be attached to the request when the action is initiated.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>Action</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyAction</span> <span class="token keyword">extends</span> <span class="token class-name">Action</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>
        <span class="token comment">// Receiving parameters</span>
        <span class="token variable">$key1</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$key2</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;key2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;success！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">parameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
        	<span class="token string single-quoted-string">&#39;key1&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;value1&#39;</span><span class="token punctuation">,</span>
        	<span class="token string single-quoted-string">&#39;key2&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;value2&#39;</span><span class="token punctuation">,</span>    
		<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="confirm-popups" tabindex="-1"><a class="header-anchor" href="#confirm-popups" aria-hidden="true">#</a> Confirm popups</h3><p>This method requires a <code>string</code> parameter to be returned.</p><p>A confirmation window is added when the return value of this method is not null, and a confirmation box pops up automatically when the event is triggered.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;Are you sure you want to remove this line of content?&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Show popup title and content</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Are you sure you want to delete this line of content?&#39;</span> <span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;pop-up content&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="js-code-that-is-executed-before-the-request-is-initiated-actionscript" tabindex="-1"><a class="header-anchor" href="#js-code-that-is-executed-before-the-request-is-initiated-actionscript" aria-hidden="true">#</a> JS code that is executed before the request is initiated (actionScript)</h3><p>The <code>js</code> code preceding the execution of the set action executes the <code>js</code> code set by this method before initiating the request when the button-bound event is triggered, and this method requires a <code>js</code> anonymous function to be returned.</p><p>The <code>js</code> anonymous function takes the following three arguments:</p><ul><li><code>data</code> <code>object</code> The data object to be passed to the interface.</li><li><code>target</code> <code>object</code> Action button&#39;s <code>jQuery</code> object</li><li><code>action</code> <code>object</code> Action management object.</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">actionScript</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
<span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> target<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Before initiating a request&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> target<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// return false; Here return false to stop the rest of the operation.	</span>
    
    <span class="token comment">// Changing the primary key value passed to the interface</span>
    action<span class="token operator">.</span>options<span class="token operator">.</span>key <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token constant">JS</span>	
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="html-code-to-handle-the-server-response-handlehtmlresponse" tabindex="-1"><a class="header-anchor" href="#html-code-to-handle-the-server-response-handlehtmlresponse" aria-hidden="true">#</a> HTML code to handle the server response (handleHtmlResponse)</h3><p>Processes the <code>HTML</code> code of the server response, which requires a <code>js</code> anonymous function to be returned.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">handleHtmlResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string nowdoc-string"><span class="token delimiter symbol"><span class="token punctuation">&lt;&lt;&lt;&#39;</span>JS<span class="token punctuation">&#39;</span></span>
function (target, html, data) {
    // target JQ object of the action button
    // html HTML string returned by the interface
    // data json object of the complete data returned by the interface.

    target.html(html);
}
<span class="token delimiter symbol">JS<span class="token punctuation">;</span></span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="permissions-authorize" tabindex="-1"><a class="header-anchor" href="#permissions-authorize" aria-hidden="true">#</a> Permissions (authorize)</h3><p>This method is used to determine the privileges of the logged in user, the default is <code>true</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">authorize</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>
<span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">can</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;do-action&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="no-authority-response-failedauthorization" tabindex="-1"><a class="header-anchor" href="#no-authority-response-failedauthorization" aria-hidden="true">#</a> No Authority Response (failedAuthorization)</h3><p>This method is used to set the response to an authentication failure and can be overridden if desired</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">failedAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token function">__</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.deny&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hide-or-show-disable" tabindex="-1"><a class="header-anchor" href="#hide-or-show-disable" aria-hidden="true">#</a> Hide or show (disable)</h3><p>Set to show or hide this action</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// hide</span>
<span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// show</span>
<span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="determine-whether-or-not-to-show-allowed" tabindex="-1"><a class="header-anchor" href="#determine-whether-or-not-to-show-allowed" aria-hidden="true">#</a> Determine whether or not to show (allowed)</h3><p>Determine whether the action is allowed to be displayed</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setkey" tabindex="-1"><a class="header-anchor" href="#setkey" aria-hidden="true">#</a> setKey</h3><p>Setting the Data Primary Key</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>

<span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setKey</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-the-primary-key-value-getkey" tabindex="-1"><a class="header-anchor" href="#get-the-primary-key-value-getkey" aria-hidden="true">#</a> Get the primary key value (getKey)</h3><p>Gets the data primary key, also available in the <code>handle</code> method</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>Action</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyAction</span> <span class="token keyword">extends</span> <span class="token class-name">Action</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>
        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token operator">...</span>
        
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;msng！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string double-quoted-string">&quot;TITLE <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-target-element-style-getelementclass" tabindex="-1"><a class="header-anchor" href="#get-target-element-style-getelementclass" aria-hidden="true">#</a> Get target element style (getElementClass)</h3><p>Get the <code>class</code> of the action target element (button)</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$class</span> <span class="token operator">=</span> <span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getElementClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="get-the-css-selector-for-the-target-element" tabindex="-1"><a class="header-anchor" href="#get-the-css-selector-for-the-target-element" aria-hidden="true">#</a> Get the Css selector for the target element</h3><p>Get the CSS selector for the action target element (button)</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$selector</span> <span class="token operator">=</span> <span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">selector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">script</span><span class="token punctuation">(</span>
	<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token class-name type-declaration">JS</span>
	$<span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;$selector&#39;</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">JS</span>	
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="add-style-addhtmlclass" tabindex="-1"><a class="header-anchor" href="#add-style-addhtmlclass" aria-hidden="true">#</a> Add style (addHtmlClass)</h3><p>Append the <code>class</code> of the action target element (button)</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">addHtmlClass</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;btn btn-primary&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">addHtmlClass</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;btn&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;btn-primary&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-the-html-html-of-the-target-element" tabindex="-1"><a class="header-anchor" href="#set-the-html-html-of-the-target-element" aria-hidden="true">#</a> Set the HTML (html) of the target element</h3><p>This method is used to set the <code>HTML</code> code of the action target element, overriding it if necessary</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token string heredoc-string"><span class="token delimiter symbol"><span class="token punctuation">&lt;&lt;&lt;</span>HTML</span>
&lt;a <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">formatHtmlAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>&gt;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>&lt;/a&gt;
<span class="token delimiter symbol">HTML<span class="token punctuation">;</span></span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="adding-js-code-script" tabindex="-1"><a class="header-anchor" href="#adding-js-code-script" aria-hidden="true">#</a> Adding JS code (script)</h3><p>This method is used to add the <code>JS</code> code before the <code>render</code> method finishes executing</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">script</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token string heredoc-string"><span class="token delimiter symbol"><span class="token punctuation">&lt;&lt;&lt;</span>JS</span>
console.log(&#39;...&#39;)
<span class="token delimiter symbol">JS<span class="token punctuation">;</span></span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-the-html-attribute-of-the-target-element-sethtmlattribute" tabindex="-1"><a class="header-anchor" href="#set-the-html-attribute-of-the-target-element-sethtmlattribute" aria-hidden="true">#</a> Set the HTML attribute of the target element (setHtmlAttribute)</h3><p>Set the <code>HTML</code> tag property of the target element</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setHtmlAttribute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// batch setting</span>
<span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setHtmlAttribute</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,53);function v(m,h){const a=t("RouterLink");return o(),p("div",null,[r,i("p",null,[n("Refer to "),c(a,{to:"/guide/response.html"},{default:l(()=>[n("Actions and Form Responses")]),_:1}),n(" chapter")]),k])}const f=e(u,[["render",v],["__file","action.html.vue"]]);export{f as default};
