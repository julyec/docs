import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-c17653d8.js";const e={},p=t(`<h1 id="区块-section" tabindex="-1"><a class="header-anchor" href="#区块-section" aria-hidden="true">#</a> 区块（section）</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p><code>Dcat Admin</code>提供<code>section</code>功能允许开发者在项目运行时更改页面各个部分的内容，而不需要直接去修改模板。</p><blockquote><p>{tip} <code>Dcat Admin</code>的<code>section</code>功能参考了<code>Blade</code>模板引擎的<code>@section</code>功能和<code>Wordpress</code>的<code>add_filter</code>功能，如果开发者理解这两者其中之一就能快速上手。</p></blockquote><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><h3 id="admin-section" tabindex="-1"><a class="header-anchor" href="#admin-section" aria-hidden="true">#</a> admin_section</h3><p>输出<code>section</code>内容，此函数类似于<code>Blade</code>模板中的<code>@yield</code>指令以及<code>WordPress</code>中的<code>apply_filters</code>函数。</p><p>参数：</p><ul><li><code>$section</code> {string} 区块名称</li><li><code>$default</code> {string|Closure} 默认值</li><li><code>$options</code> {array} 参数，需要注意的是<code>key</code>值必须使用英文字母开头，否则无法被获取到</li></ul><p>返回值：</p><ul><li>{string}</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token function">admin_section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;navigation&#39;</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;count&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="admin-inject-section" tabindex="-1"><a class="header-anchor" href="#admin-inject-section" aria-hidden="true">#</a> admin_inject_section</h3><p>注入<code>section</code>内容，此函数类似<code>WordPress</code>中的<code>add_filter</code>函数。</p><p>参数：</p><ul><li><code>$section</code> {string} 区块名称</li><li><code>$content</code> {string|Illuminate\\Contracts\\Support\\Renderable|Closure} 区块内容</li><li><code>$append</code> {bool} 默认<code>true</code>，是否追加到上一个注入的内容后面，如果传<code>false</code>则会替换掉前面注入的内容</li><li><code>$priority</code> {int} 默认<code>10</code>，优先级，值越大排序越靠前</li></ul><p>当第二个参数传入的是匿名函数时，匿名函数接收一个<code>Illuminate\\Support\\Fluent</code>对象。匿名函数中接收一个<code>Illuminate\\Support\\Fluent</code>对象，此对象包含有前面注入到此区块的内容，通过<code>previous</code>属性可以获得；如果此<code>section</code>还有其他参数，也可以通过访问属性的方式获得，如下：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">admin_inject_section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;navigation&#39;</span><span class="token punctuation">,</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;&lt;navigation&gt;1&lt;/navigation&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">admin_inject_section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;navigation&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取上一个注入此区块的内容</span>
    <span class="token variable">$previous</span> <span class="token operator">=</span> <span class="token variable">$options</span><span class="token operator">-&gt;</span><span class="token property">previous</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 获取自定义参数</span>
    <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token variable">$options</span><span class="token operator">-&gt;</span><span class="token property">count</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;&lt;navigation&gt;count:<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$count</span><span class="token punctuation">}</span></span>&lt;/navigation&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 输出</span>
<span class="token keyword">echo</span> <span class="token function">admin_section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;navigation&#39;</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;count&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 最终输出结果为</span>
<span class="token comment">// &lt;navigation&gt;count:4&lt;/navigation&gt;&lt;navigation&gt;1&lt;/navigation&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="admin-inject-default-section" tabindex="-1"><a class="header-anchor" href="#admin-inject-default-section" aria-hidden="true">#</a> admin_inject_default_section</h3><p>注入默认内容，如果调用了<code>admin_inject_section</code>函数注入内容（无论是在前面还是后面都一样），则此函数不生效。</p><p>参数：</p><ul><li><code>$section</code> {string} 区块名称</li><li><code>$content</code> {string|Illuminate\\Contracts\\Support\\Renderable|Closure} 区块内容，与<code>admin_inject_section</code>的第二个参数一致</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">admin_inject_default_section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;navigation&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;暂无数据&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="admin-has-section" tabindex="-1"><a class="header-anchor" href="#admin-has-section" aria-hidden="true">#</a> admin_has_section</h3><p>判断是否注入过内容到<code>section</code>，此函数返回一个<code>bool</code>类型值。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">admin_has_section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;navigation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="admin-has-default-section" tabindex="-1"><a class="header-anchor" href="#admin-has-default-section" aria-hidden="true">#</a> admin_has_default_section</h3><p>判断是否注入过默认内容到<code>section</code>，此函数返回一个<code>bool</code>类型值。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">admin_has_default_section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;navigation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="系统预定义区块" tabindex="-1"><a class="header-anchor" href="#系统预定义区块" aria-hidden="true">#</a> 系统预定义区块</h2><p><code>Dcat Admin</code>预定义了一些区块，开发者可以通过这些区块改变页面内容。</p><p>所有的预定义区块名称都定义在<code>Dcat\\Admin\\Admin::SECTION</code>这个类常量中，通过类常量的方式访问。</p><h3 id="往-head-标签内输入内容" tabindex="-1"><a class="header-anchor" href="#往-head-标签内输入内容" aria-hidden="true">#</a> 往&lt;head&gt;标签内输入内容</h3><p>此通过<code>Admin::SECTION[&#39;HEAD&#39;]</code>区块可以往<code>&lt;head&gt;</code>标签内输入内容。</p><p>在<code>app\\Admin\\bootstrap.php</code>中加入以下代码：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span>

<span class="token function">admin_inject_section</span><span class="token punctuation">(</span><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token constant">SECTION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;HEAD&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;&lt;script src=&quot;//oss.maxcdn.com/respond/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="往-body-标签内输入内容" tabindex="-1"><a class="header-anchor" href="#往-body-标签内输入内容" aria-hidden="true">#</a> 往&lt;body&gt;标签内输入内容</h3><p>通过<code>Admin::SECTION[&#39;BODY_INNER_BEFORE&#39;]</code>区块可以往<code>&lt;body&gt;</code>标签内部的开头位置输入内容。</p><p>通过<code>Admin::SECTION[&#39;BODY_INNER_AFTER&#39;]</code>区块可以往<code>&lt;body&gt;</code>标签内部的结束位置输入内容。</p><h3 id="往-div-id-app-标签内输入内容" tabindex="-1"><a class="header-anchor" href="#往-div-id-app-标签内输入内容" aria-hidden="true">#</a> 往&lt;div id=&quot;app&quot;&gt;标签内输入内容</h3><p>通过<code>Admin::SECTION[&#39;APP_INNER_BEFORE&#39;]</code>区块可以往<code>&lt;div id=&quot;app&quot;&gt;</code>标签内部的开头位置输入内容。</p><p>通过<code>Admin::SECTION[&#39;APP_INNER_AFTER&#39;]</code>区块可以往<code>&lt;div id=&quot;app&quot;&gt;</code>标签内部的结束位置输入内容。</p><h3 id="更改顶部导航栏用户信息面板内容" tabindex="-1"><a class="header-anchor" href="#更改顶部导航栏用户信息面板内容" aria-hidden="true">#</a> 更改顶部导航栏用户信息面板内容</h3><p>通过<code>Admin::SECTION[&#39;NAVBAR_USER_PANEL&#39;]</code>区块可以更改顶部导航栏的用户信息面板内容。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">admin_inject_section</span><span class="token punctuation">(</span><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token constant">SECTION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;NAVBAR_USER_PANEL&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin::partials.navbar-user-panel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="更改顶部导航栏前面内容" tabindex="-1"><a class="header-anchor" href="#更改顶部导航栏前面内容" aria-hidden="true">#</a> 更改顶部导航栏前面内容</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">admin_inject_section</span><span class="token punctuation">(</span><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token constant">SECTION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;NAVBAR_BEFORE&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="更改顶部导航栏后面内容" tabindex="-1"><a class="header-anchor" href="#更改顶部导航栏后面内容" aria-hidden="true">#</a> 更改顶部导航栏后面内容</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">admin_inject_section</span><span class="token punctuation">(</span><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token constant">SECTION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;NAVBAR_AFTER&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="更改顶部导航栏用户信息面板后面内容" tabindex="-1"><a class="header-anchor" href="#更改顶部导航栏用户信息面板后面内容" aria-hidden="true">#</a> 更改顶部导航栏用户信息面板后面内容</h3><p>通过<code>Admin::SECTION[&#39;NAVBAR_AFTER_USER_PANEL&#39;]</code>区块可以更改顶部导航栏的用户信息面板后面的内容。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">admin_inject_section</span><span class="token punctuation">(</span><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token constant">SECTION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;NAVBAR_AFTER_USER_PANEL&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string heredoc-string"><span class="token delimiter symbol"><span class="token punctuation">&lt;&lt;&lt;</span>HTML</span>
    &lt;li&gt;
        &lt;a href=&quot;#&quot; data-toggle=&quot;control-sidebar&quot;&gt;&lt;i class=&quot;fa fa-gears&quot;&gt;&lt;/i&gt;&lt;/a&gt;
    &lt;/li&gt;
<span class="token delimiter symbol">HTML<span class="token punctuation">;</span></span></span>    
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更改菜单栏用户信息面板内容" tabindex="-1"><a class="header-anchor" href="#更改菜单栏用户信息面板内容" aria-hidden="true">#</a> 更改菜单栏用户信息面板内容</h3><p>通过<code>Admin::SECTION[&#39;LEFT_SIDEBAR_USER_PANEL&#39;]</code>区块可以更改菜单栏的用户信息面板的内容。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token function">admin_inject_section</span><span class="token punctuation">(</span><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token constant">SECTION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;LEFT_SIDEBAR_USER_PANEL&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin::partials.sidebar-user-panel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="更改菜单栏" tabindex="-1"><a class="header-anchor" href="#更改菜单栏" aria-hidden="true">#</a> 更改菜单栏</h3><p>通过<code>Admin::SECTION[&#39;LEFT_SIDEBAR_MENU&#39;]</code>可以更改整个菜单栏内容。</p><blockquote><p>{tip} <code>Dcat Admin</code>的菜单是通过注入默认内容到<code>LEFT_SIDEBAR_MENU</code>区块构建的，开发者可以替换掉系统默认的菜单渲染逻辑。</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Helper</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span>

<span class="token function">admin_inject_section</span><span class="token punctuation">(</span><span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token constant">SECTION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;LEFT_SIDEBAR_MENU&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$menuModel</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.database.menu_model&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token class-name static-context">Admin</span><span class="token operator">::</span><span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token variable">$html</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name static-context">Helper</span><span class="token operator">::</span><span class="token function">buildNestedArray</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token variable">$menuModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin::partials.menu&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;item&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$item</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;builder&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$builder</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token variable">$html</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,59),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","section.html.vue"]]);export{r as default};
