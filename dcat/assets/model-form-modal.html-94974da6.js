import{_ as n}from"./MZIdO6PrwR-97ec0e7f.js";import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as t,a as e}from"./app-98225aba.js";const p="/dcat/assets/bFfeudPwvS-ebecc1c1.png",o={},c=e(`<h1 id="form-pop-up" tabindex="-1"><a class="header-anchor" href="#form-pop-up" aria-hidden="true">#</a> Form pop-up</h1><h2 id="data-form-popups" tabindex="-1"><a class="header-anchor" href="#data-form-popups" aria-hidden="true">#</a> Data Form Popups</h2><p>The <code>Form::dialog</code> method can be used to quickly build a data form-based form popup, adding only a few lines of code.</p><blockquote><p>{tip} The form popup is based on the following principle: the <code>create</code> and <code>edit</code> pages are used to retrieve the built form <code>HTML</code> characters, and then the <code>HTML</code> characters are rendered using a popup plugin. If a new <code>js</code> script needs to be loaded in the meantime, it will wait until the script is loaded and then execute the form initialization <code>js</code> code.</p></blockquote><h3 id="simple-example" tabindex="-1"><a class="header-anchor" href="#simple-example" aria-hidden="true">#</a> Simple example</h3><h4 id="opens-form-pop-up" tabindex="-1"><a class="header-anchor" href="#opens-form-pop-up" aria-hidden="true">#</a> opens form pop-up</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>Controller</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Layout<span class="token punctuation">\\</span>Content</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ModalFormController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Content</span> <span class="token variable">$content</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$content</span>
            <span class="token operator">-&gt;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Modal Form&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Add new roles.&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.create-form&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Binding click button</span>
            <span class="token operator">-&gt;</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth/roles/create&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Form page link, this parameter is replaced by the &quot;data-url&quot; attribute of the button.</span>
            <span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;700px&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Specify the width of the popup window, fill in the percentage, default 720px</span>
            <span class="token operator">-&gt;</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;650px&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Specify the height of the popup window, can fill in the percentage, default 690px</span>
            <span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Dcat.reload()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Refresh page after adding success</span>

        <span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Editing roles&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Dcat.reload()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Refresh the page after editing the success</span>

        <span class="token comment">// When you need to bind different links to the same &quot;class&quot; button, put the link in the button&#39;s &quot;data-url&quot; attribute.</span>
        <span class="token variable">$editPage</span> <span class="token operator">=</span> <span class="token function">admin_base_path</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth/roles/1/edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token string double-quoted-string">&quot;
&lt;div style=&#39;padding:30px 0&#39;&gt;
    &lt;span class=&#39;btn btn-success create-form&#39;&gt; New Form Popup &lt;/span&gt; &amp;nbsp;&amp;nbsp;
    &lt;span class=&#39;btn btn-blue edit-form&#39; data-url=&#39;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$editPage</span><span class="token punctuation">}</span></span>&#39;&gt; Edit Form Popup &lt;/span&gt;
&lt;/div&gt;
&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="form-building-and-saving-data" tabindex="-1"><a class="header-anchor" href="#form-building-and-saving-data" aria-hidden="true">#</a> Form building and saving data</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Repositories<span class="token punctuation">\\</span>Role</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>HasResourceActions</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Layout<span class="token punctuation">\\</span>Content</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">RoleController</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">HasResourceActions</span><span class="token punctuation">;</span>
    
    <span class="token doc-comment comment">/**
         * Edit interface.
         *
         * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">mixed</span></span>   <span class="token parameter">$id</span>
         * <span class="token keyword">@param</span> <span class="token class-name">Content</span> <span class="token parameter">$content</span>
         *
         * <span class="token keyword">@return</span> <span class="token class-name">Content</span>
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">edit</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Content</span> <span class="token variable">$content</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$content</span>
                <span class="token operator">-&gt;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token function">trans</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.roles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token function">trans</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
         * Create interface.
         *
         * <span class="token keyword">@param</span> <span class="token class-name">Content</span> <span class="token parameter">$content</span>
         *
         * <span class="token keyword">@return</span> <span class="token class-name">Content</span>
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">create</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Content</span> <span class="token variable">$content</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$content</span>
                <span class="token operator">-&gt;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token function">trans</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.roles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token function">trans</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.create&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * Make a form builder.
     *
     * <span class="token keyword">@return</span> <span class="token class-name">Form</span>
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">form</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Role</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Form</span> <span class="token variable">$form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;ID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token function">trans</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.slug&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">prepareForSave</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token function">trans</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
            <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">tree</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;permissions&#39;</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">nodes</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token variable">$permissionModel</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.database.permissions_model&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token variable">$permissionModel</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$permissionModel</span><span class="token punctuation">;</span>
    
                    <span class="token keyword">return</span> <span class="token variable">$permissionModel</span><span class="token operator">-&gt;</span><span class="token function">allNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">customFormat</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    
                    <span class="token keyword">return</span> <span class="token function">array_column</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
            <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token function">trans</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;updated_at&#39;</span><span class="token punctuation">,</span> <span class="token function">trans</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.updated_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="result" tabindex="-1"><a class="header-anchor" href="#result" aria-hidden="true">#</a> result</h4><p><img src="`+p+`" alt="" loading="lazy"></p><h3 id="functional-interface" tabindex="-1"><a class="header-anchor" href="#functional-interface" aria-hidden="true">#</a> Functional interface</h3><p>The form popup must be tied to a clickable page element that is clicked to bring up the popup.</p><h4 id="set-popuptitle" tabindex="-1"><a class="header-anchor" href="#set-popuptitle" aria-hidden="true">#</a> set popupTITLE</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$modal</span> <span class="token operator">=</span> <span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;TITLE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="bind-click-button" tabindex="-1"><a class="header-anchor" href="#bind-click-button" aria-hidden="true">#</a> bind click button</h4><p>You can bind a clicked button via the <code>ModalForm::click</code> method, which will bring up a popup when the button is clicked.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;TITLE&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;#click-button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="set-url" tabindex="-1"><a class="header-anchor" href="#set-url" aria-hidden="true">#</a> Set URL</h4><p>If you are creating a form, you can get the url of the form template by setting it as follows</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;新增角色&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.create-form&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth/roles/create&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If it&#39;s an edit type form, multiple URLs are required because the content of the form that pops up with each button clicked is different, so each button has a different link.</p><p>At this time, a link set by the <code>ModalForm::url</code> method is no longer sufficient, so you need to save the url on the <code>data-url</code> property of the clicked button:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;编辑角色&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Dcat.reload()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Refresh the page after editing the success</span>

    <span class="token comment">// When you need to bind different links to the same &quot;class&quot; button, put the link in the button&#39;s &quot;data-url&quot; attribute.</span>
    <span class="token variable">$editPage1</span> <span class="token operator">=</span> <span class="token function">admin_base_path</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth/roles/1/edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$editPage2</span> <span class="token operator">=</span> <span class="token function">admin_base_path</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth/roles/2/edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token string double-quoted-string">&quot;
&lt;div style=&#39;padding:30px 0&#39;&gt;
    &lt;span class=&#39;btn btn-blue edit-form&#39; data-url=&#39;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$editPage1</span><span class="token punctuation">}</span></span>&#39;&gt; Edit Form Popup1 &lt;/span&gt;
    &lt;span class=&#39;btn btn-blue edit-form&#39; data-url=&#39;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$editPage2</span><span class="token punctuation">}</span></span>&#39;&gt; Edit Form Popup 2 &lt;/span&gt;
&lt;/div&gt;
&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="form-save-success-callback" tabindex="-1"><a class="header-anchor" href="#form-save-success-callback" aria-hidden="true">#</a> Form save success callback</h4><p>The <code>success</code> method can be used to set the <code>js</code> code that will be executed after the form saves the success, and there is a <code>response</code> variable in the scope of the <code>js</code> code.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Editing roles&#39;</span><span class="token punctuation">)</span>
   <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
   <span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span>
       <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
<span class="token comment">// Print the server response data          </span>
console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Prompt success information</span>
Dcat<span class="token operator">.</span><span class="token function">success</span><span class="token punctuation">(</span>response<span class="token operator">.</span><span class="token class-name">message</span> <span class="token operator">||</span> <span class="token string single-quoted-string">&#39;Save success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Refresh the page after saving the success</span>
Dcat<span class="token operator">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">JS</span>        
   <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="form-save-failure-callback" tabindex="-1"><a class="header-anchor" href="#form-save-failure-callback" aria-hidden="true">#</a> Form Save Failure Callback</h4><p>Through the <code>error</code> method, you can set the <code>js</code> code that will be executed after the form fails to save, and there is a <code>response</code> variable in the scope of this <code>js</code> code, through which you can get the <code>json</code> data returned by the server.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Editing roles&#39;</span><span class="token punctuation">)</span>
   <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
   <span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span>
       <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
<span class="token comment">// Print server response data       </span>
console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">JS</span>        
   <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="callback-after-form-save" tabindex="-1"><a class="header-anchor" href="#callback-after-form-save" aria-hidden="true">#</a> Callback after form save</h4><p>The <code>saved</code> method allows you to set the <code>js</code> code to be executed after the form is saved:</p><ul><li><code>success</code> A value of true means the success is saved, otherwise it fails.</li><li><code>response</code> The <code>json</code> data returned by the server</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Editing roles&#39;</span><span class="token punctuation">)</span>
   <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
   <span class="token operator">-&gt;</span><span class="token function">saved</span><span class="token punctuation">(</span>
       <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">JS</span>
<span class="token comment">// Print server response data       </span>
console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Save success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token operator">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Save failed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token constant">JS</span>        
   <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="forced-refresh" tabindex="-1"><a class="header-anchor" href="#forced-refresh" aria-hidden="true">#</a> Forced refresh</h4><p>Pull new template data from the server each time you click a button.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Editing roles&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">forceRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="set-popup-width-and-height" tabindex="-1"><a class="header-anchor" href="#set-popup-width-and-height" aria-hidden="true">#</a> Set Popup Width and Height</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Editing roles&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">dimensions</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;50%&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;400px&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token comment">// or</span>
<span class="token class-name static-context">Form</span><span class="token operator">::</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Editing roles&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.edit-form&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;50%&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;400px&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tool-form-pop-up" tabindex="-1"><a class="header-anchor" href="#tool-form-pop-up" aria-hidden="true">#</a> Tool form pop-up</h2><p>The popup function of data form is usually more complicated to implement with a resource controller, so the system has a built-in popup function.</p><p><img src="`+n+'" alt="" loading="lazy"></p>',42),i=[c];function l(u,r){return a(),t("div",null,i)}const m=s(o,[["render",l],["__file","model-form-modal.html.vue"]]);export{m as default};
