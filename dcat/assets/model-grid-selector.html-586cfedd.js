import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,b as s,d as n,e as l,a}from"./app-98225aba.js";const i="/dcat/assets/6JTuX8z35m-1dfc0ece.png",u={},r=a('<h1 id="表格规格筛选器" tabindex="-1"><a class="header-anchor" href="#表格规格筛选器" aria-hidden="true">#</a> 表格规格筛选器</h1><p>这个功能用来构建类似淘宝或京东商品的规格选择。</p><p><img src="'+i+`" alt="" loading="lazy"></p><h3 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h3><blockquote><p>{tip} <code>select</code>和<code>selectOne</code>方法的第二个参数为选择器<code>label</code>, 可以省略，如果省略的话将会自动使用翻译文件的翻译.</p></blockquote><p>如下代码所示，假设<code>brand</code>字段的4个取值分别对应4个品牌，下面的方式会构建出<code>brand</code>的规格选择器</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Grid</span><span class="token punctuation">;</span>

<span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">selector</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Grid<span class="token punctuation">\\</span>Tools<span class="token punctuation">\\</span>Selector</span> <span class="token variable">$selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$selector</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;brand&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;品牌&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        <span class="token number">1</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;华为&#39;</span><span class="token punctuation">,</span>
        <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;小米&#39;</span><span class="token punctuation">,</span>
        <span class="token number">3</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;OPPO&#39;</span><span class="token punctuation">,</span>
        <span class="token number">4</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;vivo&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>select</code>方法默认是多选的，在页面上点击每一个选项的右边的加号，这个字段的查询会增加一个查询选项，如果字段筛选只允许选择一项，使用<code>selectOne</code>方法</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$selector</span><span class="token operator">-&gt;</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;brand&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;品牌&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token number">1</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;华为&#39;</span><span class="token punctuation">,</span>
    <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;小米&#39;</span><span class="token punctuation">,</span>
    <span class="token number">3</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;OPPO&#39;</span><span class="token punctuation">,</span>
    <span class="token number">4</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;vivo&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关联关系字段查询" tabindex="-1"><a class="header-anchor" href="#关联关系字段查询" aria-hidden="true">#</a> 关联关系字段查询</h3>`,10),d={href:"https://github.com/jqhph/laravel-wherehasin",target:"_blank",rel:"noopener noreferrer"},k=s("code",null,"whereHasIn",-1),v=a(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Dcat<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Grid</span><span class="token punctuation">;</span>

<span class="token variable">$grid</span><span class="token operator">-&gt;</span><span class="token function">selector</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Grid<span class="token punctuation">\\</span>Tools<span class="token punctuation">\\</span>Selector</span> <span class="token variable">$selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$selector</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;brand.id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;品牌&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        <span class="token number">1</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;华为&#39;</span><span class="token punctuation">,</span>
        <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;小米&#39;</span><span class="token punctuation">,</span>
        <span class="token number">3</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;OPPO&#39;</span><span class="token punctuation">,</span>
        <span class="token number">4</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;vivo&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义查询" tabindex="-1"><a class="header-anchor" href="#自定义查询" aria-hidden="true">#</a> 自定义查询</h3><p>上面的方式会使用在选择器上选定的值，作为查询条件进行查询，但是有些情况需要更灵活的控制查询方式，那么可以使用下面的方式自定义查询：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$selector</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;价格&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;0-999&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;1000-1999&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;2000-2999&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$between</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1999</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">2999</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">whereBetween</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">,</span> <span class="token variable">$between</span><span class="token punctuation">[</span><span class="token variable">$value</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上所示，传入一个匿名函数作为第四个参数，价格字段price选择之后，将会使用匿名函数中的逻辑进行数据查询，这样你可以定义任意的查询方式。</p>`,5);function g(b,m){const e=p("ExternalLinkIcon");return o(),c("div",null,[r,s("p",null,[n("如果安装了 "),s("a",d,[n("dcat/laravel-wherehasin"),l(e)]),n("，则会优先使用"),k,n("方法进行查询操作")]),v])}const f=t(u,[["render",g],["__file","model-grid-selector.html.vue"]]);export{f as default};
