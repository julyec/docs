import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as c,c as l,b as t,d as e,e as n,w as d,f as a}from"./app-083c2955.js";const u={},p=a(`<p>VuePress is markdown-centered. Each Markdown file inside your project is a standalone page.</p><h2 id="routing" tabindex="-1"><a class="header-anchor" href="#routing" aria-hidden="true">#</a> Routing</h2><p>By default, the route path of a page is determined by the relative path of your Markdown file.</p><p>Assuming this is the directory structure of your Markdown files:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>└─ docs
   ├─ guide
   │  ├─ getting-started.md
   │  └─ README.md
   ├─ contributing.md
   └─ README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),h=t("code",null,"docs",-1),m={href:"https://vuejs.press/reference/cli.html",target:"_blank",rel:"noopener noreferrer"},f=t("code",null,"vuepress dev docs",-1),g=a('<table><thead><tr><th>Relative Path</th><th>Route Path</th></tr></thead><tbody><tr><td><code>/README.md</code></td><td><code>/</code></td></tr><tr><td><code>/contributing.md</code></td><td><code>/contributing.html</code></td></tr><tr><td><code>/guide/README.md</code></td><td><code>/guide/</code></td></tr><tr><td><code>/guide/page.md</code></td><td><code>/guide/page.html</code></td></tr></tbody></table><h2 id="frontmatter" tabindex="-1"><a class="header-anchor" href="#frontmatter" aria-hidden="true">#</a> Frontmatter</h2>',2),k={href:"https://yaml.org/",target:"_blank",rel:"noopener noreferrer"},_=a(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token punctuation">-</span>US
<span class="token key atrule">title</span><span class="token punctuation">:</span> Title of this page
<span class="token key atrule">description</span><span class="token punctuation">:</span> Description of this page</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You must have noticed that those fields are similar with the Site Config in Config File. You can override <code>lang</code>, <code>title</code>, <code>description</code>, etc., of current page via frontmatter. So you can take frontmatter as page scope config.</p><p>Also, VuePress has built-in support for some frontmatter fields, and your theme may have its own special frontmatter, too.</p>`,3),v={class:"hint-container tip"},b=t("p",{class:"hint-container-title"},"Tips",-1),w={href:"https://vuejs.press/reference/frontmatter.html",target:"_blank",rel:"noopener noreferrer"},y=t("code",null,"vuepress-theme-hope",-1),x=t("h2",{id:"content",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#content","aria-hidden":"true"},"#"),e(" Content")],-1),M=t("p",null,[e("The main content of your page is written in Markdown. VuePress will firstly transform your Markdown to HTML code, then treat the HTML code as "),t("code",null,"<template>"),e(" of Vue SFC.")],-1),E={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"};function V(R,C){const o=s("ExternalLinkIcon"),r=s("RouterLink");return c(),l("div",null,[p,t("p",null,[e("Take the "),h,e(" directory as your "),t("a",m,[e("sourceDir"),n(o)]),e(", e.g. you are running "),f,e(" command. Then the route paths of your Markdown files would be:")]),g,t("p",null,[e("A Markdown file could contain a "),t("a",k,[e("YAML"),n(o)]),e(" frontmatter. The frontmatter must be at the top of the Markdown file and must be wrapped with a couple of triple-dashed lines. Here is a basic example:")]),_,t("div",v,[b,t("p",null,[e("Check out the "),t("a",w,[e("Frontmatter Reference"),n(o)]),e(" for a full list of VuePress built-in frontmatter.")]),t("p",null,[e("Check out the "),n(r,{to:"/config/frontmatter/"},{default:d(()=>[e("Config > Frontmatter")]),_:1}),e(" for the frontmatter of "),y,e(".")])]),x,M,t("p",null,[e("With the power of "),t("a",E,[e("markdown-it"),n(o)]),e(" and Vue template syntax, the basic Markdown can be extended a lot. Next, check out the "),n(r,{to:"/cookbook/vuepress/markdown.html"},{default:d(()=>[e("Markdown")]),_:1}),e(" guide for all the extensions of Markdown in VuePress.")])])}const L=i(u,[["render",V],["__file","page.html.vue"]]);export{L as default};
