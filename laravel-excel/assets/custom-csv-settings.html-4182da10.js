const n=JSON.parse(`{"key":"v-8681e7a6","path":"/imports/custom-csv-settings.html","title":"Custom CSV Settings","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Available settings","slug":"available-settings","link":"#available-settings","children":[]}],"git":{"createdTime":1704429178000,"updatedTime":1704429178000,"contributors":[{"name":"Moments","email":"554676262@qq.com","commits":1}]},"readingTime":{"minutes":0.49,"words":147},"filePathRelative":"imports/custom-csv-settings.md","localizedDate":"January 5, 2024","excerpt":"<h1> Custom CSV Settings</h1>\\n\\n<p>By default Laravel Excel uses the defaults from the config (<code>config/excel.php</code>). You can change this by adding the <code>WithCustomCsvSettings</code> interface.</p>\\n<div class=\\"language-php line-numbers-mode\\" data-ext=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token keyword\\">namespace</span> <span class=\\"token package\\">App<span class=\\"token punctuation\\">\\\\</span>Imports</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">use</span> <span class=\\"token package\\">Maatwebsite<span class=\\"token punctuation\\">\\\\</span>Excel<span class=\\"token punctuation\\">\\\\</span>Concerns<span class=\\"token punctuation\\">\\\\</span>ToModel</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">use</span> <span class=\\"token package\\">Maatwebsite<span class=\\"token punctuation\\">\\\\</span>Excel<span class=\\"token punctuation\\">\\\\</span>Concerns<span class=\\"token punctuation\\">\\\\</span>WithCustomCsvSettings</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name-definition class-name\\">UsersImport</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">ToModel</span><span class=\\"token punctuation\\">,</span> WithCustomCsvSettings\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function-definition function\\">model</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword type-hint\\">array</span> <span class=\\"token variable\\">$row</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">User</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>\\n            <span class=\\"token string single-quoted-string\\">'name'</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token variable\\">$row</span><span class=\\"token punctuation\\">[</span><span class=\\"token string single-quoted-string\\">'0'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token string single-quoted-string\\">'email'</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token variable\\">$row</span><span class=\\"token punctuation\\">[</span><span class=\\"token string single-quoted-string\\">'1'</span><span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    \\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function-definition function\\">getCsvSettings</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span> <span class=\\"token keyword return-type\\">array</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span>\\n            <span class=\\"token string single-quoted-string\\">'input_encoding'</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token string single-quoted-string\\">'ISO-8859-1'</span>\\n        <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
