import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,b as n,d as a,w as t,e as s,a as u}from"./app-f5806220.js";const r={},d=n("h1",{id:"storing-exports-on-disk",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#storing-exports-on-disk","aria-hidden":"true"},"#"),s(" Storing exports on disk")],-1),k={class:"table-of-contents"},v={href:"https://laravel.com/docs/master/filesystem",target:"_blank",rel:"noopener noreferrer"},m=u(`<h2 id="default-disk" tabindex="-1"><a class="header-anchor" href="#default-disk" aria-hidden="true">#</a> Default disk</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">storeExcel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token comment">// Store on default disk</span>
    <span class="token class-name static-context">Excel</span><span class="token operator">::</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InvoicesExport</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;invoices.xlsx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="custom-disks" tabindex="-1"><a class="header-anchor" href="#custom-disks" aria-hidden="true">#</a> Custom disks</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">storeExcel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token comment">// Store on a different disk (e.g. s3)</span>
    <span class="token class-name static-context">Excel</span><span class="token operator">::</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InvoicesExport</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;invoices.xlsx&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;s3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Store on a different disk with a defined writer type. </span>
    <span class="token class-name static-context">Excel</span><span class="token operator">::</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InvoicesExport</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;invoices.xlsx&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;s3&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">Excel</span><span class="token operator">::</span><span class="token constant">XLSX</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="disk-options" tabindex="-1"><a class="header-anchor" href="#disk-options" aria-hidden="true">#</a> Disk options</h2><p>If you want to pass some options to the disk, pass them to Excel::store() as the fifth parameter.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">storeExcel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token class-name static-context">Excel</span><span class="token operator">::</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InvoicesExport</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;invoices.xlsx&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;s3&#39;</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;visibility&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;private&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Laravel has a shortcut for private files:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">storeExcel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token class-name static-context">Excel</span><span class="token operator">::</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InvoicesExport</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;invoices.xlsx&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;s3&#39;</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;private&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">File names cannot include certain characters:</p><ul><li><code>&lt;</code> (less than)</li><li><code>&gt;</code> (greater than)</li><li><code>:</code> (colon)</li><li><code>&quot;</code> (double quote)</li><li><code>/</code> (forward slash)</li><li><code>\\</code> (backslash)</li><li><code>|</code> (vertical bar or pipe)</li><li><code>?</code> (question mark)</li><li><code>*</code> (asterisk)</li></ul></div><h2 id="note-about-queuing" tabindex="-1"><a class="header-anchor" href="#note-about-queuing" aria-hidden="true">#</a> Note about queuing</h2>`,11),h=n("code",null,"Excel::queue()",-1),g=n("code",null,"ShouldQueue",-1),f={href:"https://docs.laravel-excel.com/3.1/exports/queued.html",target:"_blank",rel:"noopener noreferrer"};function b(x,_){const e=p("router-link"),o=p("ExternalLinkIcon");return c(),l("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(e,{to:"#default-disk"},{default:t(()=>[s("Default disk")]),_:1})]),n("li",null,[a(e,{to:"#custom-disks"},{default:t(()=>[s("Custom disks")]),_:1})]),n("li",null,[a(e,{to:"#disk-options"},{default:t(()=>[s("Disk options")]),_:1})]),n("li",null,[a(e,{to:"#note-about-queuing"},{default:t(()=>[s("Note about queuing")]),_:1})])])]),n("p",null,[s("Exports can easily be stored on any "),n("a",v,[s("filesystem"),a(o)]),s(" that Laravel supports.")]),m,n("p",null,[s("If you are storing the export using "),h,s(" or using the "),g,s(" interface, make sure to have a look at the "),n("a",f,[s("queuing docs"),a(o)])])])}const y=i(r,[["render",b],["__file","store.html.vue"]]);export{y as default};
