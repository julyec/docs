const n=JSON.parse(`{"key":"v-7ffb0843","path":"/imports/testing.html","title":"Testing","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Testing imports","slug":"testing-imports","link":"#testing-imports","children":[]},{"level":2,"title":"Testing queuing imports","slug":"testing-queuing-imports","link":"#testing-queuing-imports","children":[]},{"level":2,"title":"Testing imports with dynamic file name/path","slug":"testing-imports-with-dynamic-file-name-path","link":"#testing-imports-with-dynamic-file-name-path","children":[]}],"git":{"createdTime":1704429178000,"updatedTime":1704429178000,"contributors":[{"name":"Moments","email":"554676262@qq.com","commits":1}]},"readingTime":{"minutes":0.72,"words":215},"filePathRelative":"imports/testing.md","localizedDate":"January 5, 2024","excerpt":"<h1> Testing</h1>\\n\\n<p>The Excel facade can be used to swap the importer to a fake.</p>\\n<h2> Testing imports</h2>\\n<div class=\\"language-php line-numbers-mode\\" data-ext=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token doc-comment comment\\">/**\\n* <span class=\\"token keyword\\">@test</span>\\n*/</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function-definition function\\">user_can_import_users</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> \\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name static-context\\">Excel</span><span class=\\"token operator\\">::</span><span class=\\"token function\\">fake</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    \\n    <span class=\\"token variable\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">actingAs</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">givenUser</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n         <span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'/users/import/xlsx'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token class-name static-context\\">Excel</span><span class=\\"token operator\\">::</span><span class=\\"token function\\">assertImported</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'filename.xlsx'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'diskName'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    \\n    <span class=\\"token class-name static-context\\">Excel</span><span class=\\"token operator\\">::</span><span class=\\"token function\\">assertImported</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'filename.xlsx'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'diskName'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name type-declaration\\">UsersImport</span> <span class=\\"token variable\\">$import</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token constant boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    \\n    <span class=\\"token comment\\">// When passing the callback as 2nd param, the disk will be the default disk.</span>\\n    <span class=\\"token class-name static-context\\">Excel</span><span class=\\"token operator\\">::</span><span class=\\"token function\\">assertImported</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'filename.xlsx'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name type-declaration\\">UsersImport</span> <span class=\\"token variable\\">$import</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token constant boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
