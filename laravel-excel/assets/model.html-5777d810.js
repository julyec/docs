const n=JSON.parse(`{"key":"v-29969d4a","path":"/imports/model.html","title":"Importing to models","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Upserting models","slug":"upserting-models","link":"#upserting-models","children":[{"level":3,"title":"Upserting with specific columns","slug":"upserting-with-specific-columns","link":"#upserting-with-specific-columns","children":[]}]},{"level":2,"title":"Skipping rows","slug":"skipping-rows","link":"#skipping-rows","children":[]},{"level":2,"title":"Possible column names","slug":"possible-column-names","link":"#possible-column-names","children":[]},{"level":2,"title":"Handling persistence on your own","slug":"handling-persistence-on-your-own","link":"#handling-persistence-on-your-own","children":[]}],"git":{"createdTime":1704429178000,"updatedTime":1704429178000,"contributors":[{"name":"Moments","email":"554676262@qq.com","commits":1}]},"readingTime":{"minutes":1.65,"words":496},"filePathRelative":"imports/model.md","localizedDate":"January 5, 2024","excerpt":"<h1> Importing to models</h1>\\n\\n<p>In case you want to import a workbook to an Eloquent model, you can use the <code>ToModel</code> concern. The concern enforces a <code>model()</code> method which accepts a model to be returned.</p>\\n<div class=\\"language-php line-numbers-mode\\" data-ext=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token keyword\\">namespace</span> <span class=\\"token package\\">App<span class=\\"token punctuation\\">\\\\</span>Imports</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">use</span> <span class=\\"token package\\">App<span class=\\"token punctuation\\">\\\\</span>User</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">use</span> <span class=\\"token package\\">Maatwebsite<span class=\\"token punctuation\\">\\\\</span>Excel<span class=\\"token punctuation\\">\\\\</span>Concerns<span class=\\"token punctuation\\">\\\\</span>ToModel</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name-definition class-name\\">UsersImport</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">ToModel</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function-definition function\\">model</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword type-hint\\">array</span> <span class=\\"token variable\\">$row</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">User</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>\\n            <span class=\\"token string single-quoted-string\\">'name'</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token variable\\">$row</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
