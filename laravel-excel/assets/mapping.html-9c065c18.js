import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,b as n,d as e,w as p,e as s,a as l}from"./app-5f6cf456.js";const u={},r=n("h1",{id:"mapping-data",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mapping-data","aria-hidden":"true"},"#"),s(" Mapping data")],-1),d={class:"table-of-contents"},k=l(`<h2 id="mapping-rows" tabindex="-1"><a class="header-anchor" href="#mapping-rows" aria-hidden="true">#</a> Mapping rows</h2><p>By adding <code>WithMapping</code> you map the data that needs to be added as row. This way you have control over the actual source for each column. In case of using the Eloquent query builder:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>FromQuery</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>WithMapping</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">PhpOffice<span class="token punctuation">\\</span>PhpSpreadsheet<span class="token punctuation">\\</span>Shared<span class="token punctuation">\\</span>Date</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">InvoicesExport</span> <span class="token keyword">implements</span> <span class="token class-name">FromQuery</span><span class="token punctuation">,</span> WithMapping
<span class="token punctuation">{</span>    
    <span class="token doc-comment comment">/**
    * <span class="token keyword">@param</span> <span class="token class-name">Invoice</span> <span class="token parameter">$invoice</span>
    */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">map</span><span class="token punctuation">(</span><span class="token variable">$invoice</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token variable">$invoice</span><span class="token operator">-&gt;</span><span class="token property">invoice_number</span><span class="token punctuation">,</span>
            <span class="token variable">$invoice</span><span class="token operator">-&gt;</span><span class="token property">user</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">,</span>
            <span class="token class-name static-context">Date</span><span class="token operator">::</span><span class="token function">dateTimeToExcel</span><span class="token punctuation">(</span><span class="token variable">$invoice</span><span class="token operator">-&gt;</span><span class="token property">created_at</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="multiple-rows" tabindex="-1"><a class="header-anchor" href="#multiple-rows" aria-hidden="true">#</a> Multiple rows</h3><p>You can also return multiple rows inside the map function:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>FromQuery</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>WithMapping</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">PhpOffice<span class="token punctuation">\\</span>PhpSpreadsheet<span class="token punctuation">\\</span>Shared<span class="token punctuation">\\</span>Date</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">InvoicesExport</span> <span class="token keyword">implements</span> <span class="token class-name">FromQuery</span><span class="token punctuation">,</span> WithMapping
<span class="token punctuation">{</span>    
    <span class="token doc-comment comment">/**
    * <span class="token keyword">@param</span> <span class="token class-name">Invoice</span> <span class="token parameter">$invoice</span>
    */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">map</span><span class="token punctuation">(</span><span class="token variable">$invoice</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// This example will return 3 rows.</span>
        <span class="token comment">// First row will have 2 column, the next 2 will have 1 column</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>
                <span class="token variable">$invoice</span><span class="token operator">-&gt;</span><span class="token property">invoice_number</span><span class="token punctuation">,</span>
                <span class="token class-name static-context">Date</span><span class="token operator">::</span><span class="token function">dateTimeToExcel</span><span class="token punctuation">(</span><span class="token variable">$invoice</span><span class="token operator">-&gt;</span><span class="token property">created_at</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>
                <span class="token variable">$invoice</span><span class="token operator">-&gt;</span><span class="token property">lines</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token property">description</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>
                <span class="token variable">$invoice</span><span class="token operator">-&gt;</span><span class="token property">lines</span><span class="token operator">-&gt;</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token property">description</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="adding-a-heading-row" tabindex="-1"><a class="header-anchor" href="#adding-a-heading-row" aria-hidden="true">#</a> Adding a heading row</h2><p>A heading row can easily be added by adding the <code>WithHeadings</code> concern. The heading row will be added as very first row of the sheet.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>FromQuery</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>WithHeadings</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">InvoicesExport</span> <span class="token keyword">implements</span> <span class="token class-name">FromQuery</span><span class="token punctuation">,</span> WithHeadings
<span class="token punctuation">{</span>   
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">headings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;#&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;User&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;Date&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you need to have multiple heading rows, you can return multiple rows from the <code>headings()</code> method:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>FromQuery</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>WithHeadings</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">InvoicesExport</span> <span class="token keyword">implements</span> <span class="token class-name">FromQuery</span><span class="token punctuation">,</span> WithHeadings
<span class="token punctuation">{</span>   
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">headings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
           <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;First row&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;First row&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
           <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Second row&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Second row&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="prepare-rows" tabindex="-1"><a class="header-anchor" href="#prepare-rows" aria-hidden="true">#</a> Prepare rows</h2><p>If you need to prepare rows before appending these rows to sheet, you can add method <code>prepareRows</code> to your export class. This method will be called before flattening the query output and calling <code>map()</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>FromQuery</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>WithHeadings</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UsersExport</span> <span class="token keyword">implements</span> <span class="token class-name">FromQuery</span><span class="token punctuation">,</span> WithHeadings
<span class="token punctuation">{</span>   
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">prepareRows</span><span class="token punctuation">(</span><span class="token variable">$rows</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$rows</span><span class="token operator">-&gt;</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">name</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">&#39; (prepared)&#39;</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token variable">$user</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function v(m,b){const a=o("router-link");return i(),c("div",null,[r,n("nav",d,[n("ul",null,[n("li",null,[e(a,{to:"#mapping-rows"},{default:p(()=>[s("Mapping rows")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#multiple-rows"},{default:p(()=>[s("Multiple rows")]),_:1})])])]),n("li",null,[e(a,{to:"#adding-a-heading-row"},{default:p(()=>[s("Adding a heading row")]),_:1})]),n("li",null,[e(a,{to:"#prepare-rows"},{default:p(()=>[s("Prepare rows")]),_:1})])])]),k])}const w=t(u,[["render",v],["__file","mapping.html.vue"]]);export{w as default};
