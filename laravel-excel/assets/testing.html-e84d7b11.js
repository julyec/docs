const n=JSON.parse(`{"key":"v-90743bdc","path":"/exports/testing.html","title":"Testing","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Testing downloads","slug":"testing-downloads","link":"#testing-downloads","children":[]},{"level":2,"title":"Testing storing exports","slug":"testing-storing-exports","link":"#testing-storing-exports","children":[]},{"level":2,"title":"Testing queuing exports","slug":"testing-queuing-exports","link":"#testing-queuing-exports","children":[]},{"level":2,"title":"Testing exports with dynamic file name/path","slug":"testing-exports-with-dynamic-file-name-path","link":"#testing-exports-with-dynamic-file-name-path","children":[]}],"git":{"createdTime":1704429178000,"updatedTime":1704429178000,"contributors":[{"name":"Moments","email":"554676262@qq.com","commits":1}]},"readingTime":{"minutes":0.88,"words":265},"filePathRelative":"exports/testing.md","localizedDate":"January 5, 2024","excerpt":"<h1> Testing</h1>\\n\\n<p>The Excel facade can be used to swap the exporter to a fake.</p>\\n<h2> Testing downloads</h2>\\n<div class=\\"language-php line-numbers-mode\\" data-ext=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token doc-comment comment\\">/**\\n* <span class=\\"token keyword\\">@test</span>\\n*/</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function-definition function\\">user_can_download_invoices_export</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> \\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name static-context\\">Excel</span><span class=\\"token operator\\">::</span><span class=\\"token function\\">fake</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token variable\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">actingAs</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">givenUser</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n         <span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'/invoices/download/xlsx'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token class-name static-context\\">Excel</span><span class=\\"token operator\\">::</span><span class=\\"token function\\">assertDownloaded</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'filename.xlsx'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name type-declaration\\">InvoicesExport</span> <span class=\\"token variable\\">$export</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// Assert that the correct export is downloaded.</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token variable\\">$export</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">collection</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">contains</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'#2018-01'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
