import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as p,c as i,b as n,d as e,w as t,e as s,a as l}from"./app-edc8bdf9.js";const r={},d=n("h1",{id:"concerns",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#concerns","aria-hidden":"true"},"#"),s(" Concerns")],-1),u={class:"table-of-contents"},k=l(`<p>Most of the export/import configuration is done by using <strong>Concerns</strong>.</p><h2 id="contracts" tabindex="-1"><a class="header-anchor" href="#contracts" aria-hidden="true">#</a> Contracts</h2><p>Concerns are basically just simple interfaces. Implementing them will make the object adhere to a certain contract. This contract can request specific methods that e.g. data can be passed through.</p><p>For instance, the <code>FromCollection</code> requests the Export object to implement a <code>collection</code> method, that needs to return a <code>Collection</code> instance.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Exports</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>FromCollection</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UsersExport</span> <span class="token keyword">implements</span> <span class="token class-name">FromCollection</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">collection</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pointer-interface" tabindex="-1"><a class="header-anchor" href="#pointer-interface" aria-hidden="true">#</a> Pointer interface</h2><p>In other cases it might not ask for any methods to be implemented, but merely functions as a pointer interface.</p><p>For instance, the <code>ShouldAutoSize</code> concern doesn&#39;t pass on any specific information, but does tell the Export process that the columns need to be automatically sized.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Exports</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Maatwebsite<span class="token punctuation">\\</span>Excel<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>ShouldAutoSize</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UsersExport</span> <span class="token keyword">implements</span> <span class="token class-name">ShouldAutoSize</span>
<span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function m(h,v){const a=c("router-link");return p(),i("div",null,[d,n("nav",u,[n("ul",null,[n("li",null,[e(a,{to:"#contracts"},{default:t(()=>[s("Contracts")]),_:1})]),n("li",null,[e(a,{to:"#pointer-interface"},{default:t(()=>[s("Pointer interface")]),_:1})])])]),k])}const _=o(r,[["render",m],["__file","concerns.html.vue"]]);export{_ as default};
