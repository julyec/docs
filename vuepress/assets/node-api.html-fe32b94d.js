import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as d,d as a,a as n,b as e,w as t,e as l}from"./app-d06631bc.js";const u={},h=n("h1",{id:"node-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#node-api","aria-hidden":"true"},"#"),e(" Node API")],-1),k={href:"https://www.npmjs.com/package/@vuepress/core",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.npmjs.com/package/vuepress",target:"_blank",rel:"noopener noreferrer"},v=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> @vuepress/core@next
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> App</h2>`,2),f=l(`<p>The <code>BuildApp</code> and <code>DevApp</code> share almost the same properties and methods, except <a href="#build">build</a> and <a href="#dev">dev</a> method.</p><h3 id="createbuildapp" tabindex="-1"><a class="header-anchor" href="#createbuildapp" aria-hidden="true">#</a> createBuildApp</h3><ul><li>Signature:</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">createBuildApp</span><span class="token operator">:</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> AppConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> BuildApp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Parameters:</li></ul><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>Config to create a VuePress app.</td></tr></tbody></table><ul><li><p>Details:</p><p>Create a build mode app instance, which is used for building static files.</p></li><li><p>Example:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">build</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createBuildApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// ...options</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// initialize and prepare</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// build</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// process onGenerated hook</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span>pluginApi<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onGenerated<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Also see: <ul><li><a href="#build">Node API &gt; App Methods &gt; build</a></li></ul></li></ul><h3 id="createdevapp" tabindex="-1"><a class="header-anchor" href="#createdevapp" aria-hidden="true">#</a> createDevApp</h3><ul><li>Signature:</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">createDevApp</span><span class="token operator">:</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> AppConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> DevApp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Parameters:</li></ul><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>Config to create a VuePress app.</td></tr></tbody></table><ul><li><p>Details:</p><p>Create a dev mode app instance, which is used for starting a dev server.</p></li><li><p>Example:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">dev</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createDevApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// ...options</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// initialize and prepare</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// start dev server</span>
  <span class="token keyword">const</span> closeDevServer <span class="token operator">=</span> <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">dev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// set up file watchers</span>
  <span class="token keyword">const</span> watchers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// restart dev server</span>
  <span class="token keyword">const</span> <span class="token function-variable function">restart</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token comment">// close all watchers</span>
      <span class="token operator">...</span>watchers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// close current dev server</span>
      <span class="token function">closeDevServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">dev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// process onWatched hook</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span>pluginApi<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onWatched<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> watchers<span class="token punctuation">,</span> restart<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Also see: <ul><li><a href="#dev">Node API &gt; App Methods &gt; dev</a></li></ul></li></ul><h2 id="app-properties" tabindex="-1"><a class="header-anchor" href="#app-properties" aria-hidden="true">#</a> App Properties</h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><ul><li><p>Type: <code>AppOptions</code></p></li><li><p>Details:</p><p>Options of VuePress app.</p><p>The options come from the <code>config</code> argument in <a href="#createbuildapp">createBuildApp</a> / <a href="#createdevapp">createDevApp</a>, while all optional fields will be filled with a default value.</p></li></ul><h3 id="sitedata" tabindex="-1"><a class="header-anchor" href="#sitedata" aria-hidden="true">#</a> siteData</h3>`,21),g=n("li",null,[n("p",null,[e("Type: "),n("code",null,"SiteData")])],-1),b=n("p",null,"Details:",-1),_=l('<h3 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Version of VuePress app, i.e. version of <code>@vuepress/core</code> package.</p></li></ul><h3 id="env-isbuild" tabindex="-1"><a class="header-anchor" href="#env-isbuild" aria-hidden="true">#</a> env.isBuild</h3><ul><li><p>Type: <code>boolean</code></p></li><li><p>Details:</p><p>Environment flag used to identify whether the app is running in build mode, i.e. whether a <a href="#createbuildapp">BuildApp</a> instance.</p></li></ul><h3 id="env-isdev" tabindex="-1"><a class="header-anchor" href="#env-isdev" aria-hidden="true">#</a> env.isDev</h3><ul><li><p>Type: <code>boolean</code></p></li><li><p>Details:</p><p>Environment flag used to identify whether the app is running in dev mode, i.e. whether a <a href="#createdevapp">DevApp</a> instance.</p></li></ul><h3 id="env-isdebug" tabindex="-1"><a class="header-anchor" href="#env-isdebug" aria-hidden="true">#</a> env.isDebug</h3><ul><li><p>Type: <code>boolean</code></p></li><li><p>Details:</p><p>Environment flag used to identify whether the debug mode is enabled.</p></li></ul><h3 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown" aria-hidden="true">#</a> markdown</h3>',9),y=n("li",null,[n("p",null,[e("Type: "),n("code",null,"MarkdownIt")])],-1),w=n("p",null,"Details:",-1),x={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},A=n("h3",{id:"pages",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pages","aria-hidden":"true"},"#"),e(" pages")],-1),P=n("li",null,[n("p",null,[e("Type: "),n("code",null,"Page[]")])],-1),D=n("p",null,"Details:",-1),T=n("p",null,[e("The "),n("a",{href:"#page"},"Page"),e(" object array.")],-1),I=l(`<h2 id="app-methods" tabindex="-1"><a class="header-anchor" href="#app-methods" aria-hidden="true">#</a> App Methods</h2><h3 id="dir" tabindex="-1"><a class="header-anchor" href="#dir" aria-hidden="true">#</a> dir</h3><ul><li><p>Utils:</p><ul><li><code>dir.cache()</code>: resolve to cache directory</li><li><code>dir.temp()</code>: resolve to temp directory</li><li><code>dir.source()</code>: resolve to source directory</li><li><code>dir.dest()</code>: resolve to dest directory</li><li><code>dir.client()</code>: resolve to <code>@vuepress/client</code> directory</li><li><code>dir.public()</code>: resolve to public directory</li></ul></li><li><p>Signature:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">AppDirFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>Details:</p><p>Utils to resolve the absolute file path in corresponding directory.</p><p>If you don&#39;t provide any arguments, it will return the absolute path of the directory.</p></li><li><p>Example:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// resolve the absolute file path of the \`\${sourceDir}/README.md\`</span>
<span class="token keyword">const</span> homeSourceFile <span class="token operator">=</span> app<span class="token punctuation">.</span>dir<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token string">&quot;README.md&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="writetemp" tabindex="-1"><a class="header-anchor" href="#writetemp" aria-hidden="true">#</a> writeTemp</h3><ul><li>Signature:</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">writeTemp</span><span class="token punctuation">(</span>file<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Parameters:</li></ul><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>file</td><td><code>string</code></td><td>Filepath of the temp file that going to be written. Relative to temp directory.</td></tr><tr><td>content</td><td><code>string</code></td><td>Content of the temp file that going to be written.</td></tr></tbody></table><ul><li><p>Details:</p><p>A method to write temp file.</p><p>The written file could be imported via <code>@temp</code> alias in client files.</p></li><li><p>Example:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// write temp file in onPrepared hook</span>
  <span class="token keyword">async</span> <span class="token function">onPrepared</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">writeTemp</span><span class="token punctuation">(</span><span class="token string">&quot;foo.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;export const foo = &#39;bar&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// import temp file in client code</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@temp/foo&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> init</h3><ul><li>Signature:</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17),C=n("li",null,[n("p",null,"Details:"),n("p",null,"Initialize VuePress app.")],-1),E=n("p",null,"Also see:",-1),M=l(`<h3 id="prepare" tabindex="-1"><a class="header-anchor" href="#prepare" aria-hidden="true">#</a> prepare</h3><ul><li>Signature:</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),S=n("li",null,[n("p",null,"Details:"),n("p",null,"Prepare client temp files.")],-1),B=n("p",null,"Also see:",-1),R=l(`<h3 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> build</h3><ul><li>Signature:</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),N=n("li",null,[n("p",null,"Details:"),n("p",null,"Generate static site files."),n("p",null,[e("This method is only available in "),n("code",null,"BuildApp"),e(".")])],-1),F=n("p",null,"Also see:",-1),q=n("li",null,[n("a",{href:"#createbuildapp"},"Node API > App > createBuildApp")],-1),V=l(`<h3 id="dev" tabindex="-1"><a class="header-anchor" href="#dev" aria-hidden="true">#</a> dev</h3><ul><li>Signature:</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">dev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),z=n("li",null,[n("p",null,"Details:"),n("p",null,"Start dev server."),n("p",null,[e("This method is only available in "),n("code",null,"DevApp"),e(".")])],-1),H=n("p",null,"Also see:",-1),L=n("li",null,[n("a",{href:"#createdevapp"},"Node API > App > createDevApp")],-1),j=l(`<h2 id="page" tabindex="-1"><a class="header-anchor" href="#page" aria-hidden="true">#</a> Page</h2><h3 id="createpage" tabindex="-1"><a class="header-anchor" href="#createpage" aria-hidden="true">#</a> createPage</h3><ul><li>Signature:</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">createPage</span><span class="token operator">:</span> <span class="token punctuation">(</span>app<span class="token operator">:</span> App<span class="token punctuation">,</span> options<span class="token operator">:</span> PageOptions<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Page<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Parameters:</li></ul><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>app</td><td><code>App</code></td><td>The VuePress app instance.</td></tr><tr><td>options</td><td><code>PageOptions</code></td><td>Options to create VuePress page.</td></tr></tbody></table><ul><li><p>Details:</p><p>Create a VuePress page object.</p></li><li><p>Example:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/core&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// create an extra page in onInitialized hook</span>
  <span class="token keyword">async</span> <span class="token function">onInitialized</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span>pages<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
      <span class="token keyword">await</span> <span class="token function">createPage</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        path<span class="token operator">:</span> <span class="token string">&quot;/foo.html&quot;</span><span class="token punctuation">,</span>
        frontmatter<span class="token operator">:</span> <span class="token punctuation">{</span>
          layout<span class="token operator">:</span> <span class="token string">&quot;Layout&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\
# Foo Page

Hello, world.
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),G=n("li",null,[n("a",{href:"#pages"},"Node API > App Properties > pages")],-1),O=n("h2",{id:"page-properties",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#page-properties","aria-hidden":"true"},"#"),e(" Page Properties")],-1),U=n("h3",{id:"key",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#key","aria-hidden":"true"},"#"),e(" key")],-1),W=n("li",null,[n("p",null,[e("Type: "),n("code",null,"string")])],-1),$=n("p",null,"Details:",-1),J=n("p",null,"Identifier of the page.",-1),K={href:"https://router.vuejs.org/api/#name-2",target:"_blank",rel:"noopener noreferrer"},Q=n("p",null,"Also see:",-1),X=n("h3",{id:"path",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#path","aria-hidden":"true"},"#"),e(" path")],-1),Y=n("li",null,[n("p",null,[e("Type: "),n("code",null,"string")])],-1),Z=n("li",null,[n("p",null,"Details:"),n("p",null,"Route path of the page.")],-1),nn=n("p",null,"Also see:",-1),en=n("li",null,[n("a",{href:"#pathinferred"},"Node API > Page Properties > pathInferred")],-1),an=n("h3",{id:"title",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#title","aria-hidden":"true"},"#"),e(" title")],-1),sn=n("li",null,[n("p",null,[e("Type: "),n("code",null,"string")])],-1),tn=n("li",null,[n("p",null,"Details:"),n("p",null,"Title of the page.")],-1),ln=n("p",null,"Also see:",-1),on=n("h3",{id:"lang",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lang","aria-hidden":"true"},"#"),e(" lang")],-1),pn=l("<li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Language of the page.</p></li><li><p>Example:</p><ul><li><code>&#39;en-US&#39;</code></li><li><code>&#39;zh-CN&#39;</code></li></ul></li>",3),cn=n("p",null,"Also see:",-1),rn=n("h3",{id:"frontmatter",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#frontmatter","aria-hidden":"true"},"#"),e(" frontmatter")],-1),dn=n("li",null,[n("p",null,[e("Type: "),n("code",null,"PageFrontmatter")])],-1),un=n("li",null,[n("p",null,"Details:"),n("p",null,"Frontmatter of the page.")],-1),hn=n("p",null,"Also see:",-1),kn=l(`<h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers" aria-hidden="true">#</a> headers</h3><ul><li>Type: <code>PageHeader[]</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PageHeader</span> <span class="token punctuation">{</span>
  level<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  slug<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  children<span class="token operator">:</span> PageHeader<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),mn=n("li",null,[n("p",null,"Details:"),n("p",null,"Headers of the page.")],-1),vn=n("p",null,"Also see:",-1),fn=l(`<h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><ul><li>Type: <code>PageData</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PageData</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  lang<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  frontmatter<span class="token operator">:</span> PageFrontmatter<span class="token punctuation">;</span>
  headers<span class="token operator">:</span> PageHeader<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),gn=n("li",null,[n("p",null,"Details:"),n("p",null,"Data of the page."),n("p",null,"Page data would be available in client side.")],-1),bn=n("p",null,"Also see:",-1),_n=l('<h3 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> content</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Raw content of the page.</p></li></ul><h3 id="contentrendered" tabindex="-1"><a class="header-anchor" href="#contentrendered" aria-hidden="true">#</a> contentRendered</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Rendered content of the page.</p></li></ul><h3 id="date" tabindex="-1"><a class="header-anchor" href="#date" aria-hidden="true">#</a> date</h3>',5),yn=l("<li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Date of the page, in &#39;yyyy-MM-dd&#39; format.</p></li><li><p>Example:</p><ul><li><code>&#39;0000-00-00&#39;</code></li><li><code>&#39;2021-08-16</code>&#39;</li></ul></li>",3),wn=n("p",null,"Also see:",-1),xn=n("h3",{id:"deps",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#deps","aria-hidden":"true"},"#"),e(" deps")],-1),An=n("li",null,[n("p",null,[e("Type: "),n("code",null,"string[]")])],-1),Pn=n("li",null,[n("p",null,"Details:"),n("p",null,"Dependencies of the page."),n("p",null,[e("For example, if users import code snippet in the page, the absolute file path of the imported file would be added to "),n("code",null,"deps"),e(".")])],-1),Dn=n("p",null,"Also see:",-1),Tn=l(`<h3 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> links</h3><ul><li>Type: <code>MarkdownLink[]</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">MarkdownLink</span> <span class="token punctuation">{</span>
  raw<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  relative<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  absolute<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Details:</p><p>Links included in the page content.</p></li></ul><h3 id="markdownenv" tabindex="-1"><a class="header-anchor" href="#markdownenv" aria-hidden="true">#</a> markdownEnv</h3>`,5),In=l("<li><p>Type: <code>Record&lt;string, unknown&gt;</code></p></li><li><p>Details:</p><p>The <code>env</code> object when parsing markdown content with markdown-it.</p><p>Some markdown-it plugins may store extra information inside this object, and you can make use of them for advanced customization.</p><p>Notice that some other page properties are also extracted from the original <code>env</code> object. Those properties have already been removed from <code>page.markdownEnv</code>.</p></li>",2),Cn=n("p",null,"Also see:",-1),En={href:"https://markdown-it.github.io/markdown-it/#MarkdownIt.parse",target:"_blank",rel:"noopener noreferrer"},Mn=n("h3",{id:"pathinferred",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pathinferred","aria-hidden":"true"},"#"),e(" pathInferred")],-1),Sn=l('<li><p>Type: <code>string | null</code></p></li><li><p>Details:</p><p>Route path of the page that inferred from file path.</p><p>By default, the route path is inferred from the relative file path of the Markdown source file. However, users may explicitly set the route path, e.g. <a href="#permalink">permalink</a>, which would be used as the final route path of the page. So we keep the inferred path as a page property in case you may need it.</p><p>It would be <code>null</code> if the page does not come from a Markdown source file.</p></li><li><p>Example:</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/foo.html&#39;</code></li></ul></li>',3),Bn=n("p",null,"Also see:",-1),Rn=n("li",null,[n("a",{href:"#path"},"Node API > Page Properties > path")],-1),Nn=n("h3",{id:"pathlocale",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pathlocale","aria-hidden":"true"},"#"),e(" pathLocale")],-1),Fn=l("<li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Locale prefix of the page route path.</p><p>It is inferred from the relative file path of the Markdown source file and the key of <code>locales</code> option in user config.</p></li><li><p>Example:</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/en/&#39;</code></li><li><code>&#39;/zh/&#39;</code></li></ul></li>",3),qn=n("p",null,"Also see:",-1),Vn=n("h3",{id:"permalink",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#permalink","aria-hidden":"true"},"#"),e(" permalink")],-1),zn=n("li",null,[n("p",null,[e("Type: "),n("code",null,"string | null")])],-1),Hn=n("li",null,[n("p",null,"Details:"),n("p",null,"Permalink of the page.")],-1),Ln=n("p",null,"Also see:",-1),jn=n("h3",{id:"routemeta",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#routemeta","aria-hidden":"true"},"#"),e(" routeMeta")],-1),Gn=n("li",null,[n("p",null,[e("Type: "),n("code",null,"Record<string, unknown>")])],-1),On=n("li",null,[n("p",null,"Details:"),n("p",null,"Custom data to be attached to the route record of vue-router.")],-1),Un=n("p",null,"Also see:",-1),Wn={href:"https://router.vuejs.org/api/#meta",target:"_blank",rel:"noopener noreferrer"},$n=l('<div class="hint-container tip"><p class="hint-container-title">What&#39;s the difference between route meta and page data?</p><p>Both <a href="#routemeta">route meta</a> and <a href="#data">page data</a> is available in client side. However, route meta is attached to the route record, so the route meta of all pages would be loaded at once when users enter your site. In the contrast, page data is saved in separated files, which would be loaded only when users enter the corresponding page.</p><p>Therefore, it&#39;s not recommended to store large amounts of info into route meta, otherwise the initial loading speed will be affected a lot when your site has a large number of pages.</p></div><h3 id="sfcblocks" tabindex="-1"><a class="header-anchor" href="#sfcblocks" aria-hidden="true">#</a> sfcBlocks</h3>',2),Jn=n("li",null,[n("p",null,[e("Type: "),n("code",null,"MarkdownSfcBlocks")])],-1),Kn=n("li",null,[n("p",null,"Details:"),n("p",null,"Extracted vue SFC blocks of the page.")],-1),Qn=n("p",null,"Also see:",-1),Xn=l('<h3 id="slug" tabindex="-1"><a class="header-anchor" href="#slug" aria-hidden="true">#</a> slug</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Slug of the page.</p><p>It is inferred from the filename of the Markdown source file.</p></li></ul><h3 id="filepath" tabindex="-1"><a class="header-anchor" href="#filepath" aria-hidden="true">#</a> filePath</h3><ul><li><p>Type: <code>string | null</code></p></li><li><p>Details:</p><p>Absolute path of the Markdown source file of the page.</p><p>It would be <code>null</code> if the page does not come from a Markdown source file.</p></li></ul><h3 id="filepathrelative" tabindex="-1"><a class="header-anchor" href="#filepathrelative" aria-hidden="true">#</a> filePathRelative</h3><ul><li><p>Type: <code>string | null</code></p></li><li><p>Details:</p><p>Relative path of the Markdown source file of the page.</p><p>It would be <code>null</code> if the page does not come from a Markdown source file.</p></li></ul>',6);function Yn(Zn,ne){const p=i("NpmBadge"),o=i("ExternalLinkIcon"),s=i("RouterLink");return r(),d("div",null,[h,a(p,{package:"@vuepress/core"}),n("p",null,[e("Node API is provided by "),n("a",k,[e("@vuepress/core"),a(o)]),e(" package. It is a dependency of the "),n("a",m,[e("vuepress"),a(o)]),e(" package, and you can also install it separately:")]),v,n("p",null,[e("The app instance is available in all hooks of "),a(s,{to:"/reference/plugin-api.html"},{default:t(()=>[e("Plugin API")]),_:1}),e(".")]),f,n("ul",null,[g,n("li",null,[b,n("p",null,[e("Site data that set by user, including all the "),a(s,{to:"/reference/config.html#site-config"},{default:t(()=>[e("site config")]),_:1}),e(", which will be used in client side.")])])]),_,n("ul",null,[y,n("li",null,[w,n("p",null,[e("The "),n("a",x,[e("markdown-it"),a(o)]),e(" instance used for parsing markdown content.")]),n("p",null,[e("It is only available in and after "),a(s,{to:"/reference/plugin-api.html#oninitialized"},{default:t(()=>[e("onInitialized")]),_:1}),e(" hook.")])])]),A,n("ul",null,[P,n("li",null,[D,T,n("p",null,[e("It is only available in and after "),a(s,{to:"/reference/plugin-api.html#oninitialized"},{default:t(()=>[e("onInitialized")]),_:1}),e(" hook.")])])]),I,n("ul",null,[C,n("li",null,[E,n("ul",null,[n("li",null,[a(s,{to:"/advanced/architecture.html#core-process-and-hooks"},{default:t(()=>[e("Advanced > Architecture > Core Process and Hooks")]),_:1})])])])]),M,n("ul",null,[S,n("li",null,[B,n("ul",null,[n("li",null,[a(s,{to:"/advanced/architecture.html#core-process-and-hooks"},{default:t(()=>[e("Advanced > Architecture > Core Process and Hooks")]),_:1})])])])]),R,n("ul",null,[N,n("li",null,[F,n("ul",null,[q,n("li",null,[a(s,{to:"/advanced/architecture.html#core-process-and-hooks"},{default:t(()=>[e("Advanced > Architecture > Core Process and Hooks")]),_:1})])])])]),V,n("ul",null,[z,n("li",null,[H,n("ul",null,[L,n("li",null,[a(s,{to:"/advanced/architecture.html#core-process-and-hooks"},{default:t(()=>[e("Advanced > Architecture > Core Process and Hooks")]),_:1})])])])]),j,n("ul",null,[n("li",null,[e("Also see: "),n("ul",null,[G,n("li",null,[a(s,{to:"/advanced/cookbook/adding-extra-pages.html"},{default:t(()=>[e("Cookbook > Adding Extra Pages")]),_:1})])])])]),O,U,n("ul",null,[W,n("li",null,[$,J,n("p",null,[e("The page key would be used as the "),n("a",K,[e("name"),a(o)]),e(" of the page route.")])]),n("li",null,[Q,n("ul",null,[n("li",null,[a(s,{to:"/reference/components.html#content"},{default:t(()=>[e("Built-in Components > Content")]),_:1})])])])]),X,n("ul",null,[Y,Z,n("li",null,[nn,n("ul",null,[n("li",null,[a(s,{to:"/guide/page.html#routing"},{default:t(()=>[e("Guide > Page > Routing")]),_:1})]),en])])]),an,n("ul",null,[sn,tn,n("li",null,[ln,n("ul",null,[n("li",null,[a(s,{to:"/reference/frontmatter.html#title"},{default:t(()=>[e("Frontmatter > title")]),_:1})])])])]),on,n("ul",null,[pn,n("li",null,[cn,n("ul",null,[n("li",null,[a(s,{to:"/reference/frontmatter.html#title"},{default:t(()=>[e("Frontmatter > lang")]),_:1})])])])]),rn,n("ul",null,[dn,un,n("li",null,[hn,n("ul",null,[n("li",null,[a(s,{to:"/reference/frontmatter.html"},{default:t(()=>[e("Frontmatter")]),_:1})])])])]),kn,n("ul",null,[mn,n("li",null,[vn,n("ul",null,[n("li",null,[a(s,{to:"/reference/config.html#markdown-headers"},{default:t(()=>[e("Config > markdown.headers")]),_:1})])])])]),fn,n("ul",null,[gn,n("li",null,[bn,n("ul",null,[n("li",null,[a(s,{to:"/reference/client-api.html#usepagedata"},{default:t(()=>[e("Client API > usePageData")]),_:1})]),n("li",null,[a(s,{to:"/reference/plugin-api.html#extendspage"},{default:t(()=>[e("Plugin API > extendsPage")]),_:1})])])])]),_n,n("ul",null,[yn,n("li",null,[wn,n("ul",null,[n("li",null,[a(s,{to:"/reference/frontmatter.html#date"},{default:t(()=>[e("Frontmatter > date")]),_:1})])])])]),xn,n("ul",null,[An,Pn,n("li",null,[Dn,n("ul",null,[n("li",null,[a(s,{to:"/reference/config.html#markdown-importcode"},{default:t(()=>[e("Config > markdown.importCode")]),_:1})])])])]),Tn,n("ul",null,[In,n("li",null,[Cn,n("ul",null,[n("li",null,[n("a",En,[e("markdown-it > API Documentation > MarkdownIt > parse"),a(o)])])])])]),Mn,n("ul",null,[Sn,n("li",null,[Bn,n("ul",null,[n("li",null,[a(s,{to:"/guide/page.html#routing"},{default:t(()=>[e("Guide > Page > Routing")]),_:1})]),Rn])])]),Nn,n("ul",null,[Fn,n("li",null,[qn,n("ul",null,[n("li",null,[a(s,{to:"/reference/config.html#locales"},{default:t(()=>[e("Config > locales")]),_:1})])])])]),Vn,n("ul",null,[zn,Hn,n("li",null,[Ln,n("ul",null,[n("li",null,[a(s,{to:"/reference/frontmatter.html#permalink"},{default:t(()=>[e("Frontmatter > permalink")]),_:1})]),n("li",null,[a(s,{to:"/reference/frontmatter.html#permalinkpattern"},{default:t(()=>[e("Frontmatter > permalinkPattern")]),_:1})])])])]),jn,n("ul",null,[Gn,On,n("li",null,[Un,n("ul",null,[n("li",null,[a(s,{to:"/reference/frontmatter.html#routemeta"},{default:t(()=>[e("Frontmatter > routeMeta")]),_:1})]),n("li",null,[n("a",Wn,[e("vue-router > API Reference > RouteRecordRaw > meta"),a(o)])])])])]),$n,n("ul",null,[Jn,Kn,n("li",null,[Qn,n("ul",null,[n("li",null,[a(s,{to:"/reference/config.html#markdown-sfc"},{default:t(()=>[e("Config > markdown.sfc")]),_:1})])])])]),Xn])}const se=c(u,[["render",Yn],["__file","node-api.html.vue"]]);export{se as default};
