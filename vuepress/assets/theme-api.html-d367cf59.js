import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as u,d as a,a as e,b as n,w as l,e as c}from"./app-d06631bc.js";const d={},r=e("h1",{id:"主题-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#主题-api","aria-hidden":"true"},"#"),n(" 主题 API")],-1),h=c(`<h2 id="基础配置项" tabindex="-1"><a class="header-anchor" href="#基础配置项" aria-hidden="true">#</a> 基础配置项</h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>主题的名称。</p><p>它应遵从如下命名约定，并且在发布到 NPM 时应确保和包名保持一致：</p><ul><li>非 Scoped: <code>vuepress-theme-foo</code></li><li>Scoped: <code>@org/vuepress-theme-foo</code></li></ul></li></ul><h3 id="multiple" tabindex="-1"><a class="header-anchor" href="#multiple" aria-hidden="true">#</a> multiple</h3><ul><li><p>详情：</p><p>主题永远不能被多次使用，因此主题 API 不支持该配置项。</p></li></ul><h2 id="主题特定配置项" tabindex="-1"><a class="header-anchor" href="#主题特定配置项" aria-hidden="true">#</a> 主题特定配置项</h2><h3 id="extends" tabindex="-1"><a class="header-anchor" href="#extends" aria-hidden="true">#</a> extends</h3><ul><li><p>类型： <code>Theme</code></p></li><li><p>详情：</p><p>要继承的主题。</p><p>父主题的所有主题 API 都会被继承，但是子主题不会直接覆盖父主题。主题特定的配置项会根据以下规则进行覆盖：</p><ul><li><a href="#plugins">plugins</a>： 当同一个插件在子主题和父主题中都被使用时，如果该插件不支持被多次使用，那么只有在子主题中使用的插件会生效。</li><li><a href="#templatebuild">templateBuild</a> / <a href="#templatedev">templateDev</a>： 子主题的模板会覆盖父主题的模板。</li></ul><p>支持多级继承，即主题 B 可以继承主题 A ，然后主题 C 可以继承主题 B 。换句话说，一个主题可以有一个父主题、一个祖父主题等等。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/theme-default&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/utils&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// 继承默认主题</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> plugins</h3>`,10),m=e("li",null,[e("p",null,[n("类型： "),e("code",null,"(Plugin | Plugin[])[]")])],-1),_=e("li",null,[e("p",null,"详情："),e("p",null,"主题中要使用的插件。")],-1),k=e("p",null,"参考：",-1),f=e("h3",{id:"templatebuild",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#templatebuild","aria-hidden":"true"},"#"),n(" templateBuild")],-1),v=e("li",null,[e("p",null,[n("类型： "),e("code",null,"string")])],-1),g=e("p",null,"详情：",-1),b=e("p",null,"指定构建时使用的 HTML 模板。",-1),x=e("p",null,"参考：",-1),w=e("h3",{id:"templatedev",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#templatedev","aria-hidden":"true"},"#"),n(" templateDev")],-1),y=e("li",null,[e("p",null,[n("类型： "),e("code",null,"string")])],-1),B=e("p",null,"详情：",-1),P=e("p",null,"指定开发时使用的 HTML 模板。",-1),A=e("p",null,"参考：",-1);function N(z,D){const i=t("NpmBadge"),s=t("RouterLink");return o(),u("div",null,[r,a(i,{package:"@vuepress/core"}),e("p",null,[n("VuePress 主题同样是一个插件，因此主题 API 可以接收 "),a(s,{to:"/zh/reference/plugin-api.html"},{default:l(()=>[n("插件 API")]),_:1}),n(" 的所有选项，但存在以下差别：")]),h,e("ul",null,[m,_,e("li",null,[k,e("ul",null,[e("li",null,[a(s,{to:"/zh/reference/config.html#plugins"},{default:l(()=>[n("配置 > plugins")]),_:1})])])])]),f,e("ul",null,[v,e("li",null,[g,b,e("p",null,[n("它会覆盖 "),a(s,{to:"/zh/reference/config.html#templatebuild"},{default:l(()=>[n("templateBuild")]),_:1}),n(" 的默认值，但是也会被用户配置覆盖。")])]),e("li",null,[x,e("ul",null,[e("li",null,[a(s,{to:"/zh/reference/config.html#templatebuild"},{default:l(()=>[n("配置 > templateBuild")]),_:1})])])])]),w,e("ul",null,[y,e("li",null,[B,P,e("p",null,[n("它会覆盖 "),a(s,{to:"/zh/reference/config.html#templatedev"},{default:l(()=>[n("templateDev")]),_:1}),n(" 的默认值，但是也会被用户配置覆盖。")])]),e("li",null,[A,e("ul",null,[e("li",null,[a(s,{to:"/zh/reference/config.html#templatedev"},{default:l(()=>[n("配置 > templateDev")]),_:1})])])])])])}const V=p(d,[["render",N],["__file","theme-api.html.vue"]]);export{V as default};
