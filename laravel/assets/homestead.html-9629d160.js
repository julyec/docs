import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as i,c,b as a,d as e,e as s,a as t}from"./app-06635a3b.js";const d={},p=t('<h1 id="homestead-虚拟机" tabindex="-1"><a class="header-anchor" href="#homestead-虚拟机" aria-hidden="true">#</a> Homestead 虚拟机</h1><ul><li><a href="#introduction">简介</a></li><li><a href="#installation-and-setup">安装与设置</a><ul><li><a href="#first-steps">第一步</a></li><li><a href="#configuring-homestead">配置 Homestead</a></li><li><a href="#configuring-nginx-sites">配置 Nginx 站点</a></li><li><a href="#configuring-services">配置服务</a></li><li><a href="#launching-the-vagrant-box">启动 Vagrant Box</a></li><li><a href="#per-project-installation">为项目单独安装</a></li><li><a href="#installing-optional-features">安装可选功能</a></li><li><a href="#aliases">别名</a></li></ul></li><li><a href="#updating-homestead">更新 Homestead</a></li><li><a href="#daily-usage">日常使用方法</a><ul><li><a href="#connecting-via-ssh">通过 SSH 连接</a></li><li><a href="#adding-additional-sites">添加其他站点</a></li><li><a href="#environment-variables">环境变量</a></li><li><a href="#ports">端口</a></li><li><a href="#php-versions">多 PHP 版本</a></li><li><a href="#connecting-to-databases">连接数据库</a></li><li><a href="#database-backups">数据库备份</a></li><li><a href="#configuring-cron-schedules">配置 Cron 调度器</a></li><li><a href="#configuring-mailhog">配置 MailHog</a></li><li><a href="#configuring-minio">配置 Minio</a></li><li><a href="#laravel-dusk">Laravel Dusk</a></li><li><a href="#sharing-your-environment">共享你的环境</a></li></ul></li><li><a href="#debugging-and-profiling">调试与性能分析</a><ul><li><a href="#debugging-web-requests">使用 Xdebug 调试 Web 请求</a></li><li><a href="#debugging-cli-applications">调试 CLI 应用程序</a></li><li><a href="#profiling-applications-with-blackfire">使用 Blackfire 为应用程序分析性能</a></li></ul></li><li><a href="#network-interfaces">网络接口</a></li><li><a href="#extending-homestead">扩展 Homestead</a></li><li><a href="#provider-specific-settings">针对虚拟机软件的特殊设置</a><ul><li><a href="#provider-specific-virtualbox">VirtualBox</a></li></ul></li></ul><p><a name="introduction"></a></p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2>',4),r={href:"https://github.com/laravel/homestead",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.vagrantup.com",target:"_blank",rel:"noopener noreferrer"},m=a("p",null,"Homestead 可以在任何 Windows、 macOS 或 Linux 系统上运行，它预装好了 Nginx、 PHP、 MySQL、 PostgreSQL、 Redis、 Memcached、 Node 以及开发令人惊叹的 Laravel 应用程序所需的所有其他软件。",-1),h=a("blockquote",null,[a("p",null,[a("strong",null,"注意"),a("br"),e(" 如果你使用的是 Windows ，你可能需要启用硬件虚拟化（ VT-x ）。该功能通常需要通过你的 BIOS 启用。如果你在 UEFI 系统上使用 Hyper-V ，则可能还需要禁用 Hyper-V 才能访问 VT-x 。")])],-1),v=a("p",null,[a("a",{name:"included-software"})],-1),k=a("h3",{id:"内置软件",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#内置软件","aria-hidden":"true"},"#"),e(" 内置软件")],-1),b=a("div",{id:"software-list",markdown:"1"},[a("ul",null,[a("li",null,"Ubuntu 20.04"),a("li",null,"Git"),a("li",null,"PHP 8.2"),a("li",null,"PHP 8.1"),a("li",null,"PHP 8.0"),a("li",null,"PHP 7.4"),a("li",null,"PHP 7.3"),a("li",null,"PHP 7.2"),a("li",null,"PHP 7.1"),a("li",null,"PHP 7.0"),a("li",null,"PHP 5.6"),a("li",null,"Nginx"),a("li",null,"MySQL 8.0"),a("li",null,"lmm"),a("li",null,"Sqlite3"),a("li",null,"PostgreSQL 15"),a("li",null,"Composer"),a("li",null,"Docker"),a("li",null,"Node (With Yarn, Bower, Grunt, and Gulp)"),a("li",null,"Redis"),a("li",null,"Memcached"),a("li",null,"Beanstalkd"),a("li",null,"Mailhog"),a("li",null,"avahi"),a("li",null,"ngrok"),a("li",null,"Xdebug"),a("li",null,"XHProf / Tideways / XHGui"),a("li",null,"wp-cli")])],-1),g=a("p",null,[a("a",{name:"optional-software"})],-1),y=a("h3",{id:"可选软件",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#可选软件","aria-hidden":"true"},"#"),e(" 可选软件")],-1),f=a("div",{id:"software-list",markdown:"1"},[a("ul",null,[a("li",null,"Apache"),a("li",null,"Blackfire"),a("li",null,"Cassandra"),a("li",null,"Chronograf"),a("li",null,"CouchDB"),a("li",null,"Crystal & Lucky Framework"),a("li",null,"Elasticsearch"),a("li",null,"EventStoreDB"),a("li",null,"Gearman"),a("li",null,"Go"),a("li",null,"Grafana"),a("li",null,"InfluxDB"),a("li",null,"MariaDB"),a("li",null,"Meilisearch"),a("li",null,"MinIO"),a("li",null,"MongoDB"),a("li",null,"Neo4j"),a("li",null,"Oh My Zsh"),a("li",null,"Open Resty"),a("li",null,"PM2"),a("li",null,"Python"),a("li",null,"R"),a("li",null,"RabbitMQ"),a("li",null,"RVM (Ruby Version Manager)"),a("li",null,"Solr"),a("li",null,"TimescaleDB"),a("li",null,[e("Trader "),a("small",null,"(PHP extension)")]),a("li",null,"Webdriver & Laravel Dusk Utilities")])],-1),_=t('<p><a name="installation-and-setup"></a></p><h2 id="安装-设置" tabindex="-1"><a class="header-anchor" href="#安装-设置" aria-hidden="true">#</a> 安装 &amp; 设置</h2><p><a name="first-steps"></a></p><h3 id="第一步" tabindex="-1"><a class="header-anchor" href="#第一步" aria-hidden="true">#</a> 第一步</h3>',4),H={href:"https://developer.hashicorp.com/vagrant/downloads",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.virtualbox.org/wiki/Downloads",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.parallels.com/products/desktop/",target:"_blank",rel:"noopener noreferrer"},w=a("p",null,"以上这些软件包都为所有流行的操作系统提供了易于使用的可视化安装程序。",-1),P={href:"https://github.com/Parallels/vagrant-parallels",target:"_blank",rel:"noopener noreferrer"},S=t(`<p><a name="installing-homestead"></a></p><h4 id="安装-homestead" tabindex="-1"><a class="header-anchor" href="#安装-homestead" aria-hidden="true">#</a> 安装 Homestead</h4><p>你可以通过将 Homestead 存储库克隆到你的主机上来安装 Homestead。 考虑将存储库克隆到 <code>home</code> 目录中的 <code>Homestead</code> 文件夹中，因为 Homestead 虚拟机将作为所有 Laravel 应用程序的主机。 在本文档中，我们将此目录称为你的「Homestead 目录」：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/laravel/homestead.git ~/Homestead
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>克隆 Laravel Homestead 存储库后，你应该检出 <code>release</code> 分支。 这个分支总是包含 Homestead 的最新稳定版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/Homestead

<span class="token function">git</span> checkout release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，从 Homestead 目录执行 <code>bash init.sh</code> 命令以创建 <code>Homestead.yaml</code> 配置文件。 <code>Homestead.yaml</code> 文件是你为 Homestead 安装配置所有设置的地方。 这个文件将被放置在 Homestead 目录中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># macOS / Linux...</span>
<span class="token function">bash</span> init.sh

<span class="token comment"># Windows...</span>
init.bat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="configuring-homestead"></a></p><h3 id="配置-homestead" tabindex="-1"><a class="header-anchor" href="#配置-homestead" aria-hidden="true">#</a> 配置 Homestead</h3><p><a name="setting-your-provider"></a></p><h4 id="设置提供服务的虚拟机程序" tabindex="-1"><a class="header-anchor" href="#设置提供服务的虚拟机程序" aria-hidden="true">#</a> 设置提供服务的虚拟机程序</h4><p><code>Homestead.yaml</code> 文件中的 <code>provider</code> 键指示应该使用哪个 Vagrant 提供虚拟机服务：<code>virtualbox</code> 或 <code>parallels</code>：</p><pre><code>provider: virtualbox
</code></pre><blockquote><p><strong>注意</strong><br> 如果你使用的是 Apple Silicon，你应该将 <code>box: laravel/homestead-arm</code> 添加到你的 <code>Homestead.yaml</code> 文件中。 Apple Silicon 下需要使用 Parallels 提供虚拟机服务。</p></blockquote><p><a name="configuring-shared-folders"></a></p><h4 id="配置共享文件夹" tabindex="-1"><a class="header-anchor" href="#配置共享文件夹" aria-hidden="true">#</a> 配置共享文件夹</h4><p><code>Homestead.yaml</code> 文件的 <code>folders</code> 属性列出了你希望与 Homestead 环境共享的所有文件夹。 当这些文件夹中的文件发生更改时，它们将在你的本地机器和 Homestead 虚拟环境之间保持同步。 你可以根据需要配置任意数量的共享文件夹：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">folders</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> ~/code/project1
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong><br> Windows 用户不应使用 <code>~/</code> 路径语法，而应使用其项目的完整路径，例如 <code>C:\\Users\\user\\Code\\project1</code>。</p></blockquote><p>你应该始终将单个应用程序映射到它们自己的文件夹映射，而不是映射包含所有应用程序的单个大目录。 映射文件夹时，虚拟机需要跟踪文件夹中每个文件的所有磁盘 IO。 如果文件夹中有大量文件，性能可能会降低：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">folders</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> ~/code/project1
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project1
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> ~/code/project2
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong><br> 在使用 Homestead 时，你永远不应该挂载 <code>.</code>（当前目录）。 这会导致 Vagrant 不会将当前文件夹映射到 <code>/vagrant</code>，并且会在配置时破坏可选功能并导致意外结果。</p></blockquote>`,23),L={href:"https://www.vagrantup.com/docs/synced-folders/nfs.html",target:"_blank",rel:"noopener noreferrer"},M=a("code",null,"type",-1),B=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">folders</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> ~/code/project1
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project1
      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;nfs&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),V=a("strong",null,"注意",-1),W=a("br",null,null,-1),C={href:"https://github.com/winnfsd/vagrant-winnfsd",target:"_blank",rel:"noopener noreferrer"},j=a("code",null,"options",-1),E={href:"https://www.vagrantup.com/docs/synced-folders/basic_usage.html",target:"_blank",rel:"noopener noreferrer"},A=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">folders</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> ~/code/project1
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project1
      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;rsync&quot;</span>
      <span class="token key atrule">options</span><span class="token punctuation">:</span>
          <span class="token key atrule">rsync__args</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;--verbose&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--archive&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--delete&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-zz&quot;</span><span class="token punctuation">]</span>
          <span class="token key atrule">rsync__exclude</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="configuring-nginx-sites"></a></p><h3 id="配置-nginx-站点" tabindex="-1"><a class="header-anchor" href="#配置-nginx-站点" aria-hidden="true">#</a> 配置 Nginx 站点</h3><p>不熟悉 Nginx？ 没问题。 你的 <code>Homestead.yaml</code> 文件的 <code>sites</code> 属性允许你轻松地将「域」映射到 Homestead 环境中的文件夹。 <code>Homestead.yaml</code> 文件中包含一个示例站点配置。 同样，你可以根据需要向 Homestead 环境添加任意数量的站点。 Homestead 可以为你正在开发的每个 Laravel 应用程序提供方便的虚拟化环境：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">sites</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> homestead.test
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project1/public
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你在配置 Homestead 虚拟机后更改了 <code>sites</code> 属性，你应该在终端中执行 <code>vagrant reload --provision</code> 命令来更新虚拟机上的 Nginx 配置。</p><blockquote><p><strong>注意</strong><br> Homestead 脚本被构建为尽可能具有幂等性。 但是，如果你在配置时遇到问题，你应该通过执行 <code>vagrant destroy &amp;&amp; vagrant up</code> 命令来销毁和重建机器。</p></blockquote><p><a name="hostname-resolution"></a></p><h4 id="主机名解析" tabindex="-1"><a class="header-anchor" href="#主机名解析" aria-hidden="true">#</a> 主机名解析</h4>`,9),I=a("code",null,"mDNS",-1),N=a("code",null,"Homestead.yaml",-1),D=a("code",null,"hostname: homestead",-1),O=a("code",null,"homestead.local",-1),T=a("code",null,"mDNS",-1),R={href:"https://support.apple.com/kb/DL999?viewlocale=en_US&locale=en_US",target:"_blank",rel:"noopener noreferrer"},Q=t(`<p>使用自动主机名最适合 Homestead 的 <a href="#per-project-installation">每个项目安装</a>。 如果你在单个 Homestead 实例上托管多个站点，你可以将你网站的「域名」添加到你机器上的 <code>hosts</code> 文件中。 <code>hosts</code> 文件会将你对 Homestead 站点的请求重定向到你的 Homestead 虚拟机中。 在 macOS 和 Linux 上，此文件位于 <code>/etc/hosts</code>。 在 Windows 上，它位于 <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code> 。 你添加到此文件的行将如下所示：</p><pre><code>192.168.56.56  homestead.test
</code></pre><p>确保列出的 IP 地址是你在 <code>Homestead.yaml</code> 文件中设置的地址。将域名添加到 <code>hosts</code> 文件并启动 Vagrant 盒子后，你将能够通过 Web 浏览器访问该站点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>http://homestead.test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a name="configuring-services"></a></p><h3 id="配置服务" tabindex="-1"><a class="header-anchor" href="#配置服务" aria-hidden="true">#</a> 配置服务</h3><p>Homestead 默认会启动好几个服务； 但你可以在配置的时候自定义启用或禁用哪些服务。 例如，你可以通过修改 <code>Homestead.yaml</code> 文件中的 <code>services</code> 选项来启用 PostgreSQL 并禁用 MySQL：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">services</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">enabled</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token string">&quot;postgresql&quot;</span>
    <span class="token punctuation">-</span> <span class="token key atrule">disabled</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token string">&quot;mysql&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>指定的服务将根据它们在 <code>enabled</code> 和 <code>disabled</code> 指令中的顺序启动或停止。</p><p><a name="launching-the-vagrant-box"></a></p><h3 id="启动-the-vagrant-box" tabindex="-1"><a class="header-anchor" href="#启动-the-vagrant-box" aria-hidden="true">#</a> 启动 The Vagrant Box</h3><p>你根据自己的需求修改 <code>Homestead.yaml</code> 后，你可以通过在 Homestead 目录运行 <code>vagrant up</code> 命令来启动 Vagrant 虚拟机。 Vagrant 将启动虚拟机并自动配置你的共享文件夹和 Nginx 站点。</p><p>要销毁虚拟机实例，你可以使用 <code>vagrant destroy</code> 命令。</p><p><a name="per-project-installation"></a></p><h3 id="为项目单独安装" tabindex="-1"><a class="header-anchor" href="#为项目单独安装" aria-hidden="true">#</a> 为项目单独安装</h3><p>你可以为你管理的每个项目配置一个 Homestead 实例，而不是全局安装 Homestead 并在所有项目中共享相同的 Homestead 虚拟机。 如果你希望随项目一起提供 <code>Vagrantfile</code>，允许其他人在克隆项目的存储库后立即 <code>vagrant up</code>，则为每个项目安装 Homestead 可能会有所帮助。</p><p>你可以使用 Composer 包管理器将 Homestead 安装到你的项目中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require laravel/homestead <span class="token parameter variable">--dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装 Homestead 后，调用 Homestead 的 <code>make</code> 命令为你的项目生成 <code>Vagrantfile</code> 和 <code>Homestead.yaml</code> 文件。 这些文件将放置在项目的根目录中。 <code>make</code> 命令将自动配置 <code>Homestead.yaml</code> 文件中的站点和文件夹指令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># macOS / Linux...</span>
php vendor/bin/homestead <span class="token function">make</span>

<span class="token comment"># Windows...</span>
vendor<span class="token punctuation">\\</span><span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span><span class="token punctuation">\\</span>homestead <span class="token function">make</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，在终端中运行 <code>vagrant up</code> 命令并在浏览器中通过 <code>http://homestead.test</code> 访问你的项目。 请记住，如果你不使用自动 <a href="#hostname-resolution">主机名解析</a>，你仍然需要为 <code>homestead.test</code> 或你选择的域在 <code>/etc/hosts</code> 文件中添加一个主机名映射。</p><p><a name="installing-optional-features"></a></p><h3 id="安装可选功能" tabindex="-1"><a class="header-anchor" href="#安装可选功能" aria-hidden="true">#</a> 安装可选功能</h3><p>使用 <code>Homestead.yaml</code> 文件中的 <code>features</code> 选项可以安装可选软件。 大多数功能可以使用布尔值启用或禁用，部分功能允许使用多个配置选项：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">features</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">blackfire</span><span class="token punctuation">:</span>
        <span class="token key atrule">server_id</span><span class="token punctuation">:</span> <span class="token string">&quot;server_id&quot;</span>
        <span class="token key atrule">server_token</span><span class="token punctuation">:</span> <span class="token string">&quot;server_value&quot;</span>
        <span class="token key atrule">client_id</span><span class="token punctuation">:</span> <span class="token string">&quot;client_id&quot;</span>
        <span class="token key atrule">client_token</span><span class="token punctuation">:</span> <span class="token string">&quot;client_value&quot;</span>
    <span class="token punctuation">-</span> <span class="token key atrule">cassandra</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">chronograf</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">couchdb</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">crystal</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">elasticsearch</span><span class="token punctuation">:</span>
        <span class="token key atrule">version</span><span class="token punctuation">:</span> 7.9.0
    <span class="token punctuation">-</span> <span class="token key atrule">eventstore</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">version</span><span class="token punctuation">:</span> 21.2.0
    <span class="token punctuation">-</span> <span class="token key atrule">gearman</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">golang</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">grafana</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">influxdb</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">mariadb</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">meilisearch</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">minio</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">mongodb</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">mysql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">neo4j</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">ohmyzsh</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">openresty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">pm2</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">python</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">r-base</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">rvm</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">solr</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">timescaledb</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">trader</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">webdriver</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="elasticsearch"></a></p><h4 id="elasticsearch" tabindex="-1"><a class="header-anchor" href="#elasticsearch" aria-hidden="true">#</a> Elasticsearch</h4><p>你可以指定支持的 Elasticsearch 版本，该版本必须是确切的版本号 (major.minor.patch)。 默认安装将创建一个名为「homestead」的集群。 你永远不应该给 Elasticsearch 超过操作系统一半的内存，所以确保你的 Homestead 虚拟机至少有 Elasticsearch 分配的两倍。</p>`,28),U=a("strong",null,"注意",-1),F=a("br",null,null,-1),X={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current",target:"_blank",rel:"noopener noreferrer"},G=t(`<p><a name="mariadb"></a></p><h4 id="mariadb" tabindex="-1"><a class="header-anchor" href="#mariadb" aria-hidden="true">#</a> MariaDB</h4><p>启用 MariaDB 将会移除 MySQL 并安装 MariaDB。MariaDB 通常是 MySQL 的替代品，完全兼容 MySQL，所以在应用数据库配置中你仍然可以使用 <code>mysql</code> 驱动。</p><p><a name="mongodb"></a></p><h4 id="mongodb" tabindex="-1"><a class="header-anchor" href="#mongodb" aria-hidden="true">#</a> MongoDB</h4><p>默认安装的 MongoDB 将会设置数据库用户名为 <code>homestead</code> 及对应的密码为 <code>secret</code>。</p><p><a name="neo4j"></a></p><h4 id="neo4j" tabindex="-1"><a class="header-anchor" href="#neo4j" aria-hidden="true">#</a> Neo4j</h4><p>Neo4j 是一个图形数据库，默认安装的 Neo4j 会设置数据库用户名为 <code>homestead</code> 及对应的密码 <code>secret</code>。要通过浏览器访问 Neo4j ，请通过 Web 浏览器访问 <code>http://homestead.test:7474</code>。默认情况下，服务预设了端口 <code>7687</code>（Bolt）、<code>7474</code>（HTTP）和 <code>7473</code>（HTTPS）为来自 Neo4j 客户端的请求提供服务。</p><p><a name="aliases"></a></p><h3 id="系统命令别名" tabindex="-1"><a class="header-anchor" href="#系统命令别名" aria-hidden="true">#</a> 系统命令别名</h3><p>您可以通过修改 Homestead 目录中的 <code>aliases</code> 文件将 Bash 命令别名添加到 Homestead 虚拟机：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">alias</span> <span class="token assign-left variable">c</span><span class="token operator">=</span><span class="token string">&#39;clear&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token punctuation">..</span><span class="token operator">=</span><span class="token string">&#39;cd ..&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当你更新完 <code>aliases</code> 文件后，你需要通过 <code>vagrant reload --provision</code> 命令重启 Homestead 机器，以确保新的别名在机器上生效。</p><p><a name="updating-homestead"></a></p><h2 id="更新-homestead" tabindex="-1"><a class="header-anchor" href="#更新-homestead" aria-hidden="true">#</a> 更新 Homestead</h2><p>更新 Homestead 之前确保你已经在 Homestead 目录下通过如下命令移除了当前的虚拟机：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant destroy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来，需要更新 Homestead 源码，如果你已经克隆仓库到本地，可以在项目根目录下运行如下命令进行更新：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch

<span class="token function">git</span> pull origin release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),z={href:"https://github.com/laravel/homestead/releases",target:"_blank",rel:"noopener noreferrer"},K=t(`<p>如果你是通过 Composer 在指定 Laravel 项目中安装的 Homestead，需要确保 <code>composer.json</code> 中包含了 <code>&quot;laravel/homestead&quot;: &quot;^12&quot;</code>，然后更新这个依赖：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后，你需要通过 <code>vagrant box update</code> 命令更新 Vagrant：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant box update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来，你可以从 Homestead 目录下运行 <code>bash init.sh</code> 命令来更新 Homestead 额外的配置文件，你会被询问是否覆盖已存在的 <code>Homestead.yaml</code>、<code>after.sh</code> 以及 <code>aliases</code> 文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># macOS / Linux...</span>
<span class="token function">bash</span> init.sh

<span class="token comment"># Windows...</span>
init.bat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，你需要重新生成新的 Homestead 虚拟机来使用最新安装的 Vagrant：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a name="daily-usage"></a></p><h2 id="日常使用方法" tabindex="-1"><a class="header-anchor" href="#日常使用方法" aria-hidden="true">#</a> 日常使用方法</h2><p><a name="connecting-via-ssh"></a></p><h3 id="通过-ssh-连接" tabindex="-1"><a class="header-anchor" href="#通过-ssh-连接" aria-hidden="true">#</a> 通过 SSH 连接</h3><p>你可以在 Homestead 目录下通过运行 <code>vagrant ssh</code> 以 SSH 方式连接到虚拟机。如果你设置了全部访问 Homestead，也可以在任意路径下通过 homestead ssh 登录到虚拟机。</p><p><a name="adding-additional-sites"></a></p><h3 id="添加其他站点" tabindex="-1"><a class="header-anchor" href="#添加其他站点" aria-hidden="true">#</a> 添加其他站点</h3><p>Homestead 虚拟机在运行时，可能需要添加多个 Laravel 应用到 Nginx 站点。如果是在单个 Homestead 环境中运行多个 Laravel 应用，添加站点很简单，只需将站点添加到 <code>Homestead.yaml</code> 文件：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">sites</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> homestead.test
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project1/public
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> another.test
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project2/public
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong><br> 在添加站点之前，你应该确保已经为项目的目录配置了<a href="#configuring-shared-folders">配置共享文件夹</a>。</p></blockquote><p>如果 Vagrant 没有自动管理你的「hosts」文件，你可能还需要将新站点添加到该文件中。在 macOS 和 Linux 上，此文件位于 <code>/etc/hosts</code>。在 Windows 上，它位于 <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code>：</p><pre><code>192.168.56.56  homestead.test
192.168.56.56  another.test
</code></pre><p>添加站点后，你需要从 Homestead 目录执行 <code>vagrant reload --provision</code> 命令以保证 Vagrant 加载新的站点。</p><p><a name="site-types"></a></p><h4 id="站点类型" tabindex="-1"><a class="header-anchor" href="#站点类型" aria-hidden="true">#</a> 站点类型</h4><p>Homestead 支持多种「类型」的站点，让你可以轻松运行不是基于 Laravel 的项目。 例如，我们可以使用 <code>statamic</code> 站点类型轻松地将 Statamic 应用程序添加到 Homestead：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">sites</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> statamic.test
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/my<span class="token punctuation">-</span>symfony<span class="token punctuation">-</span>project/web
      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;statamic&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可用的站点类型有： <code>apache</code>、<code>apigility</code>、<code>expressive</code>、<code>laravel</code>（默认）、<code>proxy</code>、<code>silverstripe</code>、<code>statamic</code>、<code>symfony2</code>、<code>symfony4</code> 和 <code>zf</code>。</p><p><a name="site-parameters"></a></p><h4 id="站点参数" tabindex="-1"><a class="header-anchor" href="#站点参数" aria-hidden="true">#</a> 站点参数</h4><p>你可以通过 <code>params</code> 站点指令向你的站点添加额外的 Nginx <code>fastcgi_param</code> 值：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">sites</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> homestead.test
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project1/public
      <span class="token key atrule">params</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> FOO
            <span class="token key atrule">value</span><span class="token punctuation">:</span> BAR
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="environment-variables"></a></p><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h3><p>你可以 <code>Homestead.yaml</code> 文件来定义全局环境变量：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">variables</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> APP_ENV
      <span class="token key atrule">value</span><span class="token punctuation">:</span> local
    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> FOO
      <span class="token key atrule">value</span><span class="token punctuation">:</span> bar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新 <code>Homestead.yaml</code> 文件后，请务必通过执行 <code>vagrant reload --provision</code> 命令重新配置机器。 这将更新所有已安装 PHP 版本的 PHP-FPM 配置，并为 <code>vagrant</code> 用户更新环境。</p><p><a name="ports"></a></p><h3 id="端口" tabindex="-1"><a class="header-anchor" href="#端口" aria-hidden="true">#</a> 端口</h3><p>默认情况下，以下端口会转发到你的 Homestead 环境：</p>`,38),Y=a("div",{class:"content-list",markdown:"1"},[a("ul",null,[a("li",null,[a("strong",null,"HTTP:"),e(" 8000 → 转发到 80")]),a("li",null,[a("strong",null,"HTTPS:"),e(" 44300 → 转发到 443")])])],-1),Z=t(`<p><a name="forwarding-additional-ports"></a></p><h4 id="转发额外的端口" tabindex="-1"><a class="header-anchor" href="#转发额外的端口" aria-hidden="true">#</a> 转发额外的端口</h4><p>如你所愿，你可以通过在你的 <code>Homestead.yaml</code> 文件中定义一个 <code>ports</code> 配置项来将额外的端口转发到 Vagrant 虚拟机。 更新 <code>Homestead.yaml</code> 文件后，请务必通过执行 <code>vagrant reload --provision</code> 命令重新载入虚拟机配置：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">ports</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">send</span><span class="token punctuation">:</span> <span class="token number">50000</span>
      <span class="token key atrule">to</span><span class="token punctuation">:</span> <span class="token number">5000</span>
    <span class="token punctuation">-</span> <span class="token key atrule">send</span><span class="token punctuation">:</span> <span class="token number">7777</span>
      <span class="token key atrule">to</span><span class="token punctuation">:</span> <span class="token number">777</span>
      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> udp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下是你可能希望从主机映射到 Vagrant box 的其他 Homestead 服务的端口清单：</p>`,5),J=a("div",{class:"content-list",markdown:"1"},[a("ul",null,[a("li",null,[a("strong",null,"SSH:"),e(" 2222 → 转发到 22")]),a("li",null,[a("strong",null,"ngrok UI:"),e(" 4040 → 转发到 4040")]),a("li",null,[a("strong",null,"MySQL:"),e(" 33060 → 转发到 3306")]),a("li",null,[a("strong",null,"PostgreSQL:"),e(" 54320 → 转发到 5432")]),a("li",null,[a("strong",null,"MongoDB:"),e(" 27017 → 转发到 27017")]),a("li",null,[a("strong",null,"Mailhog:"),e(" 8025 → 转发到 8025")]),a("li",null,[a("strong",null,"Minio:"),e(" 9600 → 转发到 9600")])])],-1),$=t(`<p><a name="php-versions"></a></p><h3 id="多-php-版本" tabindex="-1"><a class="header-anchor" href="#多-php-版本" aria-hidden="true">#</a> 多 PHP 版本</h3><p>Homestead 引入了对在同一虚拟机上运行多个版本的 PHP 的支持。 你可以在 <code>Homestead.yaml</code> 文件中指定用于特定站点的 PHP 版本。 可用的 PHP 版本有：「5.6」、「7.0」、「7.1」、「7.2」、「7.3」、「7.4」、「8.0」、「8.1」和「8.2」（默认）：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">sites</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> homestead.test
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project1/public
      <span class="token key atrule">php</span><span class="token punctuation">:</span> <span class="token string">&quot;7.1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#connecting-via-ssh">在你的 Homestead 虚拟机中</a>，你可以通过 CLI 使用任何支持的 PHP 版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php5.6 artisan list
php7.0 artisan list
php7.1 artisan list
php7.2 artisan list
php7.3 artisan list
php7.4 artisan list
php8.0 artisan list
php8.1 artisan list
php8.2 artisan list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以通过在 Homestead 虚拟机中发出以下命令来更改 CLI 使用的默认 PHP 版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php56
php70
php71
php72
php73
php74
php80
php81
php82
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="connecting-to-databases"></a></p><h3 id="连接到数据库" tabindex="-1"><a class="header-anchor" href="#连接到数据库" aria-hidden="true">#</a> 连接到数据库</h3><p>Homestead 开箱即用地为 MySQL 和 PostgreSQL 配置了一个 <code>homestead</code> 数据库。如果你想用宿主机的数据库客户端连接到 MySQL 或 PostgreSQL 数据库，你可以通过连接 <code>127.0.0.1</code> （本地网络）的 <code>33060</code> 端口（MySQL） 或 <code>54320</code> 端口（PostgreSQL）。 两个数据库的用户名和密码都是 <code>homestead</code>/<code>secret</code>。</p><blockquote><p><strong>注意</strong><br> 只有在从宿主机连接到数据库时，你才需要使用这些非标准端口。 由于 Laravel 在虚拟机中运行，因此你将在 Laravel 应用程序的数据库配置文件中使用默认的 3306 和 5432 端口。</p></blockquote><p><a name="database-backups"></a></p><h3 id="数据库备份" tabindex="-1"><a class="header-anchor" href="#数据库备份" aria-hidden="true">#</a> 数据库备份</h3><p>当你的 Homestead 虚拟机被销毁时，Homestead 可以自动备份你的数据库。 要使用此功能，你必须使用 Vagrant 2.1.0 或更高版本。 或者，如果你使用的是旧版本的 Vagrant，则必须安装 <code>vagrant-triggers</code> 插件。要启用自动数据库备份，请将以下行添加到你的 <code>Homestead.yaml</code> 文件中：</p><pre><code>backup: true
</code></pre><p>配置完成后，当执行 <code>vagrant destroy</code> 命令时，Homestead 会将你的数据库导出到 <code>.backup/mysql_backup</code> 和 <code>.backup/postgres_backup</code> 目录。 如果你选择了<a href="#per-project-installation">为项目单独安装</a> Homestead，你可以在项目安装 Homestead 的文件夹中找到这些目录，或者在你的项目根目录中找到它们。</p><p><a name="configuring-cron-schedules"></a></p><h3 id="配置-cron-计划任务" tabindex="-1"><a class="header-anchor" href="#配置-cron-计划任务" aria-hidden="true">#</a> 配置 Cron 计划任务</h3><p>Laravel 提供了一种便捷方式来满足<a href="./scheduling">任务调度</a>，通过 Artisan 命令 <code>schedule:run</code> 实现了定时运行（每分钟执行一次）。 <code>schedule:run</code> 命令将检查在 <code>App\\Console\\Kernel</code> 类中定义的作业计划，以确定要运行哪些计划任务。</p><p>如果你想为 Homestead 站点运行 <code>schedule:run</code> 命令，可以在定义站点时将 <code>schedule</code> 选项设置为 <code>true</code>：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">sites</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">map</span><span class="token punctuation">:</span> homestead.test
      <span class="token key atrule">to</span><span class="token punctuation">:</span> /home/vagrant/project1/public
      <span class="token key atrule">schedule</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>站点的 cron 作业将在 Homestead 虚拟机的 <code>/etc/cron.d</code> 目录中被定义。</p><p><a name="configuring-mailhog"></a></p><h3 id="配置-mailhog" tabindex="-1"><a class="header-anchor" href="#配置-mailhog" aria-hidden="true">#</a> 配置 MailHog</h3>`,25),aa={href:"https://github.com/mailhog/MailHog",target:"_blank",rel:"noopener noreferrer"},ea=a("code",null,".env",-1),na=t(`<div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">MAIL_MAILER</span><span class="token punctuation">=</span><span class="token value attr-value">smtp</span>
<span class="token key attr-name">MAIL_HOST</span><span class="token punctuation">=</span><span class="token value attr-value">localhost</span>
<span class="token key attr-name">MAIL_PORT</span><span class="token punctuation">=</span><span class="token value attr-value">1025</span>
<span class="token key attr-name">MAIL_USERNAME</span><span class="token punctuation">=</span><span class="token value attr-value">null</span>
<span class="token key attr-name">MAIL_PASSWORD</span><span class="token punctuation">=</span><span class="token value attr-value">null</span>
<span class="token key attr-name">MAIL_ENCRYPTION</span><span class="token punctuation">=</span><span class="token value attr-value">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置 MailHog 后，你可以通过 http://localhost:8025 访问 MailHog 仪表盘。</p><p><a name="configuring-minio"></a></p><h3 id="配置-minio" tabindex="-1"><a class="header-anchor" href="#配置-minio" aria-hidden="true">#</a> 配置 Minio</h3>`,4),sa={href:"https://github.com/minio/minio",target:"_blank",rel:"noopener noreferrer"},ta=a("a",{href:"#installing-optional-features"},"features",-1),oa=a("code",null,"Homestead.yaml",-1),la=t(`<pre><code>minio: true
</code></pre><p>默认情况下，Minio 在端口 9600 上可用。你可以通过访问 <code>http://localhost:9600</code> 访问 Minio 控制面板。 默认访问密钥是 <code>homestead</code>，而默认密钥是 <code>secretkey</code>。 访问 Minio 时，应始终使用区域 <code>us-east-1</code></p><p>为了使用 Minio，你需要在应用程序的 <code>config/filesystems.php</code> 配置文件中调整 S3 磁盘配置。 你需要将 <code>use_path_style_endpoint</code> 选项添加到磁盘配置中，并将 <code>url</code> 键更改为 <code>endpoint</code>:</p><pre><code>&#39;s3&#39; =&gt; [
    &#39;driver&#39; =&gt; &#39;s3&#39;,
    &#39;key&#39; =&gt; env(&#39;AWS_ACCESS_KEY_ID&#39;),
    &#39;secret&#39; =&gt; env(&#39;AWS_SECRET_ACCESS_KEY&#39;),
    &#39;region&#39; =&gt; env(&#39;AWS_DEFAULT_REGION&#39;),
    &#39;bucket&#39; =&gt; env(&#39;AWS_BUCKET&#39;),
    &#39;endpoint&#39; =&gt; env(&#39;AWS_URL&#39;),
    &#39;use_path_style_endpoint&#39; =&gt; true,
]
</code></pre><p>最后，确保你的 <code>.env</code> 文件包含以下选项：</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">AWS_ACCESS_KEY_ID</span><span class="token punctuation">=</span><span class="token value attr-value">homestead</span>
<span class="token key attr-name">AWS_SECRET_ACCESS_KEY</span><span class="token punctuation">=</span><span class="token value attr-value">secretkey</span>
<span class="token key attr-name">AWS_DEFAULT_REGION</span><span class="token punctuation">=</span><span class="token value attr-value">us-east-1</span>
<span class="token key attr-name">AWS_URL</span><span class="token punctuation">=</span><span class="token value attr-value">http://localhost:9600</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要配置 Minio 支持的「S3」存储桶，请在你的 <code>Homestead.yaml</code> 文件中添加 <code>buckets</code> 指令。 定义存储桶后，你应该在终端中执行 <code>vagrant reload --provision</code> 命令重载虚拟机：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">buckets</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> your<span class="token punctuation">-</span>bucket
      <span class="token key atrule">policy</span><span class="token punctuation">:</span> public
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> your<span class="token punctuation">-</span>private<span class="token punctuation">-</span>bucket
      <span class="token key atrule">policy</span><span class="token punctuation">:</span> none
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>支持的 <code>policy</code> 值包括：<code>none</code>、<code>download</code>、<code>upload</code> 和 <code>public</code>。</p><p><a name="laravel-dusk"></a></p><h3 id="laravel-dusk-测试工具" tabindex="-1"><a class="header-anchor" href="#laravel-dusk-测试工具" aria-hidden="true">#</a> Laravel Dusk 测试工具</h3><p>为了在 Homestead 中运行 <a href="./duskk">Laravel Dusk</a> 测试，你应该在 Homestead 配置中启用 <a href="#installing-optional-features"><code>webdriver</code> 功能</a>:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">features</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">webdriver</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>启用 <code>webdriver</code> 功能后，你应该在终端中执行 <code>vagrant reload --provision</code> 命令重载虚拟机。</p><p><a name="sharing-your-environment"></a></p><h3 id="共享你的环境" tabindex="-1"><a class="header-anchor" href="#共享你的环境" aria-hidden="true">#</a> 共享你的环境</h3><p>有时，你可能希望与同事或客户分享你目前正在做的事情。 Vagrant 通过 <code>vagrant share</code> 命令内置了对此的支持； 但是，如果你在 <code>Homestead.yaml</code> 文件中配置了多个站点，这个功能将不可用。</p><p>为了解决这个问题，Homestead 包含了自己的 <code>share</code> 命令。 首先，通过 <code>vagrant ssh</code> <a href="#connecting-via-ssh">SSH 到你的 Homestead 虚拟机</a> 并执行 <code>share homestead.test</code> 命令。 此命令将从你的 <code>Homestead.yaml</code> 配置文件中共享 <code>homestead.test</code> 站点。 你可以将任何其他配置的站点替换为 <code>homestead.test</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>share homestead.test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行该命令后，你将看到一个 Ngrok 屏幕出现，其中包含活动日志和共享站点的可公开访问的 URL。 如果你想指定自定义区域、子域或其他 Ngrok 运行时选项，你可以将它们添加到你的 <code>share</code> 命令中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>share homestead.test <span class="token parameter variable">-region</span><span class="token operator">=</span>eu <span class="token parameter variable">-subdomain</span><span class="token operator">=</span>laravel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong><br> 请记住，Vagrant 本质上是不安全的，并且你在运行 <code>share</code> 命令时会将虚拟机暴露在互联网上。</p></blockquote><p><a name="debugging-and-profiling"></a></p><h2 id="调试和分析" tabindex="-1"><a class="header-anchor" href="#调试和分析" aria-hidden="true">#</a> 调试和分析</h2><p><a name="debugging-web-requests"></a></p><h3 id="使用-xdebug-调试-web-请求" tabindex="-1"><a class="header-anchor" href="#使用-xdebug-调试-web-请求" aria-hidden="true">#</a> 使用 Xdebug 调试 Web 请求</h3>`,26),ia={href:"https://xdebug.org",target:"_blank",rel:"noopener noreferrer"},ca=a("code",null,"sudo phpenmod xdebug",-1),da={href:"https://www.jetbrains.com/phpstorm/marklets/",target:"_blank",rel:"noopener noreferrer"},pa=t(`<blockquote><p><strong>注意</strong><br> Xdebug 导致 PHP 运行速度明显变慢。要禁用 Xdebug，请在 Homestead 虚拟机中运行 <code>sudo phpdismod xdebug</code> 并重新启动 FPM 服务。</p></blockquote><p><a name="autostarting-xdebug"></a></p><h4 id="自动启动-xdebug" tabindex="-1"><a class="header-anchor" href="#自动启动-xdebug" aria-hidden="true">#</a> 自动启动 Xdebug</h4><p>在调试向 Web 服务器发出请求的功能测试时，自动启动调试比修改测试以通过自定义标头或 cookie 来触发调试更容易。 要强制 Xdebug 自动启动，请修改 Homestead 虚拟机中的 <code>/etc/php/7.x/fpm/conf.d/20-xdebug.ini</code> 文件并添加以下配置:</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment">; 如果 Homestead.yaml 包含 IP 地址的不同子网，则这个 IP 地址可能会不一样</span>
<span class="token key attr-name">xdebug.client_host</span> <span class="token punctuation">=</span> <span class="token value attr-value">192.168.10.1</span>
<span class="token key attr-name">xdebug.mode</span> <span class="token punctuation">=</span> <span class="token value attr-value">debug</span>
<span class="token key attr-name">xdebug.start_with_request</span> <span class="token punctuation">=</span> <span class="token value attr-value">yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="debugging-cli-applications"></a></p><h3 id="调试-cli-应用程序" tabindex="-1"><a class="header-anchor" href="#调试-cli-应用程序" aria-hidden="true">#</a> 调试 CLI 应用程序</h3><p>要调试 PHP CLI 应用程序，请在 Homestead 虚拟机中使用 <code>xphp</code> shell 别名：</p><pre><code>xphp /path/to/script
</code></pre><p><a name="profiling-applications-with-blackfire"></a></p><h3 id="使用-blackfire-分析应用程序" tabindex="-1"><a class="header-anchor" href="#使用-blackfire-分析应用程序" aria-hidden="true">#</a> 使用 Blackfire 分析应用程序</h3>`,11),ra={href:"https://blackfire.io/docs/introduction",target:"_blank",rel:"noopener noreferrer"},ua=a("code",null,"php.ini",-1),ma={href:"https://blackfire.io/docs/player/index",target:"_blank",rel:"noopener noreferrer"},ha=t(`<p>要启用 Blackfire，请使用 Homestead 配置文件中的「features」配置项：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">features</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">blackfire</span><span class="token punctuation">:</span>
        <span class="token key atrule">server_id</span><span class="token punctuation">:</span> <span class="token string">&quot;server_id&quot;</span>
        <span class="token key atrule">server_token</span><span class="token punctuation">:</span> <span class="token string">&quot;server_value&quot;</span>
        <span class="token key atrule">client_id</span><span class="token punctuation">:</span> <span class="token string">&quot;client_id&quot;</span>
        <span class="token key atrule">client_token</span><span class="token punctuation">:</span> <span class="token string">&quot;client_value&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),va={href:"https://blackfire.io/signup",target:"_blank",rel:"noopener noreferrer"},ka={href:"https://blackfire.io/docs/php/integrations/laravel/index",target:"_blank",rel:"noopener noreferrer"},ba=t(`<p><a name="network-interfaces"></a></p><h2 id="网络接口" tabindex="-1"><a class="header-anchor" href="#网络接口" aria-hidden="true">#</a> 网络接口</h2><p><code>Homestead.yaml</code> 文件的 <code>networks</code> 属性为你的 Homestead 虚拟机配置网络接口。 你可以根据需要配置任意数量的接口：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">networks</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;private_network&quot;</span>
      <span class="token key atrule">ip</span><span class="token punctuation">:</span> <span class="token string">&quot;192.168.10.20&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),ga={href:"https://www.vagrantup.com/docs/networking/public_network.html",target:"_blank",rel:"noopener noreferrer"},ya=a("code",null,"bridge",-1),fa=a("code",null,"public_network",-1),_a=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">networks</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;public_network&quot;</span>
      <span class="token key atrule">ip</span><span class="token punctuation">:</span> <span class="token string">&quot;192.168.10.20&quot;</span>
      <span class="token key atrule">bridge</span><span class="token punctuation">:</span> <span class="token string">&quot;en1: Wi-Fi (AirPort)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Ha={href:"https://www.vagrantup.com/docs/networking/public_network.html",target:"_blank",rel:"noopener noreferrer"},xa=a("code",null,"ip",-1),qa=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">networks</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;public_network&quot;</span>
      <span class="token key atrule">bridge</span><span class="token punctuation">:</span> <span class="token string">&quot;en1: Wi-Fi (AirPort)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="extending-homestead"></a></p><h2 id="扩展-homestead" tabindex="-1"><a class="header-anchor" href="#扩展-homestead" aria-hidden="true">#</a> 扩展 Homestead</h2><p>你可以使用 Homestead 目录根目录中的 <code>after.sh</code> 脚本扩展 Homestead。 在此文件中，你可以添加正确配置和自定义虚拟机所需的任何 shell 命令。</p><p>当你自定义 Homestead 时，Ubuntu 可能会询问你是要保留软件包的原始配置还是使用新的配置文件覆盖它。 为了避免这种情况，你应该在安装软件包时使用以下命令，以避免覆盖 Homestead 之前编写的任何配置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token parameter variable">-y</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-o</span> Dpkg::Options::<span class="token operator">=</span><span class="token string">&quot;--force-confdef&quot;</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-o</span> Dpkg::Options::<span class="token operator">=</span><span class="token string">&quot;--force-confold&quot;</span> <span class="token punctuation">\\</span>
    <span class="token function">install</span> package-name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="user-customizations"></a></p><h3 id="用户自定义" tabindex="-1"><a class="header-anchor" href="#用户自定义" aria-hidden="true">#</a> 用户自定义</h3><p>与你的团队一起使用 Homestead 时，你可能需要调整 Homestead 以更好地适应你的个人开发风格。 为此，你可以在 Homestead 目录（包含 <code>Homestead.yaml</code> 文件的同一目录）的根目录中创建一个 <code>user-customizations.sh</code> 文件。 在此文件中，你可以进行任何你想要的自定义； 但是， <code>user-customizations.sh</code> 不应受版本管理工具控制。</p><p><a name="provider-specific-settings"></a></p><h2 id="针对虚拟机软件的特殊设置" tabindex="-1"><a class="header-anchor" href="#针对虚拟机软件的特殊设置" aria-hidden="true">#</a> 针对虚拟机软件的特殊设置</h2><p><a name="provider-specific-virtualbox"></a></p><h3 id="virtualbox" tabindex="-1"><a class="header-anchor" href="#virtualbox" aria-hidden="true">#</a> VirtualBox</h3><p><a name="natdnshostresolver"></a></p><h4 id="natdnshostresolver" tabindex="-1"><a class="header-anchor" href="#natdnshostresolver" aria-hidden="true">#</a> <code>natdnshostresolver</code></h4><p>默认情况下，Homestead 将 <code>natdnshostresolver</code> 设置配置为 <code>on</code>。 这允许 Homestead 使用你的主机操作系统的 DNS 设置。 如果你想覆盖此行为，请将以下配置选项添加到你的 <code>Homestead.yaml</code> 文件中：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">provider</span><span class="token punctuation">:</span> virtualbox
<span class="token key atrule">natdnshostresolver</span><span class="token punctuation">:</span> <span class="token string">&#39;off&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="symbolic-links-on-windows"></a></p><h4 id="windows-上的符号链接" tabindex="-1"><a class="header-anchor" href="#windows-上的符号链接" aria-hidden="true">#</a> Windows 上的符号链接</h4><p>如果符号链接在你的 Windows 机器上不能正常工作，你可能需要将以下代码块添加到你的 <code>Vagrantfile</code>：</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>provider <span class="token string-literal"><span class="token string">&quot;virtualbox&quot;</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>v<span class="token operator">|</span>
    v<span class="token punctuation">.</span>customize <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;setextradata&quot;</span></span><span class="token punctuation">,</span> <span class="token symbol">:id</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;1&quot;</span></span><span class="token punctuation">]</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function wa(Pa,Sa){const n=l("ExternalLinkIcon");return i(),c("div",null,[p,a("p",null,[e("Laravel 致力于让整个 PHP 开发体验变得愉悦，包括您的本地开发环境。 "),a("a",r,[e("Laravel Homestead"),s(n)]),e(" 是一个官方的预封装的 Vagrant box 套件，它为你提供了一个绝佳的开发环境，而无需你在本地机器上安装 PHP、Web 服务器及任何其他服务器软件。")]),a("p",null,[a("a",u,[e("Vagrant"),s(n)]),e(" 提供了一种简单、优雅的方式来管理和配置虚拟机。 Vagrant Box 完全是一次性的。如果出现问题，你可以在几分钟内销毁并重新创建 Box !")]),m,h,v,k,b,g,y,f,_,a("p",null,[e("在启动 Homestead 环境之前，你必须安装 "),a("a",H,[e("Vagrant"),s(n)]),e(" 及以下受支持的虚拟机之一：")]),a("ul",null,[a("li",null,[a("a",x,[e("VirtualBox 6.1.x"),s(n)])]),a("li",null,[a("a",q,[e("Parallels"),s(n)])])]),w,a("p",null,[e("如果要使用 Parallels 提供虚拟机服务，你需要安装 "),a("a",P,[e("Parallels Vagrant plug-in"),s(n)]),e("。这个插件是免费的。")]),S,a("p",null,[e("要启用 "),a("a",L,[e("NFS"),s(n)]),e("，你可以在文件夹映射中添加一个 "),M,e(" 选项：")]),B,a("blockquote",null,[a("p",null,[V,W,e(" 在 Windows 上使用 NFS 时，应考虑安装 "),a("a",C,[e("vagrant-winnfsd"),s(n)]),e(" 插件。 该插件将维护 Homestead 虚拟机中文件和目录的正确用户 / 组权限。")])]),a("p",null,[e("你还可以通过在 "),j,e(" 键下列出它们来传递 Vagrant 的 "),a("a",E,[e("同步文件夹"),s(n)]),e(" 支持的任何选项：")]),A,a("p",null,[e("Homestead 使用 "),I,e(" 发布主机名以进行自动主机解析。 如果你在 "),N,e(" 文件中设置 "),D,e("，主机将在 "),O,e(" 中可用。 macOS、iOS 和 Linux 桌面发行版默认包含 "),T,e(" 支持。 如果你使用的是 Windows，则必须安装 "),a("a",R,[e("Bonjour Print Services for Windows"),s(n)]),e("。")]),Q,a("blockquote",null,[a("p",null,[U,F,e(" 查看 "),a("a",X,[e("Elasticsearch 文档"),s(n)]),e(" 了解如何自定义你的配置.")])]),G,a("p",null,[e("这些命令会从 Github 存储库中拉取最新的 Homestead 仓库代码到本地，包括最新的标签版本。你可以在 Homestead 的 "),a("a",z,[e("GitHub 发布页面"),s(n)]),e(" 上找到最新的稳定版本。")]),K,Y,Z,J,$,a("p",null,[a("a",aa,[e("MailHog"),s(n)]),e(" 会在你本地开发的过程中拦截应用程序发送的电子邮件，而不是将邮件实际发送给收件人。如果要使用 MailHog，你需要参考以下邮件配置并更新应用程序的 "),ea,e(" 文件：")]),na,a("p",null,[a("a",sa,[e("Minio"),s(n)]),e(" 是一个具有 Amazon S3 兼容 API 的开源对象存储服务器。 要安装 Minio，请使用 "),ta,e(" 部分中的以下配置选项更新你的 "),oa,e(" 文件")]),la,a("p",null,[e("Homestead 支持使用 "),a("a",ia,[e("Xdebug"),s(n)]),e(" 进行步骤调试。例如，你可以在浏览器中访问一个页面，PHP 将连接到你的 IDE 以允许检查和修改正在运行的代码。")]),a("p",null,[e("默认情况下，Xdebug 将自动运行并准备好接受连接。 如果需要在 CLI 上启用 Xdebug，请在 Homestead 虚拟机中执行 "),ca,e(" 命令。接下来，按照 IDE 的说明启用调试。最后，配置你的浏览器以使用扩展或 "),a("a",da,[e("bookmarklet"),s(n)]),e(" 触发 Xdebug。")]),pa,a("p",null,[a("a",ra,[e("Blackfire"),s(n)]),e(" 是一种用于分析 Web 请求和 CLI 应用程序的服务。它提供了一个交互式用户界面，可在调用图和时间线中显示配置文件数据。Blackfire 专为在开发、登台和生产中使用而构建，对最终用户没有任何开销。此外，Blackfire 还提供对代码和 "),ua,e(" 配置设置的性能、质量和安全检查。")]),a("p",null,[a("a",ma,[e("Blackfire Player"),s(n)]),e(" 是一个开源的 Web 爬行、Web 测试和 Web 抓取应用程序，可以与 Blackfire 联合使用以编写分析场景的脚本。")]),ha,a("p",null,[e("Blackfire 服务器凭据和客户端凭据需要使用 "),a("a",va,[e("Blackfire 帐户"),s(n)]),e("。 Blackfire 提供了多种选项来分析应用程序，包括 CLI 工具和浏览器扩展。 请查看 "),a("a",ka,[e("Blackfire 文档"),s(n)]),e("以获取更多详细信息。")]),ba,a("p",null,[e("要启用 "),a("a",ga,[e("bridged"),s(n)]),e(" 接口，请为将网络配置调整为 "),ya,e(" 并将网络类型更改为 "),fa,e("：")]),_a,a("p",null,[e("要启用 "),a("a",Ha,[e("DHCP"),s(n)]),e(" 功能，你只需从配置中删除 "),xa,e(" 选项：")]),qa])}const Ba=o(d,[["render",wa],["__file","homestead.html.vue"]]);export{Ba as default};
