import{_ as s}from"./breeze-register-9ebfbf26.js";import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as d,c as o,b as a,d as e,e as n,a as t}from"./app-8cdff07c.js";const c={},h=t('<h1 id="起步套件" tabindex="-1"><a class="header-anchor" href="#起步套件" aria-hidden="true">#</a> 起步套件</h1><ul><li><a href="#introduction">介绍</a></li><li><a href="#laravel-breeze">Laravel Breeze</a><ul><li><a href="#laravel-breeze-installation">安装</a></li><li><a href="#breeze-and-blade">Breeze &amp; Blade</a></li><li><a href="#breeze-and-inertia">Breeze &amp; React / Vue</a></li><li><a href="#breeze-and-next">Breeze &amp; Next.js / API</a></li></ul></li><li><a href="#laravel-jetstream">Laravel Jetstream</a></li></ul><p><a name="introduction"></a></p><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>为了帮助你快速构建 Laravel 应用，我们很高兴提供认证和应用程序起始套件。这些套件会自动使用所需的路由、控制器和视图来注册和验证应用程序的用户。</p><p>虽然你可以使用这些起始套件，但它们并非必需品。你可以通过安装全新的 Laravel 来从头开始构建自己的应用程序。无论你选择哪种方式，我们相信你都能构建出很棒的应用程序！</p><p><a name="laravel-breeze"></a></p><h2 id="laravel-breeze" tabindex="-1"><a class="header-anchor" href="#laravel-breeze" aria-hidden="true">#</a> Laravel Breeze</h2>',8),p={href:"https://github.com/laravel/breeze",target:"_blank",rel:"noopener noreferrer"},v=a("a",{href:"./authentication"},"认证功能",-1),u=a("a",{href:"./blade"},"Blade 模版",-1),b={href:"https://tailwindcss.com",target:"_blank",rel:"noopener noreferrer"},m={href:"https://inertiajs.com",target:"_blank",rel:"noopener noreferrer"},_={href:"https://laravel-livewire.com",target:"_blank",rel:"noopener noreferrer"},f=a("img",{src:s},null,-1),z=a("h4",{id:"laravel-训练营",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#laravel-训练营","aria-hidden":"true"},"#"),e(" Laravel 训练营")],-1),g={href:"https://bootcamp.laravel.com",target:"_blank",rel:"noopener noreferrer"},L=t(`<p><a name="laravel-breeze-installation"></a></p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><p>首先，你应该 <a href="./installation">创建一个新的 Laravel 应用程序</a>，配置好数据库并运行 <a href="./migrations">数据库迁移</a>。在创建了一个新的 Laravel 应用程序之后，你可以使用 Composer 来安装 Laravel Breeze：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require laravel/breeze <span class="token parameter variable">--dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完 Breeze 后，你可以使用下文中提到的 Breeze「栈」来快速构建你的应用程序。</p><p><a name="breeze-and-blade"></a></p><h3 id="breeze-blade" tabindex="-1"><a class="header-anchor" href="#breeze-blade" aria-hidden="true">#</a> Breeze &amp; Blade</h3><p>在使用 Composer 安装好 Laravel Breeze 之后，你可以运行 <code>breeze:install</code> Artisan 命令。这个命令会将身份验证视图、路由、控制器和其他资源复制到你的应用程序中。Laravel Breeze 将其所有代码都复制到你的应用程序中，这样你就可以完全控制和查看其功能和实现。</p><p>默认的 Breeze「栈」是 Blade 栈，它使用简单的 <a href="./blade">Blade 模板</a> 来渲染你的应用程序前端。你可以通过调用 <code>breeze:install</code> 命令来安装 Blade 栈，而无需其他额外的参数。在 Breeze 的脚手架安装完后，你还需要编译应用程序的前端资源：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan breeze:install

php artisan migrate
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，你可以在 Web 浏览器中打开应用程序的 <code>/login</code> 或 <code>/register</code> 的 URL。所有 Breeze 的路由都定义在 <code>routes/auth.php</code> 文件中。</p><p><a name="dark-mode"></a></p><h4 id="黑暗模式" tabindex="-1"><a class="header-anchor" href="#黑暗模式" aria-hidden="true">#</a> 黑暗模式</h4><p>如果你希望 Breeze 在构建应用程序前端时支持「黑暗模式」，只需要在执行 <code>breeze:install</code> 命令时提供 <code>--dark</code> 指令即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan breeze:install <span class="token parameter variable">--dark</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong> 要了解有关编译应用程序的 CSS 和 JavaScript 的更多信息，请查看 Laravel 的 <a href="./vite#running-vite">Vite 编译 Assets</a>.</p></blockquote><p><a name="breeze-and-inertia"></a></p><h3 id="breeze-react-vue" tabindex="-1"><a class="header-anchor" href="#breeze-react-vue" aria-hidden="true">#</a> Breeze &amp; React / Vue</h3>`,18),B={href:"https://inertiajs.com",target:"_blank",rel:"noopener noreferrer"},x={href:"https://vitejs.dev",target:"_blank",rel:"noopener noreferrer"},k=a("code",null,"breeze:install",-1),j=a("code",null,"vue",-1),R=a("code",null,"react",-1),I=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan breeze:install vue

<span class="token comment"># 或者。。。</span>

php artisan breeze:install react

php artisan migrate
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，你就可以在浏览器中访问 <code>/login</code> 或 <code>/register</code> URL。 Breeze 的所有路由都在 <code>routes/auth.php</code> 文件中定义。</p><p><a name="server-side-rendering"></a></p><h4 id="服务器端渲染" tabindex="-1"><a class="header-anchor" href="#服务器端渲染" aria-hidden="true">#</a> 服务器端渲染</h4>`,4),S={href:"https://inertiajs.com/server-side-rendering",target:"_blank",rel:"noopener noreferrer"},N=a("code",null,"breeze:install",-1),V=a("code",null,"ssr",-1),J=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan breeze:install vue <span class="token parameter variable">--ssr</span>
php artisan breeze:install react <span class="token parameter variable">--ssr</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="breeze-and-next"></a></p><h3 id="breeze-next-js-api" tabindex="-1"><a class="header-anchor" href="#breeze-next-js-api" aria-hidden="true">#</a> Breeze &amp; Next.js / API</h3>`,3),A={href:"https://nextjs.org/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://nuxtjs.org/",target:"_blank",rel:"noopener noreferrer"},U=a("code",null,"breeze:install",-1),C=a("code",null,"api",-1),P=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan breeze:install api

php artisan migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在安装期间，Breeze 将在应用程序的 <code>.env</code> 文件中添加 <code>FRONTEND_URL</code> 环境变量。该 URL 应该是你的 JavaScript 应用程序的 URL。在本地开发期间，这通常是 <code>http://localhost:3000</code>。另外，你应该确保 <code>APP_URL</code> 设置为 <code>http://localhost:8000</code>，这是 <code>serve</code> Artisan 命令使用的默认 URL。</p><p><a name="next-reference-implementation"></a></p><h4 id="next-js-参考实现" tabindex="-1"><a class="header-anchor" href="#next-js-参考实现" aria-hidden="true">#</a> Next.js 参考实现</h4>`,4),E={href:"https://github.com/laravel/breeze-next",target:"_blank",rel:"noopener noreferrer"},T=a("p",null,[a("a",{name:"laravel-jetstream"})],-1),q=a("h2",{id:"laravel-jetstream",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#laravel-jetstream","aria-hidden":"true"},"#"),e(" Laravel Jetstream")],-1),D=a("p",null,[e("虽然 Laravel Breeze 为构建 Laravel 应用程序提供了简单和最小的起点，但 Jetstream 通过更强大的功能和附加的前端技术栈增强了该功能。"),a("strong",null,"对于全新接触 Laravel 的用户，我们建议使用 Laravel Breeze 学习一段时间后再尝试 Laravel Jetstream。")],-1),F={href:"https://tailwindcss.com/",target:"_blank",rel:"noopener noreferrer"},G={href:"https://laravel-livewire.com/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://inertiajs.com/",target:"_blank",rel:"noopener noreferrer"},K={href:"https://jetstream.laravel.com/3.x/introduction.html",target:"_blank",rel:"noopener noreferrer"};function O(W,y){const r=i("ExternalLinkIcon");return d(),o("div",null,[h,a("p",null,[a("a",p,[e("Laravel Breeze"),n(r)]),e(" 是 Laravel 的 "),v,e(" 的一种简单、最小实现，包括登录、注册、密码重置、电子邮件验证和密码确认。此外，Breeze 还包括一个简单的「个人资料」页面，用户可以在该页面上更新其姓名、电子邮件地址和密码。")]),a("p",null,[e("Laravel Breeze 的默认视图层由简单的 "),u,e(" 和 "),a("a",b,[e("Tailwind CSS"),n(r)]),e(" 组成。除此之外，Breeze 还可以使用 Vue 或 React 和 "),a("a",m,[e("Inertia"),n(r)]),e(" 来构建应用。")]),a("p",null,[e("Breeze 为开始全新的 Laravel 应用程序提供了很好的起点，并且对于打算使用 "),a("a",_,[e("Laravel Livewire"),n(r)]),e(" 将 Blade 模板提升新的水平的项目来说，也是一个不错的选择。")]),f,z,a("p",null,[e("如果你是 Laravel 的新手，欢迎加入 "),a("a",g,[e("Laravel 训练营"),n(r)]),e("。 Laravel 训练营将带领你通过使用 Breeze 构建你的第一个 Laravel 应用程序。这是一个很好的方式，让你了解 Laravel 和 Breeze 提供的所有功能。")]),L,a("p",null,[e("Laravel Breeze 还通过 "),a("a",B,[e("Inertia"),n(r)]),e(" 前端实现提供 React 和 Vue 脚手架。 Inertia 允许你使用经典的服务器端路由和控制器构建目前流行的单页 React 和 Vue 应用程序。")]),a("p",null,[e("Inertia 让你享受 React 和 Vue 的前端强大功能以及 Laravel 令人难以置信的后端生产力和快如闪电的 "),a("a",x,[e("Vite"),n(r)]),e(" 编译。 如果要指定技术栈，请在执行 "),k,e(" Artisan 命令时指定 "),j,e(" 或 "),R,e(" 作为你想要的技术栈。 安装 Breeze 的脚手架后，你就可以安装依赖及运行前端项目：")]),I,a("p",null,[e("如果你希望 Breeze 支持 "),a("a",S,[e("Inertia SSR"),n(r)]),e("，你可以在调用 "),N,e(" 命令时提供 "),V,e(" 选项：")]),J,a("p",null,[e("Laravel Breeze 还可以生成身份验证 API，可以准备验证现代 JavaScript 应用程序，例如由 "),a("a",A,[e("Next"),n(r)]),e("，"),a("a",w,[e("Nuxt"),n(r)]),e(" 等驱动的应用。要开始，请在执行 "),U,e(" Artisan 命令时指定 "),C,e(" 堆栈作为所需的堆栈：")]),P,a("p",null,[e("最后，你可以将此后端与你选择的前端配对。Breeze 前端的 Next 参考实现在 "),a("a",E,[e("在GitHub上提供"),n(r)]),e("。此前端由 Laravel 维护，并包含与 Breeze 提供的传统 Blade 和 Inertia 堆栈相同的用户界面。")]),T,q,D,a("p",null,[e("Jetstream 为 Laravel 提供了美观的应用程序脚手架，并包括登录、注册、电子邮件验证、双因素身份验证、会话管理、通过 Laravel Sanctum 支持的 API 以及可选的团队管理。Jetstream 使用 "),a("a",F,[e("Tailwind CSS"),n(r)]),e(" 设计，并提供你选择使用 "),a("a",G,[e("Livewire"),n(r)]),e(" 或 "),a("a",H,[e("Inertia"),n(r)]),e(" 驱动的前端脚手架。")]),a("p",null,[e("有关安装 Laravel Jetstream 的完整文档，请参阅 "),a("a",K,[e("Jetstream 官方文档"),n(r)]),e("。")])])}const Y=l(c,[["render",O],["__file","starter-kits.html.vue"]]);export{Y as default};
