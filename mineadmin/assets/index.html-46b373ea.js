import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as d,b as e,e as n,d as s,a as t}from"./app-719eb5cf.js";const o={},c=e("h1",{id:"快速开始",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#快速开始","aria-hidden":"true"},"#"),n(" 快速开始")],-1),p=e("h2",{id:"所需环境",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#所需环境","aria-hidden":"true"},"#"),n(" 所需环境")],-1),u=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"环境"),e("th",{style:{"text-align":"center"}},"描述"),e("th",{style:{"text-align":"center"}},"是否必须"),e("th",{style:{"text-align":"center"}},"操作")])],-1),h=e("td",{style:{"text-align":"center"}},"Swoole",-1),_=e("td",{style:{"text-align":"center"}},"Swoole >= 4.8.x，Hyperf框架运行基础基于Swoole",-1),v=e("td",{style:{"text-align":"center"}},"必须",-1),m={style:{"text-align":"center"}},b={href:"https://wiki.swoole.com/#/environment",target:"_blank",rel:"noopener noreferrer"},g=e("tr",null,[e("td",{style:{"text-align":"center"}},"PHP"),e("td",{style:{"text-align":"center"}},"PHP >= 8.0"),e("td",{style:{"text-align":"center"}},"必须"),e("td",{style:{"text-align":"center"}},"-")],-1),x=e("tr",null,[e("td",{style:{"text-align":"center"}},"Mysql"),e("td",{style:{"text-align":"center"}},"Mysql >= 5.7 且 <= 8.0 (需支持innodb引擎、开发环境为5.7版本)"),e("td",{style:{"text-align":"center"}},"必须"),e("td",{style:{"text-align":"center"}},"-")],-1),k=e("tr",null,[e("td",{style:{"text-align":"center"}},"NodeJs"),e("td",{style:{"text-align":"center"}},"NodeJs >= 14.18.3 前端开发环境 (包含NPM依赖安装工具)"),e("td",{style:{"text-align":"center"}},"必须"),e("td",{style:{"text-align":"center"}},"-")],-1),f=e("tr",null,[e("td",{style:{"text-align":"center"}},"Composer"),e("td",{style:{"text-align":"center"}},"Composer >= 2.x.x PHP依赖包安装工具"),e("td",{style:{"text-align":"center"}},"必须"),e("td",{style:{"text-align":"center"}},"-")],-1),y=e("tr",null,[e("td",{style:{"text-align":"center"}},"Redis"),e("td",{style:{"text-align":"center"}},"Redis >= 4.0.0"),e("td",{style:{"text-align":"center"}},"必须"),e("td",{style:{"text-align":"center"}},"-")],-1),w=e("tr",null,[e("td",{style:{"text-align":"center"}},"RabbitMQ"),e("td",{style:{"text-align":"center"}},"RabbitMQ >= 3.x.x，消息队列所需软件，系统默认未开启队列功能"),e("td",{style:{"text-align":"center"}},"非必须"),e("td",{style:{"text-align":"center"}},"-")],-1),E=t(`<h2 id="开放被禁用的函数" tabindex="-1"><a class="header-anchor" href="#开放被禁用的函数" aria-hidden="true">#</a> 开放被禁用的函数</h2><div class="hint-container tip"><p class="hint-container-title">开放以下函数</p><ul><li>putenv</li><li>shell_exec</li><li>proc_open</li><li>pcntl_ 开头的函数</li></ul></div><p>或者打开 <code>php.ini</code> （命令行版本），查找 <code>disable_functions</code> 关键字，复制下面文本，替换原有的：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>disable_functions = passthru,system,chroot,chgrp,chown,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,imap_open,apache_setenv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="关闭swoole短名称" tabindex="-1"><a class="header-anchor" href="#关闭swoole短名称" aria-hidden="true">#</a> 关闭Swoole短名称</h2><p>打开 <code>php.ini</code> 在最后一行加入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>swoole.use_shortname = &#39;Off&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="下载代码" tabindex="-1"><a class="header-anchor" href="#下载代码" aria-hidden="true">#</a> 下载代码</h2><h3 id="下载后端代码" tabindex="-1"><a class="header-anchor" href="#下载后端代码" aria-hidden="true">#</a> 下载后端代码</h3>`,9),A={href:"https://github.com/kanyxmo/mineadmin",target:"_blank",rel:"noopener noreferrer"},B={href:"https://gitee.com/mineadmin/mineadmin",target:"_blank",rel:"noopener noreferrer"},G=e("h3",{id:"下载前端代码",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#下载前端代码","aria-hidden":"true"},"#"),n(" 下载前端代码")],-1),P={href:"https://github.com/kanyxmo/mineadmin-vue",target:"_blank",rel:"noopener noreferrer"},M={href:"https://gitee.com/mineadmin/mineadmin-vue",target:"_blank",rel:"noopener noreferrer"},N=t('<div class="hint-container warning"><p class="hint-container-title">小建议</p><p>可以在后端根目录建一个 web 目录，把前端的源代码放在这个 web 目录下，这样方便更好管理项目</p></div><h2 id="后端安装与启动" tabindex="-1"><a class="header-anchor" href="#后端安装与启动" aria-hidden="true">#</a> 后端安装与启动</h2><h3 id="后端安装" tabindex="-1"><a class="header-anchor" href="#后端安装" aria-hidden="true">#</a> 后端安装</h3>',3),q={class:"hint-container tip"},C=e("p",{class:"hint-container-title"},"Tips",-1),F=e("p",null,[n("后端安装需要执行"),e("strong",null,"两次安装命令"),n("，"),e("strong",null,"第一次"),n("是为了生成 "),e("code",null,".env"),n(" 文件，"),e("strong",null,"第二次"),n("是安装数据。")],-1),R=e("code",null,".env.example",-1),S=e("code",null,".env",-1),V={href:"/faqs/#%E5%89%8D%E7%AB%AF%E7%99%BB%E5%BD%95%E6%8F%90%E7%A4%BA-%E6%9C%AA%E7%9F%A5%E9%94%99%E8%AF%AF",target:"_blank",rel:"noopener noreferrer"},H=t(`<ul><li>打开终端，进入到后端根目录，按照以下命令安装后端</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入到后端根目录</span>
<span class="token builtin class-name">cd</span> mineadmin

<span class="token comment"># 安装依赖</span>
<span class="token function">composer</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一遍安装：生成 <code>.env</code> 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 显示安装欢迎语之后，然后按照提示一步步完成安装。一些跟自己的默认值相同的可以按 \`回车\` 跳过</span>
php bin/hyperf.php mine:install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>没有任何数据未连接成功等相关报错，遇到以下提示后，按 <code>ctrl+c</code> 关闭服务，重启执行安装命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Reset the <span class="token string">&quot;.env&quot;</span> file. Please restart the <span class="token function">service</span> before running 
the installation <span class="token builtin class-name">command</span> to <span class="token builtin class-name">continue</span> the installation.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>第二遍安装：建立数据表和填充表初始数据，提示以下语句后，按 <code>回车</code> 执行即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Do you want to <span class="token builtin class-name">continue</span> with the installation program? <span class="token punctuation">(</span>yes/no<span class="token punctuation">)</span> <span class="token punctuation">[</span>yes<span class="token punctuation">]</span>:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>待显示以下信息，系统已经安装完成。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/---------------------- welcome to use -----------------------<span class="token punctuation">\\</span>
<span class="token operator">|</span>               _                ___       __          _      <span class="token operator">|</span>
<span class="token operator">|</span>    ____ ___  <span class="token punctuation">(</span>_<span class="token punctuation">)</span>___  _____    /   <span class="token operator">|</span> ____/ /___ ___  <span class="token punctuation">(</span>_<span class="token punctuation">)</span>___  <span class="token operator">|</span>
<span class="token operator">|</span>   / __ <span class="token variable"><span class="token variable">\`</span>__ <span class="token punctuation">\\</span>/ / __ <span class="token punctuation">\\</span>/ ___/   / /<span class="token operator">|</span> <span class="token operator">|</span>/ __  / __ <span class="token variable">\`</span></span>__ <span class="token punctuation">\\</span>/ / __ <span class="token punctuation">\\</span> <span class="token operator">|</span>
<span class="token operator">|</span>  / / / / / / / / / / /__/   / ___ / /_/ / / / / / / / / / / <span class="token operator">|</span>
<span class="token operator">|</span> /_/ /_/ /_/_/_/ /_/<span class="token punctuation">\\</span>___/   /_/  <span class="token operator">|</span>_<span class="token punctuation">\\</span>__,_/_/ /_/ /_/_/_/ /_/  <span class="token operator">|</span>
<span class="token operator">|</span>                                                             <span class="token operator">|</span>
<span class="token punctuation">\\</span>_____________  Copyright MineAdmin <span class="token number">2021</span> ~ <span class="token number">2022</span>  _____________<span class="token operator">|</span>
MineAdmin Version: <span class="token number">1.0</span>.0
default username: superAdmin
default password: admin123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动后端" tabindex="-1"><a class="header-anchor" href="#启动后端" aria-hidden="true">#</a> 启动后端</h3><p>开发环境可以使用热更新方式来启动，在根目录执行下面的启动命令即可 <strong>（生产环境不要用热更新）</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php <span class="token function">watch</span> <span class="token parameter variable">-c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>官方启动命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php bin/hyperf.php start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),D={class:"hint-container tip"},T=e("p",{class:"hint-container-title"},"Tips",-1),I={href:"https://hyperf.wiki/2.2/#/zh-cn/watcher",target:"_blank",rel:"noopener noreferrer"},J=t(`<h2 id="前端安装与启动" tabindex="-1"><a class="header-anchor" href="#前端安装与启动" aria-hidden="true">#</a> 前端安装与启动</h2><h3 id="前端安装" tabindex="-1"><a class="header-anchor" href="#前端安装" aria-hidden="true">#</a> 前端安装</h3><ul><li>打开终端，进入到前端根目录，按照以下命令安装前端依赖</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入到后端根目录</span>
<span class="token builtin class-name">cd</span> mineadmin-vue

<span class="token comment"># 安装依赖</span>
<span class="token function">yarn</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动前端" tabindex="-1"><a class="header-anchor" href="#启动前端" aria-hidden="true">#</a> 启动前端</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="前端打包" tabindex="-1"><a class="header-anchor" href="#前端打包" aria-hidden="true">#</a> 前端打包</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="前端预览" tabindex="-1"><a class="header-anchor" href="#前端预览" aria-hidden="true">#</a> 前端预览</h3><p>在前端打包后，可以以web服务器方式预览打包后的兼容性等问题，这是部署前必要的操作。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> preview
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11);function L(Q,z){const a=l("ExternalLinkIcon");return r(),d("div",null,[c,p,e("table",null,[u,e("tbody",null,[e("tr",null,[h,_,v,e("td",m,[e("a",b,[n("安装教程"),s(a)])])]),g,x,k,f,y,w])]),E,e("ul",null,[e("li",null,[n("后端Github仓库地址："),e("a",A,[n("Github 后端"),s(a)])]),e("li",null,[n("后端Gitee仓库地址："),e("a",B,[n("Gitee 后端"),s(a)])])]),G,e("ul",null,[e("li",null,[n("前端Github仓库地址："),e("a",P,[n("Github 前端"),s(a)])]),e("li",null,[n("前端Gitee仓库地址："),e("a",M,[n("Gitee 前端"),s(a)])])]),N,e("div",q,[C,F,e("blockquote",null,[e("p",null,[n("如果自行复制 "),R,n(" 文件改名成 "),S,n(" 后只需要执行一次，但在用户登录时会出现报错，可参考这里解决："),e("a",V,[n("解决方法"),s(a)])])])]),H,e("div",D,[T,e("p",null,[n("也可以使用官方的"),e("a",I,[n("热更新插件"),s(a)])])]),J])}const K=i(o,[["render",L],["__file","index.html.vue"]]);export{K as default};
