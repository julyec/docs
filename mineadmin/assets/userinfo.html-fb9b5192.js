const e=JSON.parse('{"key":"v-ab4229b0","path":"/further/mustLearn/userinfo.html","title":"获取用户信息","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"前端获取方式","slug":"前端获取方式","link":"#前端获取方式","children":[{"level":4,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]}]},{"level":2,"title":"后端获取方式","slug":"后端获取方式","link":"#后端获取方式","children":[{"level":4,"title":"使用方式","slug":"使用方式-1","link":"#使用方式-1","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.65,"words":495},"filePathRelative":"further/mustLearn/userinfo.md","excerpt":"<h1> 获取用户信息</h1>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">Tips</p>\\n<p>在实际项目中，使用当前登录用户的一些信息是非常常见的，MineAdmin在前后各端都有获取当前登录用户信息的方式</p>\\n</div>\\n<h2> 前端获取方式</h2>\\n<p>在前端中，用户信息存放在 <code>store</code> 中，也就是 <code>Pinia</code> 的状态管理，这个是Vue配套的全局状态管理程序，在下一次浏览器刷新前的生命周期内一直存在，而且会被实时监听数据的变化，同时，在所有的vue页面或者js文件中都可以调用及使用。</p>"}');export{e as data};
